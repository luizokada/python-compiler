Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    DOUBLE

Grammar

Rule 0     S' -> main
Rule 1     main -> type MAIN param scope
Rule 2     scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS
Rule 3     new_scope -> <empty>
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     statement -> expression SEMI_COLON
Rule 7     statement -> assignment SEMI_COLON
Rule 8     statement -> declaration SEMI_COLON
Rule 9     statement -> if_statement
Rule 10    statement -> for_statement
Rule 11    statement -> do_while_statement
Rule 12    statement -> while_statement
Rule 13    statement -> call_function
Rule 14    statement -> return_statement
Rule 15    assignment -> term ASSING expression
Rule 16    assignment -> term ASSING term
Rule 17    assignment -> term ASSING factor
Rule 18    expression -> expression SUM expression
Rule 19    expression -> expression SUB expression
Rule 20    expression -> expression MUL expression
Rule 21    expression -> expression DIV expression
Rule 22    expression -> expression DECREMENT
Rule 23    expression -> expression INCREMENT
Rule 24    expression -> term
Rule 25    expression -> factor
Rule 26    term -> IDENTIFIER
Rule 27    for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
Rule 28    for_initilizer -> assignment
Rule 29    for_initilizer -> declaration
Rule 30    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope
Rule 31    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
Rule 32    factor -> NUMBER
Rule 33    type -> INT
Rule 34    type -> FLOAT
Rule 35    type -> CHAR
Rule 36    condition -> expression OR expression
Rule 37    condition -> expression NOT expression
Rule 38    condition -> expression EQUALS expression
Rule 39    condition -> expression GREATER expression
Rule 40    condition -> expression LESSER expression
Rule 41    condition -> expression GREATER_OR_EQUALS expression
Rule 42    condition -> expression LESSER_OR_EQUALS expression
Rule 43    declaration -> type term
Rule 44    declaration -> type assignment
Rule 45    declarations -> declaration COMMA declarations
Rule 46    declarations -> declaration
Rule 47    passing_param -> term COMMA passing_param
Rule 48    passing_param -> term
Rule 49    passing_param -> factor COMMA passing_param
Rule 50    passing_param -> factor
Rule 51    param -> OPEN_PAREN declarations CLOSE_PAREN
Rule 52    param -> OPEN_PAREN CLOSE_PAREN
Rule 53    do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
Rule 54    while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope
Rule 55    print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
Rule 56    print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON
Rule 57    call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
Rule 58    call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
Rule 59    call_function -> print_statement
Rule 60    return_statement -> RETURN expression SEMI_COLON
Rule 61    return_statement -> RETURN SEMI_COLON

Terminals, with rules where they appear

AND                  : 
ASSING               : 15 16 17
BREAK                : 
CHAR                 : 35
CLOSE_BRAKETS        : 2
CLOSE_PAREN          : 27 30 31 51 52 53 54 55 56 57 58
COMMA                : 45 47 49 56
DECREMENT            : 22
DIV                  : 21
DO                   : 53
DOUBLE               : 
ELSE                 : 31
EQUALS               : 38
FLOAT                : 34
FOR                  : 27
GREATER              : 39
GREATER_OR_EQUALS    : 41
IDENTIFIER           : 26 57 58
IF                   : 30 31
INCREMENT            : 23
INT                  : 33
LESSER               : 40
LESSER_OR_EQUALS     : 42
MAIN                 : 1
MUL                  : 20
NOT                  : 37
NUMBER               : 32
OPEN_BRAKETS         : 2
OPEN_PAREN           : 27 30 31 51 52 53 54 55 56 57 58
OR                   : 36
PRINT                : 55 56
RETURN               : 60 61
SEMI_COLON           : 6 7 8 27 27 53 55 56 57 58 60 61
STRING_LITERAL       : 55 56
SUB                  : 19
SUM                  : 18
WHILE                : 53 54
error                : 

Nonterminals, with rules where they appear

assignment           : 7 28 44
call_function        : 13
condition            : 27 30 31 53 54
declaration          : 8 29 45 46
declarations         : 45 51
do_while_statement   : 11
expression           : 6 15 18 18 19 19 20 20 21 21 22 23 27 36 36 37 37 38 38 39 39 40 40 41 41 42 42 60
factor               : 17 25 49 50
for_initilizer       : 27
for_statement        : 10
if_statement         : 9
main                 : 0
new_scope            : 2
param                : 1
passing_param        : 47 49 56 57
print_statement      : 59
return_statement     : 14
scope                : 1 27 30 31 31 53 54
statement            : 4 5
statements           : 2 4
term                 : 15 16 16 17 24 43 47 48
type                 : 1 43 44
while_statement      : 12

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . type MAIN param scope
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    main                           shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> main .



state 2

    (1) main -> type . MAIN param scope

    MAIN            shift and go to state 6


state 3

    (33) type -> INT .

    MAIN            reduce using rule 33 (type -> INT .)
    IDENTIFIER      reduce using rule 33 (type -> INT .)


state 4

    (34) type -> FLOAT .

    MAIN            reduce using rule 34 (type -> FLOAT .)
    IDENTIFIER      reduce using rule 34 (type -> FLOAT .)


state 5

    (35) type -> CHAR .

    MAIN            reduce using rule 35 (type -> CHAR .)
    IDENTIFIER      reduce using rule 35 (type -> CHAR .)


state 6

    (1) main -> type MAIN . param scope
    (51) param -> . OPEN_PAREN declarations CLOSE_PAREN
    (52) param -> . OPEN_PAREN CLOSE_PAREN

    OPEN_PAREN      shift and go to state 8

    param                          shift and go to state 7

state 7

    (1) main -> type MAIN param . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 9

state 8

    (51) param -> OPEN_PAREN . declarations CLOSE_PAREN
    (52) param -> OPEN_PAREN . CLOSE_PAREN
    (45) declarations -> . declaration COMMA declarations
    (46) declarations -> . declaration
    (43) declaration -> . type term
    (44) declaration -> . type assignment
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    CLOSE_PAREN     shift and go to state 12
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declarations                   shift and go to state 11
    declaration                    shift and go to state 13
    type                           shift and go to state 14

state 9

    (1) main -> type MAIN param scope .

    $end            reduce using rule 1 (main -> type MAIN param scope .)


state 10

    (2) scope -> OPEN_BRAKETS . new_scope statements CLOSE_BRAKETS
    (3) new_scope -> .

    IF              reduce using rule 3 (new_scope -> .)
    FOR             reduce using rule 3 (new_scope -> .)
    DO              reduce using rule 3 (new_scope -> .)
    WHILE           reduce using rule 3 (new_scope -> .)
    IDENTIFIER      reduce using rule 3 (new_scope -> .)
    RETURN          reduce using rule 3 (new_scope -> .)
    NUMBER          reduce using rule 3 (new_scope -> .)
    INT             reduce using rule 3 (new_scope -> .)
    FLOAT           reduce using rule 3 (new_scope -> .)
    CHAR            reduce using rule 3 (new_scope -> .)
    PRINT           reduce using rule 3 (new_scope -> .)

    new_scope                      shift and go to state 15

state 11

    (51) param -> OPEN_PAREN declarations . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 16


state 12

    (52) param -> OPEN_PAREN CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 52 (param -> OPEN_PAREN CLOSE_PAREN .)


state 13

    (45) declarations -> declaration . COMMA declarations
    (46) declarations -> declaration .

    COMMA           shift and go to state 17
    CLOSE_PAREN     reduce using rule 46 (declarations -> declaration .)


state 14

    (43) declaration -> type . term
    (44) declaration -> type . assignment
    (26) term -> . IDENTIFIER
    (15) assignment -> . term ASSING expression
    (16) assignment -> . term ASSING term
    (17) assignment -> . term ASSING factor

    IDENTIFIER      shift and go to state 20

    term                           shift and go to state 18
    assignment                     shift and go to state 19

state 15

    (2) scope -> OPEN_BRAKETS new_scope . statements CLOSE_BRAKETS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . if_statement
    (10) statement -> . for_statement
    (11) statement -> . do_while_statement
    (12) statement -> . while_statement
    (13) statement -> . call_function
    (14) statement -> . return_statement
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (15) assignment -> . term ASSING expression
    (16) assignment -> . term ASSING term
    (17) assignment -> . term ASSING factor
    (43) declaration -> . type term
    (44) declaration -> . type assignment
    (30) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (31) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (27) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (53) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (54) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (57) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (58) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (59) call_function -> . print_statement
    (60) return_statement -> . RETURN expression SEMI_COLON
    (61) return_statement -> . RETURN SEMI_COLON
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR
    (55) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (56) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    IF              shift and go to state 34
    FOR             shift and go to state 35
    DO              shift and go to state 36
    WHILE           shift and go to state 37
    IDENTIFIER      shift and go to state 38
    RETURN          shift and go to state 40
    NUMBER          shift and go to state 41
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 42

    statements                     shift and go to state 21
    statement                      shift and go to state 22
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    do_while_statement             shift and go to state 28
    while_statement                shift and go to state 29
    call_function                  shift and go to state 30
    return_statement               shift and go to state 31
    term                           shift and go to state 32
    factor                         shift and go to state 33
    type                           shift and go to state 14
    print_statement                shift and go to state 39

state 16

    (51) param -> OPEN_PAREN declarations CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 51 (param -> OPEN_PAREN declarations CLOSE_PAREN .)


state 17

    (45) declarations -> declaration COMMA . declarations
    (45) declarations -> . declaration COMMA declarations
    (46) declarations -> . declaration
    (43) declaration -> . type term
    (44) declaration -> . type assignment
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declaration                    shift and go to state 13
    declarations                   shift and go to state 43
    type                           shift and go to state 14

state 18

    (43) declaration -> type term .
    (15) assignment -> term . ASSING expression
    (16) assignment -> term . ASSING term
    (17) assignment -> term . ASSING factor

    COMMA           reduce using rule 43 (declaration -> type term .)
    CLOSE_PAREN     reduce using rule 43 (declaration -> type term .)
    SEMI_COLON      reduce using rule 43 (declaration -> type term .)
    ASSING          shift and go to state 44


state 19

    (44) declaration -> type assignment .

    COMMA           reduce using rule 44 (declaration -> type assignment .)
    CLOSE_PAREN     reduce using rule 44 (declaration -> type assignment .)
    SEMI_COLON      reduce using rule 44 (declaration -> type assignment .)


state 20

    (26) term -> IDENTIFIER .

    ASSING          reduce using rule 26 (term -> IDENTIFIER .)
    COMMA           reduce using rule 26 (term -> IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 26 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 26 (term -> IDENTIFIER .)
    SUM             reduce using rule 26 (term -> IDENTIFIER .)
    SUB             reduce using rule 26 (term -> IDENTIFIER .)
    MUL             reduce using rule 26 (term -> IDENTIFIER .)
    DIV             reduce using rule 26 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 26 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 26 (term -> IDENTIFIER .)
    OR              reduce using rule 26 (term -> IDENTIFIER .)
    NOT             reduce using rule 26 (term -> IDENTIFIER .)
    EQUALS          reduce using rule 26 (term -> IDENTIFIER .)
    GREATER         reduce using rule 26 (term -> IDENTIFIER .)
    LESSER          reduce using rule 26 (term -> IDENTIFIER .)
    GREATER_OR_EQUALS reduce using rule 26 (term -> IDENTIFIER .)
    LESSER_OR_EQUALS reduce using rule 26 (term -> IDENTIFIER .)


state 21

    (2) scope -> OPEN_BRAKETS new_scope statements . CLOSE_BRAKETS

    CLOSE_BRAKETS   shift and go to state 45


state 22

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . if_statement
    (10) statement -> . for_statement
    (11) statement -> . do_while_statement
    (12) statement -> . while_statement
    (13) statement -> . call_function
    (14) statement -> . return_statement
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (15) assignment -> . term ASSING expression
    (16) assignment -> . term ASSING term
    (17) assignment -> . term ASSING factor
    (43) declaration -> . type term
    (44) declaration -> . type assignment
    (30) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (31) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (27) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (53) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (54) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (57) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (58) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (59) call_function -> . print_statement
    (60) return_statement -> . RETURN expression SEMI_COLON
    (61) return_statement -> . RETURN SEMI_COLON
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR
    (55) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (56) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_BRAKETS   reduce using rule 5 (statements -> statement .)
    IF              shift and go to state 34
    FOR             shift and go to state 35
    DO              shift and go to state 36
    WHILE           shift and go to state 37
    IDENTIFIER      shift and go to state 38
    RETURN          shift and go to state 40
    NUMBER          shift and go to state 41
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 42

    statement                      shift and go to state 22
    statements                     shift and go to state 46
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    do_while_statement             shift and go to state 28
    while_statement                shift and go to state 29
    call_function                  shift and go to state 30
    return_statement               shift and go to state 31
    term                           shift and go to state 32
    factor                         shift and go to state 33
    type                           shift and go to state 14
    print_statement                shift and go to state 39

state 23

    (6) statement -> expression . SEMI_COLON
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 47
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 24

    (7) statement -> assignment . SEMI_COLON

    SEMI_COLON      shift and go to state 54


state 25

    (8) statement -> declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 55


state 26

    (9) statement -> if_statement .

    IF              reduce using rule 9 (statement -> if_statement .)
    FOR             reduce using rule 9 (statement -> if_statement .)
    DO              reduce using rule 9 (statement -> if_statement .)
    WHILE           reduce using rule 9 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> if_statement .)
    RETURN          reduce using rule 9 (statement -> if_statement .)
    NUMBER          reduce using rule 9 (statement -> if_statement .)
    INT             reduce using rule 9 (statement -> if_statement .)
    FLOAT           reduce using rule 9 (statement -> if_statement .)
    CHAR            reduce using rule 9 (statement -> if_statement .)
    PRINT           reduce using rule 9 (statement -> if_statement .)
    CLOSE_BRAKETS   reduce using rule 9 (statement -> if_statement .)


state 27

    (10) statement -> for_statement .

    IF              reduce using rule 10 (statement -> for_statement .)
    FOR             reduce using rule 10 (statement -> for_statement .)
    DO              reduce using rule 10 (statement -> for_statement .)
    WHILE           reduce using rule 10 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> for_statement .)
    RETURN          reduce using rule 10 (statement -> for_statement .)
    NUMBER          reduce using rule 10 (statement -> for_statement .)
    INT             reduce using rule 10 (statement -> for_statement .)
    FLOAT           reduce using rule 10 (statement -> for_statement .)
    CHAR            reduce using rule 10 (statement -> for_statement .)
    PRINT           reduce using rule 10 (statement -> for_statement .)
    CLOSE_BRAKETS   reduce using rule 10 (statement -> for_statement .)


state 28

    (11) statement -> do_while_statement .

    IF              reduce using rule 11 (statement -> do_while_statement .)
    FOR             reduce using rule 11 (statement -> do_while_statement .)
    DO              reduce using rule 11 (statement -> do_while_statement .)
    WHILE           reduce using rule 11 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> do_while_statement .)
    RETURN          reduce using rule 11 (statement -> do_while_statement .)
    NUMBER          reduce using rule 11 (statement -> do_while_statement .)
    INT             reduce using rule 11 (statement -> do_while_statement .)
    FLOAT           reduce using rule 11 (statement -> do_while_statement .)
    CHAR            reduce using rule 11 (statement -> do_while_statement .)
    PRINT           reduce using rule 11 (statement -> do_while_statement .)
    CLOSE_BRAKETS   reduce using rule 11 (statement -> do_while_statement .)


state 29

    (12) statement -> while_statement .

    IF              reduce using rule 12 (statement -> while_statement .)
    FOR             reduce using rule 12 (statement -> while_statement .)
    DO              reduce using rule 12 (statement -> while_statement .)
    WHILE           reduce using rule 12 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> while_statement .)
    RETURN          reduce using rule 12 (statement -> while_statement .)
    NUMBER          reduce using rule 12 (statement -> while_statement .)
    INT             reduce using rule 12 (statement -> while_statement .)
    FLOAT           reduce using rule 12 (statement -> while_statement .)
    CHAR            reduce using rule 12 (statement -> while_statement .)
    PRINT           reduce using rule 12 (statement -> while_statement .)
    CLOSE_BRAKETS   reduce using rule 12 (statement -> while_statement .)


state 30

    (13) statement -> call_function .

    IF              reduce using rule 13 (statement -> call_function .)
    FOR             reduce using rule 13 (statement -> call_function .)
    DO              reduce using rule 13 (statement -> call_function .)
    WHILE           reduce using rule 13 (statement -> call_function .)
    IDENTIFIER      reduce using rule 13 (statement -> call_function .)
    RETURN          reduce using rule 13 (statement -> call_function .)
    NUMBER          reduce using rule 13 (statement -> call_function .)
    INT             reduce using rule 13 (statement -> call_function .)
    FLOAT           reduce using rule 13 (statement -> call_function .)
    CHAR            reduce using rule 13 (statement -> call_function .)
    PRINT           reduce using rule 13 (statement -> call_function .)
    CLOSE_BRAKETS   reduce using rule 13 (statement -> call_function .)


state 31

    (14) statement -> return_statement .

    IF              reduce using rule 14 (statement -> return_statement .)
    FOR             reduce using rule 14 (statement -> return_statement .)
    DO              reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> return_statement .)
    RETURN          reduce using rule 14 (statement -> return_statement .)
    NUMBER          reduce using rule 14 (statement -> return_statement .)
    INT             reduce using rule 14 (statement -> return_statement .)
    FLOAT           reduce using rule 14 (statement -> return_statement .)
    CHAR            reduce using rule 14 (statement -> return_statement .)
    PRINT           reduce using rule 14 (statement -> return_statement .)
    CLOSE_BRAKETS   reduce using rule 14 (statement -> return_statement .)


state 32

    (24) expression -> term .
    (15) assignment -> term . ASSING expression
    (16) assignment -> term . ASSING term
    (17) assignment -> term . ASSING factor

    SEMI_COLON      reduce using rule 24 (expression -> term .)
    SUM             reduce using rule 24 (expression -> term .)
    SUB             reduce using rule 24 (expression -> term .)
    MUL             reduce using rule 24 (expression -> term .)
    DIV             reduce using rule 24 (expression -> term .)
    DECREMENT       reduce using rule 24 (expression -> term .)
    INCREMENT       reduce using rule 24 (expression -> term .)
    ASSING          shift and go to state 44


state 33

    (25) expression -> factor .

    SEMI_COLON      reduce using rule 25 (expression -> factor .)
    SUM             reduce using rule 25 (expression -> factor .)
    SUB             reduce using rule 25 (expression -> factor .)
    MUL             reduce using rule 25 (expression -> factor .)
    DIV             reduce using rule 25 (expression -> factor .)
    DECREMENT       reduce using rule 25 (expression -> factor .)
    INCREMENT       reduce using rule 25 (expression -> factor .)
    COMMA           reduce using rule 25 (expression -> factor .)
    CLOSE_PAREN     reduce using rule 25 (expression -> factor .)
    OR              reduce using rule 25 (expression -> factor .)
    NOT             reduce using rule 25 (expression -> factor .)
    EQUALS          reduce using rule 25 (expression -> factor .)
    GREATER         reduce using rule 25 (expression -> factor .)
    LESSER          reduce using rule 25 (expression -> factor .)
    GREATER_OR_EQUALS reduce using rule 25 (expression -> factor .)
    LESSER_OR_EQUALS reduce using rule 25 (expression -> factor .)


state 34

    (30) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope
    (31) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope ELSE scope

    OPEN_PAREN      shift and go to state 56


state 35

    (27) for_statement -> FOR . OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 57


state 36

    (53) do_while_statement -> DO . scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 58

state 37

    (54) while_statement -> WHILE . OPEN_PAREN condition CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 59


state 38

    (57) call_function -> IDENTIFIER . OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (58) call_function -> IDENTIFIER . OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (26) term -> IDENTIFIER .

    OPEN_PAREN      shift and go to state 60
    ASSING          reduce using rule 26 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 26 (term -> IDENTIFIER .)
    SUM             reduce using rule 26 (term -> IDENTIFIER .)
    SUB             reduce using rule 26 (term -> IDENTIFIER .)
    MUL             reduce using rule 26 (term -> IDENTIFIER .)
    DIV             reduce using rule 26 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 26 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 26 (term -> IDENTIFIER .)


state 39

    (59) call_function -> print_statement .

    IF              reduce using rule 59 (call_function -> print_statement .)
    FOR             reduce using rule 59 (call_function -> print_statement .)
    DO              reduce using rule 59 (call_function -> print_statement .)
    WHILE           reduce using rule 59 (call_function -> print_statement .)
    IDENTIFIER      reduce using rule 59 (call_function -> print_statement .)
    RETURN          reduce using rule 59 (call_function -> print_statement .)
    NUMBER          reduce using rule 59 (call_function -> print_statement .)
    INT             reduce using rule 59 (call_function -> print_statement .)
    FLOAT           reduce using rule 59 (call_function -> print_statement .)
    CHAR            reduce using rule 59 (call_function -> print_statement .)
    PRINT           reduce using rule 59 (call_function -> print_statement .)
    CLOSE_BRAKETS   reduce using rule 59 (call_function -> print_statement .)


state 40

    (60) return_statement -> RETURN . expression SEMI_COLON
    (61) return_statement -> RETURN . SEMI_COLON
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    SEMI_COLON      shift and go to state 62
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 61
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 41

    (32) factor -> NUMBER .

    SEMI_COLON      reduce using rule 32 (factor -> NUMBER .)
    SUM             reduce using rule 32 (factor -> NUMBER .)
    SUB             reduce using rule 32 (factor -> NUMBER .)
    MUL             reduce using rule 32 (factor -> NUMBER .)
    DIV             reduce using rule 32 (factor -> NUMBER .)
    DECREMENT       reduce using rule 32 (factor -> NUMBER .)
    INCREMENT       reduce using rule 32 (factor -> NUMBER .)
    COMMA           reduce using rule 32 (factor -> NUMBER .)
    CLOSE_PAREN     reduce using rule 32 (factor -> NUMBER .)
    OR              reduce using rule 32 (factor -> NUMBER .)
    NOT             reduce using rule 32 (factor -> NUMBER .)
    EQUALS          reduce using rule 32 (factor -> NUMBER .)
    GREATER         reduce using rule 32 (factor -> NUMBER .)
    LESSER          reduce using rule 32 (factor -> NUMBER .)
    GREATER_OR_EQUALS reduce using rule 32 (factor -> NUMBER .)
    LESSER_OR_EQUALS reduce using rule 32 (factor -> NUMBER .)


state 42

    (55) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (56) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 64


state 43

    (45) declarations -> declaration COMMA declarations .

    CLOSE_PAREN     reduce using rule 45 (declarations -> declaration COMMA declarations .)


state 44

    (15) assignment -> term ASSING . expression
    (16) assignment -> term ASSING . term
    (17) assignment -> term ASSING . factor
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    term                           shift and go to state 65
    expression                     shift and go to state 66
    factor                         shift and go to state 67

state 45

    (2) scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .

    $end            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    WHILE           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    ELSE            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IF              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FOR             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    DO              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IDENTIFIER      reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    RETURN          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    NUMBER          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    INT             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FLOAT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CHAR            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    PRINT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CLOSE_BRAKETS   reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)


state 46

    (4) statements -> statement statements .

    CLOSE_BRAKETS   reduce using rule 4 (statements -> statement statements .)


state 47

    (6) statement -> expression SEMI_COLON .

    IF              reduce using rule 6 (statement -> expression SEMI_COLON .)
    FOR             reduce using rule 6 (statement -> expression SEMI_COLON .)
    DO              reduce using rule 6 (statement -> expression SEMI_COLON .)
    WHILE           reduce using rule 6 (statement -> expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression SEMI_COLON .)
    RETURN          reduce using rule 6 (statement -> expression SEMI_COLON .)
    NUMBER          reduce using rule 6 (statement -> expression SEMI_COLON .)
    INT             reduce using rule 6 (statement -> expression SEMI_COLON .)
    FLOAT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CHAR            reduce using rule 6 (statement -> expression SEMI_COLON .)
    PRINT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 6 (statement -> expression SEMI_COLON .)


state 48

    (18) expression -> expression SUM . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 68
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 49

    (19) expression -> expression SUB . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 69
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 50

    (20) expression -> expression MUL . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 70
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 51

    (21) expression -> expression DIV . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 71
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 52

    (22) expression -> expression DECREMENT .

    SEMI_COLON      reduce using rule 22 (expression -> expression DECREMENT .)
    SUM             reduce using rule 22 (expression -> expression DECREMENT .)
    SUB             reduce using rule 22 (expression -> expression DECREMENT .)
    MUL             reduce using rule 22 (expression -> expression DECREMENT .)
    DIV             reduce using rule 22 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 22 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 22 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 22 (expression -> expression DECREMENT .)
    CLOSE_PAREN     reduce using rule 22 (expression -> expression DECREMENT .)
    OR              reduce using rule 22 (expression -> expression DECREMENT .)
    NOT             reduce using rule 22 (expression -> expression DECREMENT .)
    EQUALS          reduce using rule 22 (expression -> expression DECREMENT .)
    GREATER         reduce using rule 22 (expression -> expression DECREMENT .)
    LESSER          reduce using rule 22 (expression -> expression DECREMENT .)
    GREATER_OR_EQUALS reduce using rule 22 (expression -> expression DECREMENT .)
    LESSER_OR_EQUALS reduce using rule 22 (expression -> expression DECREMENT .)


state 53

    (23) expression -> expression INCREMENT .

    SEMI_COLON      reduce using rule 23 (expression -> expression INCREMENT .)
    SUM             reduce using rule 23 (expression -> expression INCREMENT .)
    SUB             reduce using rule 23 (expression -> expression INCREMENT .)
    MUL             reduce using rule 23 (expression -> expression INCREMENT .)
    DIV             reduce using rule 23 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 23 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 23 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 23 (expression -> expression INCREMENT .)
    CLOSE_PAREN     reduce using rule 23 (expression -> expression INCREMENT .)
    OR              reduce using rule 23 (expression -> expression INCREMENT .)
    NOT             reduce using rule 23 (expression -> expression INCREMENT .)
    EQUALS          reduce using rule 23 (expression -> expression INCREMENT .)
    GREATER         reduce using rule 23 (expression -> expression INCREMENT .)
    LESSER          reduce using rule 23 (expression -> expression INCREMENT .)
    GREATER_OR_EQUALS reduce using rule 23 (expression -> expression INCREMENT .)
    LESSER_OR_EQUALS reduce using rule 23 (expression -> expression INCREMENT .)


state 54

    (7) statement -> assignment SEMI_COLON .

    IF              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FOR             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    DO              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    WHILE           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment SEMI_COLON .)
    RETURN          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    NUMBER          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    INT             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FLOAT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CHAR            reduce using rule 7 (statement -> assignment SEMI_COLON .)
    PRINT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 7 (statement -> assignment SEMI_COLON .)


state 55

    (8) statement -> declaration SEMI_COLON .

    IF              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FOR             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    DO              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    WHILE           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 8 (statement -> declaration SEMI_COLON .)
    RETURN          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    NUMBER          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    INT             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FLOAT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CHAR            reduce using rule 8 (statement -> declaration SEMI_COLON .)
    PRINT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 8 (statement -> declaration SEMI_COLON .)


state 56

    (30) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope
    (31) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope ELSE scope
    (36) condition -> . expression OR expression
    (37) condition -> . expression NOT expression
    (38) condition -> . expression EQUALS expression
    (39) condition -> . expression GREATER expression
    (40) condition -> . expression LESSER expression
    (41) condition -> . expression GREATER_OR_EQUALS expression
    (42) condition -> . expression LESSER_OR_EQUALS expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    condition                      shift and go to state 72
    expression                     shift and go to state 73
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 57

    (27) for_statement -> FOR OPEN_PAREN . for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (28) for_initilizer -> . assignment
    (29) for_initilizer -> . declaration
    (15) assignment -> . term ASSING expression
    (16) assignment -> . term ASSING term
    (17) assignment -> . term ASSING factor
    (43) declaration -> . type term
    (44) declaration -> . type assignment
    (26) term -> . IDENTIFIER
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    IDENTIFIER      shift and go to state 20
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    for_initilizer                 shift and go to state 74
    assignment                     shift and go to state 75
    declaration                    shift and go to state 76
    term                           shift and go to state 77
    type                           shift and go to state 14

state 58

    (53) do_while_statement -> DO scope . WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    WHILE           shift and go to state 78


state 59

    (54) while_statement -> WHILE OPEN_PAREN . condition CLOSE_PAREN scope
    (36) condition -> . expression OR expression
    (37) condition -> . expression NOT expression
    (38) condition -> . expression EQUALS expression
    (39) condition -> . expression GREATER expression
    (40) condition -> . expression LESSER expression
    (41) condition -> . expression GREATER_OR_EQUALS expression
    (42) condition -> . expression LESSER_OR_EQUALS expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    condition                      shift and go to state 79
    expression                     shift and go to state 73
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 60

    (57) call_function -> IDENTIFIER OPEN_PAREN . passing_param CLOSE_PAREN SEMI_COLON
    (58) call_function -> IDENTIFIER OPEN_PAREN . CLOSE_PAREN SEMI_COLON
    (47) passing_param -> . term COMMA passing_param
    (48) passing_param -> . term
    (49) passing_param -> . factor COMMA passing_param
    (50) passing_param -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    CLOSE_PAREN     shift and go to state 81
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    passing_param                  shift and go to state 80
    term                           shift and go to state 82
    factor                         shift and go to state 83

state 61

    (60) return_statement -> RETURN expression . SEMI_COLON
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 84
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 62

    (61) return_statement -> RETURN SEMI_COLON .

    IF              reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    FOR             reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    DO              reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    IDENTIFIER      reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    NUMBER          reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    INT             reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    FLOAT           reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    CHAR            reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 61 (return_statement -> RETURN SEMI_COLON .)


state 63

    (24) expression -> term .

    SEMI_COLON      reduce using rule 24 (expression -> term .)
    SUM             reduce using rule 24 (expression -> term .)
    SUB             reduce using rule 24 (expression -> term .)
    MUL             reduce using rule 24 (expression -> term .)
    DIV             reduce using rule 24 (expression -> term .)
    DECREMENT       reduce using rule 24 (expression -> term .)
    INCREMENT       reduce using rule 24 (expression -> term .)
    COMMA           reduce using rule 24 (expression -> term .)
    CLOSE_PAREN     reduce using rule 24 (expression -> term .)
    OR              reduce using rule 24 (expression -> term .)
    NOT             reduce using rule 24 (expression -> term .)
    EQUALS          reduce using rule 24 (expression -> term .)
    GREATER         reduce using rule 24 (expression -> term .)
    LESSER          reduce using rule 24 (expression -> term .)
    GREATER_OR_EQUALS reduce using rule 24 (expression -> term .)
    LESSER_OR_EQUALS reduce using rule 24 (expression -> term .)


state 64

    (55) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (56) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    STRING_LITERAL  shift and go to state 85


state 65

    (16) assignment -> term ASSING term .
    (24) expression -> term .

  ! reduce/reduce conflict for COMMA resolved using rule 16 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 16 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 16 (assignment -> term ASSING term .)
    COMMA           reduce using rule 16 (assignment -> term ASSING term .)
    CLOSE_PAREN     reduce using rule 16 (assignment -> term ASSING term .)
    SEMI_COLON      reduce using rule 16 (assignment -> term ASSING term .)
    SUM             reduce using rule 24 (expression -> term .)
    SUB             reduce using rule 24 (expression -> term .)
    MUL             reduce using rule 24 (expression -> term .)
    DIV             reduce using rule 24 (expression -> term .)
    DECREMENT       reduce using rule 24 (expression -> term .)
    INCREMENT       reduce using rule 24 (expression -> term .)

  ! COMMA           [ reduce using rule 24 (expression -> term .) ]
  ! CLOSE_PAREN     [ reduce using rule 24 (expression -> term .) ]
  ! SEMI_COLON      [ reduce using rule 24 (expression -> term .) ]


state 66

    (15) assignment -> term ASSING expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    COMMA           reduce using rule 15 (assignment -> term ASSING expression .)
    CLOSE_PAREN     reduce using rule 15 (assignment -> term ASSING expression .)
    SEMI_COLON      reduce using rule 15 (assignment -> term ASSING expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 67

    (17) assignment -> term ASSING factor .
    (25) expression -> factor .

  ! reduce/reduce conflict for COMMA resolved using rule 17 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 17 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 17 (assignment -> term ASSING factor .)
    COMMA           reduce using rule 17 (assignment -> term ASSING factor .)
    CLOSE_PAREN     reduce using rule 17 (assignment -> term ASSING factor .)
    SEMI_COLON      reduce using rule 17 (assignment -> term ASSING factor .)
    SUM             reduce using rule 25 (expression -> factor .)
    SUB             reduce using rule 25 (expression -> factor .)
    MUL             reduce using rule 25 (expression -> factor .)
    DIV             reduce using rule 25 (expression -> factor .)
    DECREMENT       reduce using rule 25 (expression -> factor .)
    INCREMENT       reduce using rule 25 (expression -> factor .)

  ! COMMA           [ reduce using rule 25 (expression -> factor .) ]
  ! CLOSE_PAREN     [ reduce using rule 25 (expression -> factor .) ]
  ! SEMI_COLON      [ reduce using rule 25 (expression -> factor .) ]


state 68

    (18) expression -> expression SUM expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 18 (expression -> expression SUM expression .)
    COMMA           reduce using rule 18 (expression -> expression SUM expression .)
    CLOSE_PAREN     reduce using rule 18 (expression -> expression SUM expression .)
    OR              reduce using rule 18 (expression -> expression SUM expression .)
    NOT             reduce using rule 18 (expression -> expression SUM expression .)
    EQUALS          reduce using rule 18 (expression -> expression SUM expression .)
    GREATER         reduce using rule 18 (expression -> expression SUM expression .)
    LESSER          reduce using rule 18 (expression -> expression SUM expression .)
    GREATER_OR_EQUALS reduce using rule 18 (expression -> expression SUM expression .)
    LESSER_OR_EQUALS reduce using rule 18 (expression -> expression SUM expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53

  ! SUM             [ reduce using rule 18 (expression -> expression SUM expression .) ]
  ! SUB             [ reduce using rule 18 (expression -> expression SUM expression .) ]
  ! MUL             [ reduce using rule 18 (expression -> expression SUM expression .) ]
  ! DIV             [ reduce using rule 18 (expression -> expression SUM expression .) ]
  ! DECREMENT       [ reduce using rule 18 (expression -> expression SUM expression .) ]
  ! INCREMENT       [ reduce using rule 18 (expression -> expression SUM expression .) ]


state 69

    (19) expression -> expression SUB expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 19 (expression -> expression SUB expression .)
    COMMA           reduce using rule 19 (expression -> expression SUB expression .)
    CLOSE_PAREN     reduce using rule 19 (expression -> expression SUB expression .)
    OR              reduce using rule 19 (expression -> expression SUB expression .)
    NOT             reduce using rule 19 (expression -> expression SUB expression .)
    EQUALS          reduce using rule 19 (expression -> expression SUB expression .)
    GREATER         reduce using rule 19 (expression -> expression SUB expression .)
    LESSER          reduce using rule 19 (expression -> expression SUB expression .)
    GREATER_OR_EQUALS reduce using rule 19 (expression -> expression SUB expression .)
    LESSER_OR_EQUALS reduce using rule 19 (expression -> expression SUB expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53

  ! SUM             [ reduce using rule 19 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 19 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 19 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 19 (expression -> expression SUB expression .) ]
  ! DECREMENT       [ reduce using rule 19 (expression -> expression SUB expression .) ]
  ! INCREMENT       [ reduce using rule 19 (expression -> expression SUB expression .) ]


state 70

    (20) expression -> expression MUL expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 20 (expression -> expression MUL expression .)
    COMMA           reduce using rule 20 (expression -> expression MUL expression .)
    CLOSE_PAREN     reduce using rule 20 (expression -> expression MUL expression .)
    OR              reduce using rule 20 (expression -> expression MUL expression .)
    NOT             reduce using rule 20 (expression -> expression MUL expression .)
    EQUALS          reduce using rule 20 (expression -> expression MUL expression .)
    GREATER         reduce using rule 20 (expression -> expression MUL expression .)
    LESSER          reduce using rule 20 (expression -> expression MUL expression .)
    GREATER_OR_EQUALS reduce using rule 20 (expression -> expression MUL expression .)
    LESSER_OR_EQUALS reduce using rule 20 (expression -> expression MUL expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53

  ! SUM             [ reduce using rule 20 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 20 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 20 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 20 (expression -> expression MUL expression .) ]
  ! DECREMENT       [ reduce using rule 20 (expression -> expression MUL expression .) ]
  ! INCREMENT       [ reduce using rule 20 (expression -> expression MUL expression .) ]


state 71

    (21) expression -> expression DIV expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 21 (expression -> expression DIV expression .)
    COMMA           reduce using rule 21 (expression -> expression DIV expression .)
    CLOSE_PAREN     reduce using rule 21 (expression -> expression DIV expression .)
    OR              reduce using rule 21 (expression -> expression DIV expression .)
    NOT             reduce using rule 21 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 21 (expression -> expression DIV expression .)
    GREATER         reduce using rule 21 (expression -> expression DIV expression .)
    LESSER          reduce using rule 21 (expression -> expression DIV expression .)
    GREATER_OR_EQUALS reduce using rule 21 (expression -> expression DIV expression .)
    LESSER_OR_EQUALS reduce using rule 21 (expression -> expression DIV expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53

  ! SUM             [ reduce using rule 21 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 21 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 21 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 21 (expression -> expression DIV expression .) ]
  ! DECREMENT       [ reduce using rule 21 (expression -> expression DIV expression .) ]
  ! INCREMENT       [ reduce using rule 21 (expression -> expression DIV expression .) ]


state 72

    (30) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope
    (31) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope ELSE scope

    CLOSE_PAREN     shift and go to state 86


state 73

    (36) condition -> expression . OR expression
    (37) condition -> expression . NOT expression
    (38) condition -> expression . EQUALS expression
    (39) condition -> expression . GREATER expression
    (40) condition -> expression . LESSER expression
    (41) condition -> expression . GREATER_OR_EQUALS expression
    (42) condition -> expression . LESSER_OR_EQUALS expression
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    OR              shift and go to state 87
    NOT             shift and go to state 88
    EQUALS          shift and go to state 89
    GREATER         shift and go to state 90
    LESSER          shift and go to state 91
    GREATER_OR_EQUALS shift and go to state 92
    LESSER_OR_EQUALS shift and go to state 93
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 74

    (27) for_statement -> FOR OPEN_PAREN for_initilizer . SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 94


state 75

    (28) for_initilizer -> assignment .

    SEMI_COLON      reduce using rule 28 (for_initilizer -> assignment .)


state 76

    (29) for_initilizer -> declaration .

    SEMI_COLON      reduce using rule 29 (for_initilizer -> declaration .)


state 77

    (15) assignment -> term . ASSING expression
    (16) assignment -> term . ASSING term
    (17) assignment -> term . ASSING factor

    ASSING          shift and go to state 44


state 78

    (53) do_while_statement -> DO scope WHILE . OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 95


state 79

    (54) while_statement -> WHILE OPEN_PAREN condition . CLOSE_PAREN scope

    CLOSE_PAREN     shift and go to state 96


state 80

    (57) call_function -> IDENTIFIER OPEN_PAREN passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 97


state 81

    (58) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 98


state 82

    (47) passing_param -> term . COMMA passing_param
    (48) passing_param -> term .

    COMMA           shift and go to state 99
    CLOSE_PAREN     reduce using rule 48 (passing_param -> term .)


state 83

    (49) passing_param -> factor . COMMA passing_param
    (50) passing_param -> factor .

    COMMA           shift and go to state 100
    CLOSE_PAREN     reduce using rule 50 (passing_param -> factor .)


state 84

    (60) return_statement -> RETURN expression SEMI_COLON .

    IF              reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    FOR             reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    DO              reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    WHILE           reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    RETURN          reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    NUMBER          reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    INT             reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    FLOAT           reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    CHAR            reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    PRINT           reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 60 (return_statement -> RETURN expression SEMI_COLON .)


state 85

    (55) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMI_COLON
    (56) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 101
    COMMA           shift and go to state 102


state 86

    (30) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope
    (31) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope ELSE scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 103

state 87

    (36) condition -> expression OR . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 104
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 88

    (37) condition -> expression NOT . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 105
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 89

    (38) condition -> expression EQUALS . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 106
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 90

    (39) condition -> expression GREATER . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 107
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 91

    (40) condition -> expression LESSER . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 108
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 92

    (41) condition -> expression GREATER_OR_EQUALS . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 109
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 93

    (42) condition -> expression LESSER_OR_EQUALS . expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 110
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 94

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON . condition SEMI_COLON expression CLOSE_PAREN scope
    (36) condition -> . expression OR expression
    (37) condition -> . expression NOT expression
    (38) condition -> . expression EQUALS expression
    (39) condition -> . expression GREATER expression
    (40) condition -> . expression LESSER expression
    (41) condition -> . expression GREATER_OR_EQUALS expression
    (42) condition -> . expression LESSER_OR_EQUALS expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    condition                      shift and go to state 111
    expression                     shift and go to state 73
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 95

    (53) do_while_statement -> DO scope WHILE OPEN_PAREN . condition CLOSE_PAREN SEMI_COLON
    (36) condition -> . expression OR expression
    (37) condition -> . expression NOT expression
    (38) condition -> . expression EQUALS expression
    (39) condition -> . expression GREATER expression
    (40) condition -> . expression LESSER expression
    (41) condition -> . expression GREATER_OR_EQUALS expression
    (42) condition -> . expression LESSER_OR_EQUALS expression
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    condition                      shift and go to state 112
    expression                     shift and go to state 73
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 96

    (54) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 113

state 97

    (57) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 114


state 98

    (58) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 58 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)


state 99

    (47) passing_param -> term COMMA . passing_param
    (47) passing_param -> . term COMMA passing_param
    (48) passing_param -> . term
    (49) passing_param -> . factor COMMA passing_param
    (50) passing_param -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    term                           shift and go to state 82
    passing_param                  shift and go to state 115
    factor                         shift and go to state 83

state 100

    (49) passing_param -> factor COMMA . passing_param
    (47) passing_param -> . term COMMA passing_param
    (48) passing_param -> . term
    (49) passing_param -> . factor COMMA passing_param
    (50) passing_param -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    factor                         shift and go to state 83
    passing_param                  shift and go to state 116
    term                           shift and go to state 82

state 101

    (55) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 117


state 102

    (56) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA . passing_param CLOSE_PAREN SEMI_COLON
    (47) passing_param -> . term COMMA passing_param
    (48) passing_param -> . term
    (49) passing_param -> . factor COMMA passing_param
    (50) passing_param -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    passing_param                  shift and go to state 118
    term                           shift and go to state 82
    factor                         shift and go to state 83

state 103

    (30) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .
    (31) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope . ELSE scope

    IF              reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 30 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    ELSE            shift and go to state 119


state 104

    (36) condition -> expression OR expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 36 (condition -> expression OR expression .)
    SEMI_COLON      reduce using rule 36 (condition -> expression OR expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 105

    (37) condition -> expression NOT expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 37 (condition -> expression NOT expression .)
    SEMI_COLON      reduce using rule 37 (condition -> expression NOT expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 106

    (38) condition -> expression EQUALS expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 38 (condition -> expression EQUALS expression .)
    SEMI_COLON      reduce using rule 38 (condition -> expression EQUALS expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 107

    (39) condition -> expression GREATER expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 39 (condition -> expression GREATER expression .)
    SEMI_COLON      reduce using rule 39 (condition -> expression GREATER expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 108

    (40) condition -> expression LESSER expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 40 (condition -> expression LESSER expression .)
    SEMI_COLON      reduce using rule 40 (condition -> expression LESSER expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 109

    (41) condition -> expression GREATER_OR_EQUALS expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 41 (condition -> expression GREATER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 41 (condition -> expression GREATER_OR_EQUALS expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 110

    (42) condition -> expression LESSER_OR_EQUALS expression .
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 42 (condition -> expression LESSER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 42 (condition -> expression LESSER_OR_EQUALS expression .)
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 111

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition . SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 120


state 112

    (53) do_while_statement -> DO scope WHILE OPEN_PAREN condition . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 121


state 113

    (54) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .

    IF              reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 54 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)


state 114

    (57) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 57 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)


state 115

    (47) passing_param -> term COMMA passing_param .

    CLOSE_PAREN     reduce using rule 47 (passing_param -> term COMMA passing_param .)


state 116

    (49) passing_param -> factor COMMA passing_param .

    CLOSE_PAREN     reduce using rule 49 (passing_param -> factor COMMA passing_param .)


state 117

    (55) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 55 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)


state 118

    (56) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 122


state 119

    (31) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 123

state 120

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON . expression CLOSE_PAREN scope
    (18) expression -> . expression SUM expression
    (19) expression -> . expression SUB expression
    (20) expression -> . expression MUL expression
    (21) expression -> . expression DIV expression
    (22) expression -> . expression DECREMENT
    (23) expression -> . expression INCREMENT
    (24) expression -> . term
    (25) expression -> . factor
    (26) term -> . IDENTIFIER
    (32) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 41

    expression                     shift and go to state 124
    term                           shift and go to state 63
    factor                         shift and go to state 33

state 121

    (53) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 125


state 122

    (56) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 126


state 123

    (31) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .

    IF              reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FOR             reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    DO              reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    WHILE           reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    IDENTIFIER      reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    RETURN          reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    NUMBER          reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    INT             reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FLOAT           reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CHAR            reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    PRINT           reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CLOSE_BRAKETS   reduce using rule 31 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)


state 124

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression . CLOSE_PAREN scope
    (18) expression -> expression . SUM expression
    (19) expression -> expression . SUB expression
    (20) expression -> expression . MUL expression
    (21) expression -> expression . DIV expression
    (22) expression -> expression . DECREMENT
    (23) expression -> expression . INCREMENT

    CLOSE_PAREN     shift and go to state 127
    SUM             shift and go to state 48
    SUB             shift and go to state 49
    MUL             shift and go to state 50
    DIV             shift and go to state 51
    DECREMENT       shift and go to state 52
    INCREMENT       shift and go to state 53


state 125

    (53) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 53 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)


state 126

    (56) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 56 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)


state 127

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 128

state 128

    (27) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .

    IF              reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FOR             reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    DO              reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    WHILE           reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    RETURN          reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    NUMBER          reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    INT             reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FLOAT           reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CHAR            reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    PRINT           reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 27 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 68 resolved as shift
WARNING: shift/reduce conflict for SUB in state 68 resolved as shift
WARNING: shift/reduce conflict for MUL in state 68 resolved as shift
WARNING: shift/reduce conflict for DIV in state 68 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 68 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 68 resolved as shift
WARNING: shift/reduce conflict for SUM in state 69 resolved as shift
WARNING: shift/reduce conflict for SUB in state 69 resolved as shift
WARNING: shift/reduce conflict for MUL in state 69 resolved as shift
WARNING: shift/reduce conflict for DIV in state 69 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 69 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 69 resolved as shift
WARNING: shift/reduce conflict for SUM in state 70 resolved as shift
WARNING: shift/reduce conflict for SUB in state 70 resolved as shift
WARNING: shift/reduce conflict for MUL in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV in state 70 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 70 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 70 resolved as shift
WARNING: shift/reduce conflict for SUM in state 71 resolved as shift
WARNING: shift/reduce conflict for SUB in state 71 resolved as shift
WARNING: shift/reduce conflict for MUL in state 71 resolved as shift
WARNING: shift/reduce conflict for DIV in state 71 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 71 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 71 resolved as shift
WARNING: reduce/reduce conflict in state 65 resolved using rule (assignment -> term ASSING term)
WARNING: rejected rule (expression -> term) in state 65
WARNING: reduce/reduce conflict in state 67 resolved using rule (assignment -> term ASSING factor)
WARNING: rejected rule (expression -> factor) in state 67
