Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    DOUBLE

Grammar

Rule 0     S' -> main
Rule 1     main -> type MAIN param scope
Rule 2     scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS
Rule 3     new_scope -> <empty>
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     statement -> expression SEMI_COLON
Rule 7     statement -> assignment SEMI_COLON
Rule 8     statement -> declaration SEMI_COLON
Rule 9     statement -> array_declaration SEMI_COLON
Rule 10    statement -> if_statement
Rule 11    statement -> for_statement
Rule 12    statement -> do_while_statement
Rule 13    statement -> while_statement
Rule 14    statement -> call_function
Rule 15    statement -> return_statement
Rule 16    assignment -> term ASSING expression
Rule 17    assignment -> term ASSING term
Rule 18    assignment -> term ASSING factor
Rule 19    assignment -> term ASSING factor_char
Rule 20    assignment -> term array_index ASSING factor
Rule 21    assignment -> term array_index ASSING term
Rule 22    assignment -> term array_index ASSING factor_char
Rule 23    factor_char -> CHARACTER
Rule 24    expression -> expression SUM expression
Rule 25    expression -> expression SUB expression
Rule 26    expression -> expression MUL expression
Rule 27    expression -> expression DIV expression
Rule 28    expression -> expression DECREMENT
Rule 29    expression -> expression INCREMENT
Rule 30    expression -> term
Rule 31    expression -> factor
Rule 32    term -> IDENTIFIER
Rule 33    for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
Rule 34    for_initilizer -> assignment
Rule 35    for_initilizer -> declaration
Rule 36    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope
Rule 37    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
Rule 38    factor -> NUMBER
Rule 39    type -> INT
Rule 40    type -> FLOAT
Rule 41    type -> CHAR
Rule 42    condition -> expression OR expression
Rule 43    condition -> expression NOT expression
Rule 44    condition -> expression EQUALS expression
Rule 45    condition -> expression GREATER expression
Rule 46    condition -> expression LESSER expression
Rule 47    condition -> expression GREATER_OR_EQUALS expression
Rule 48    condition -> expression LESSER_OR_EQUALS expression
Rule 49    declaration -> type term
Rule 50    declaration -> type assignment
Rule 51    declarations -> declaration COMMA declarations
Rule 52    declarations -> declaration
Rule 53    passing_param -> term COMMA passing_param
Rule 54    passing_param -> term
Rule 55    passing_param -> factor COMMA passing_param
Rule 56    passing_param -> factor
Rule 57    param -> OPEN_PAREN declarations CLOSE_PAREN
Rule 58    param -> OPEN_PAREN CLOSE_PAREN
Rule 59    do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
Rule 60    while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope
Rule 61    print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
Rule 62    print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON
Rule 63    call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
Rule 64    call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
Rule 65    call_function -> print_statement
Rule 66    array_index -> OPEN_INTER factor CLOSE_INTER
Rule 67    assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER
Rule 68    array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER
Rule 69    array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
Rule 70    sequence -> NUMBER COMMA sequence
Rule 71    sequence -> NUMBER
Rule 72    sequence -> CHARACTER COMMA sequence
Rule 73    sequence -> CHARACTER
Rule 74    return_statement -> RETURN expression SEMI_COLON
Rule 75    return_statement -> RETURN SEMI_COLON

Terminals, with rules where they appear

AND                  : 
ASSING               : 16 17 18 19 20 21 22 67
BREAK                : 
CHAR                 : 41
CHARACTER            : 23 72 73
CLOSE_BRAKETS        : 2
CLOSE_INTER          : 66 67 68 69
CLOSE_PAREN          : 33 36 37 57 58 59 60 61 62 63 64
COMMA                : 51 53 55 62 70 72
DECREMENT            : 28
DIV                  : 27
DO                   : 59
DOUBLE               : 
ELSE                 : 37
EQUALS               : 44
FLOAT                : 40
FOR                  : 33
GREATER              : 45
GREATER_OR_EQUALS    : 47
IDENTIFIER           : 32 63 64
IF                   : 36 37
INCREMENT            : 29
INT                  : 39
LESSER               : 46
LESSER_OR_EQUALS     : 48
MAIN                 : 1
MUL                  : 26
NOT                  : 43
NUMBER               : 38 68 69 70 71
OPEN_BRAKETS         : 2
OPEN_INTER           : 66 67 68 69
OPEN_PAREN           : 33 36 37 57 58 59 60 61 62 63 64
OR                   : 42
PRINT                : 61 62
RETURN               : 74 75
SEMI_COLON           : 6 7 8 9 33 33 59 61 62 63 64 74 75
STRING_LITERAL       : 61 62
SUB                  : 25
SUM                  : 24
WHILE                : 59 60
error                : 

Nonterminals, with rules where they appear

array_declaration    : 9
array_index          : 20 21 22
assignment           : 7 34 50
assignment_array     : 69
call_function        : 14
condition            : 33 36 37 59 60
declaration          : 8 35 51 52
declarations         : 51 57
do_while_statement   : 12
expression           : 6 16 24 24 25 25 26 26 27 27 28 29 33 42 42 43 43 44 44 45 45 46 46 47 47 48 48 74
factor               : 18 20 31 55 56 66
factor_char          : 19 22
for_initilizer       : 33
for_statement        : 11
if_statement         : 10
main                 : 0
new_scope            : 2
param                : 1
passing_param        : 53 55 62 63
print_statement      : 65
return_statement     : 15
scope                : 1 33 36 37 37 59 60
sequence             : 67 70 72
statement            : 4 5
statements           : 2 4
term                 : 16 17 17 18 19 20 21 21 22 30 49 53 54 68 69
type                 : 1 49 50 68 69
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . type MAIN param scope
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    main                           shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> main .



state 2

    (1) main -> type . MAIN param scope

    MAIN            shift and go to state 6


state 3

    (39) type -> INT .

    MAIN            reduce using rule 39 (type -> INT .)
    IDENTIFIER      reduce using rule 39 (type -> INT .)


state 4

    (40) type -> FLOAT .

    MAIN            reduce using rule 40 (type -> FLOAT .)
    IDENTIFIER      reduce using rule 40 (type -> FLOAT .)


state 5

    (41) type -> CHAR .

    MAIN            reduce using rule 41 (type -> CHAR .)
    IDENTIFIER      reduce using rule 41 (type -> CHAR .)


state 6

    (1) main -> type MAIN . param scope
    (57) param -> . OPEN_PAREN declarations CLOSE_PAREN
    (58) param -> . OPEN_PAREN CLOSE_PAREN

    OPEN_PAREN      shift and go to state 8

    param                          shift and go to state 7

state 7

    (1) main -> type MAIN param . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 9

state 8

    (57) param -> OPEN_PAREN . declarations CLOSE_PAREN
    (58) param -> OPEN_PAREN . CLOSE_PAREN
    (51) declarations -> . declaration COMMA declarations
    (52) declarations -> . declaration
    (49) declaration -> . type term
    (50) declaration -> . type assignment
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    CLOSE_PAREN     shift and go to state 12
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declarations                   shift and go to state 11
    declaration                    shift and go to state 13
    type                           shift and go to state 14

state 9

    (1) main -> type MAIN param scope .

    $end            reduce using rule 1 (main -> type MAIN param scope .)


state 10

    (2) scope -> OPEN_BRAKETS . new_scope statements CLOSE_BRAKETS
    (3) new_scope -> .

    IF              reduce using rule 3 (new_scope -> .)
    FOR             reduce using rule 3 (new_scope -> .)
    DO              reduce using rule 3 (new_scope -> .)
    WHILE           reduce using rule 3 (new_scope -> .)
    IDENTIFIER      reduce using rule 3 (new_scope -> .)
    RETURN          reduce using rule 3 (new_scope -> .)
    NUMBER          reduce using rule 3 (new_scope -> .)
    INT             reduce using rule 3 (new_scope -> .)
    FLOAT           reduce using rule 3 (new_scope -> .)
    CHAR            reduce using rule 3 (new_scope -> .)
    PRINT           reduce using rule 3 (new_scope -> .)

    new_scope                      shift and go to state 15

state 11

    (57) param -> OPEN_PAREN declarations . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 16


state 12

    (58) param -> OPEN_PAREN CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 58 (param -> OPEN_PAREN CLOSE_PAREN .)


state 13

    (51) declarations -> declaration . COMMA declarations
    (52) declarations -> declaration .

    COMMA           shift and go to state 17
    CLOSE_PAREN     reduce using rule 52 (declarations -> declaration .)


state 14

    (49) declaration -> type . term
    (50) declaration -> type . assignment
    (32) term -> . IDENTIFIER
    (16) assignment -> . term ASSING expression
    (17) assignment -> . term ASSING term
    (18) assignment -> . term ASSING factor
    (19) assignment -> . term ASSING factor_char
    (20) assignment -> . term array_index ASSING factor
    (21) assignment -> . term array_index ASSING term
    (22) assignment -> . term array_index ASSING factor_char

    IDENTIFIER      shift and go to state 20

    term                           shift and go to state 18
    assignment                     shift and go to state 19

state 15

    (2) scope -> OPEN_BRAKETS new_scope . statements CLOSE_BRAKETS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . array_declaration SEMI_COLON
    (10) statement -> . if_statement
    (11) statement -> . for_statement
    (12) statement -> . do_while_statement
    (13) statement -> . while_statement
    (14) statement -> . call_function
    (15) statement -> . return_statement
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (16) assignment -> . term ASSING expression
    (17) assignment -> . term ASSING term
    (18) assignment -> . term ASSING factor
    (19) assignment -> . term ASSING factor_char
    (20) assignment -> . term array_index ASSING factor
    (21) assignment -> . term array_index ASSING term
    (22) assignment -> . term array_index ASSING factor_char
    (49) declaration -> . type term
    (50) declaration -> . type assignment
    (68) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER
    (69) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (36) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (37) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (33) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (59) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (60) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (63) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (64) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (65) call_function -> . print_statement
    (74) return_statement -> . RETURN expression SEMI_COLON
    (75) return_statement -> . RETURN SEMI_COLON
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR
    (61) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (62) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    IF              shift and go to state 37
    FOR             shift and go to state 38
    DO              shift and go to state 39
    WHILE           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 43
    NUMBER          shift and go to state 36
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 44

    statements                     shift and go to state 21
    statement                      shift and go to state 22
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    array_declaration              shift and go to state 26
    if_statement                   shift and go to state 27
    for_statement                  shift and go to state 28
    do_while_statement             shift and go to state 29
    while_statement                shift and go to state 30
    call_function                  shift and go to state 31
    return_statement               shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34
    type                           shift and go to state 35
    print_statement                shift and go to state 42

state 16

    (57) param -> OPEN_PAREN declarations CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 57 (param -> OPEN_PAREN declarations CLOSE_PAREN .)


state 17

    (51) declarations -> declaration COMMA . declarations
    (51) declarations -> . declaration COMMA declarations
    (52) declarations -> . declaration
    (49) declaration -> . type term
    (50) declaration -> . type assignment
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declaration                    shift and go to state 13
    declarations                   shift and go to state 45
    type                           shift and go to state 14

state 18

    (49) declaration -> type term .
    (16) assignment -> term . ASSING expression
    (17) assignment -> term . ASSING term
    (18) assignment -> term . ASSING factor
    (19) assignment -> term . ASSING factor_char
    (20) assignment -> term . array_index ASSING factor
    (21) assignment -> term . array_index ASSING term
    (22) assignment -> term . array_index ASSING factor_char
    (66) array_index -> . OPEN_INTER factor CLOSE_INTER

    COMMA           reduce using rule 49 (declaration -> type term .)
    CLOSE_PAREN     reduce using rule 49 (declaration -> type term .)
    SEMI_COLON      reduce using rule 49 (declaration -> type term .)
    ASSING          shift and go to state 46
    OPEN_INTER      shift and go to state 48

    array_index                    shift and go to state 47

state 19

    (50) declaration -> type assignment .

    COMMA           reduce using rule 50 (declaration -> type assignment .)
    CLOSE_PAREN     reduce using rule 50 (declaration -> type assignment .)
    SEMI_COLON      reduce using rule 50 (declaration -> type assignment .)


state 20

    (32) term -> IDENTIFIER .

    ASSING          reduce using rule 32 (term -> IDENTIFIER .)
    OPEN_INTER      reduce using rule 32 (term -> IDENTIFIER .)
    COMMA           reduce using rule 32 (term -> IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 32 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 32 (term -> IDENTIFIER .)
    SUM             reduce using rule 32 (term -> IDENTIFIER .)
    SUB             reduce using rule 32 (term -> IDENTIFIER .)
    MUL             reduce using rule 32 (term -> IDENTIFIER .)
    DIV             reduce using rule 32 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 32 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 32 (term -> IDENTIFIER .)
    OR              reduce using rule 32 (term -> IDENTIFIER .)
    NOT             reduce using rule 32 (term -> IDENTIFIER .)
    EQUALS          reduce using rule 32 (term -> IDENTIFIER .)
    GREATER         reduce using rule 32 (term -> IDENTIFIER .)
    LESSER          reduce using rule 32 (term -> IDENTIFIER .)
    GREATER_OR_EQUALS reduce using rule 32 (term -> IDENTIFIER .)
    LESSER_OR_EQUALS reduce using rule 32 (term -> IDENTIFIER .)


state 21

    (2) scope -> OPEN_BRAKETS new_scope statements . CLOSE_BRAKETS

    CLOSE_BRAKETS   shift and go to state 49


state 22

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . array_declaration SEMI_COLON
    (10) statement -> . if_statement
    (11) statement -> . for_statement
    (12) statement -> . do_while_statement
    (13) statement -> . while_statement
    (14) statement -> . call_function
    (15) statement -> . return_statement
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (16) assignment -> . term ASSING expression
    (17) assignment -> . term ASSING term
    (18) assignment -> . term ASSING factor
    (19) assignment -> . term ASSING factor_char
    (20) assignment -> . term array_index ASSING factor
    (21) assignment -> . term array_index ASSING term
    (22) assignment -> . term array_index ASSING factor_char
    (49) declaration -> . type term
    (50) declaration -> . type assignment
    (68) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER
    (69) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (36) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (37) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (33) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (59) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (60) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (63) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (64) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (65) call_function -> . print_statement
    (74) return_statement -> . RETURN expression SEMI_COLON
    (75) return_statement -> . RETURN SEMI_COLON
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR
    (61) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (62) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_BRAKETS   reduce using rule 5 (statements -> statement .)
    IF              shift and go to state 37
    FOR             shift and go to state 38
    DO              shift and go to state 39
    WHILE           shift and go to state 40
    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 43
    NUMBER          shift and go to state 36
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 44

    statement                      shift and go to state 22
    statements                     shift and go to state 50
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    array_declaration              shift and go to state 26
    if_statement                   shift and go to state 27
    for_statement                  shift and go to state 28
    do_while_statement             shift and go to state 29
    while_statement                shift and go to state 30
    call_function                  shift and go to state 31
    return_statement               shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34
    type                           shift and go to state 35
    print_statement                shift and go to state 42

state 23

    (6) statement -> expression . SEMI_COLON
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 51
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 24

    (7) statement -> assignment . SEMI_COLON

    SEMI_COLON      shift and go to state 58


state 25

    (8) statement -> declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 59


state 26

    (9) statement -> array_declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 60


state 27

    (10) statement -> if_statement .

    IF              reduce using rule 10 (statement -> if_statement .)
    FOR             reduce using rule 10 (statement -> if_statement .)
    DO              reduce using rule 10 (statement -> if_statement .)
    WHILE           reduce using rule 10 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> if_statement .)
    RETURN          reduce using rule 10 (statement -> if_statement .)
    NUMBER          reduce using rule 10 (statement -> if_statement .)
    INT             reduce using rule 10 (statement -> if_statement .)
    FLOAT           reduce using rule 10 (statement -> if_statement .)
    CHAR            reduce using rule 10 (statement -> if_statement .)
    PRINT           reduce using rule 10 (statement -> if_statement .)
    CLOSE_BRAKETS   reduce using rule 10 (statement -> if_statement .)


state 28

    (11) statement -> for_statement .

    IF              reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    DO              reduce using rule 11 (statement -> for_statement .)
    WHILE           reduce using rule 11 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> for_statement .)
    RETURN          reduce using rule 11 (statement -> for_statement .)
    NUMBER          reduce using rule 11 (statement -> for_statement .)
    INT             reduce using rule 11 (statement -> for_statement .)
    FLOAT           reduce using rule 11 (statement -> for_statement .)
    CHAR            reduce using rule 11 (statement -> for_statement .)
    PRINT           reduce using rule 11 (statement -> for_statement .)
    CLOSE_BRAKETS   reduce using rule 11 (statement -> for_statement .)


state 29

    (12) statement -> do_while_statement .

    IF              reduce using rule 12 (statement -> do_while_statement .)
    FOR             reduce using rule 12 (statement -> do_while_statement .)
    DO              reduce using rule 12 (statement -> do_while_statement .)
    WHILE           reduce using rule 12 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> do_while_statement .)
    RETURN          reduce using rule 12 (statement -> do_while_statement .)
    NUMBER          reduce using rule 12 (statement -> do_while_statement .)
    INT             reduce using rule 12 (statement -> do_while_statement .)
    FLOAT           reduce using rule 12 (statement -> do_while_statement .)
    CHAR            reduce using rule 12 (statement -> do_while_statement .)
    PRINT           reduce using rule 12 (statement -> do_while_statement .)
    CLOSE_BRAKETS   reduce using rule 12 (statement -> do_while_statement .)


state 30

    (13) statement -> while_statement .

    IF              reduce using rule 13 (statement -> while_statement .)
    FOR             reduce using rule 13 (statement -> while_statement .)
    DO              reduce using rule 13 (statement -> while_statement .)
    WHILE           reduce using rule 13 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> while_statement .)
    RETURN          reduce using rule 13 (statement -> while_statement .)
    NUMBER          reduce using rule 13 (statement -> while_statement .)
    INT             reduce using rule 13 (statement -> while_statement .)
    FLOAT           reduce using rule 13 (statement -> while_statement .)
    CHAR            reduce using rule 13 (statement -> while_statement .)
    PRINT           reduce using rule 13 (statement -> while_statement .)
    CLOSE_BRAKETS   reduce using rule 13 (statement -> while_statement .)


state 31

    (14) statement -> call_function .

    IF              reduce using rule 14 (statement -> call_function .)
    FOR             reduce using rule 14 (statement -> call_function .)
    DO              reduce using rule 14 (statement -> call_function .)
    WHILE           reduce using rule 14 (statement -> call_function .)
    IDENTIFIER      reduce using rule 14 (statement -> call_function .)
    RETURN          reduce using rule 14 (statement -> call_function .)
    NUMBER          reduce using rule 14 (statement -> call_function .)
    INT             reduce using rule 14 (statement -> call_function .)
    FLOAT           reduce using rule 14 (statement -> call_function .)
    CHAR            reduce using rule 14 (statement -> call_function .)
    PRINT           reduce using rule 14 (statement -> call_function .)
    CLOSE_BRAKETS   reduce using rule 14 (statement -> call_function .)


state 32

    (15) statement -> return_statement .

    IF              reduce using rule 15 (statement -> return_statement .)
    FOR             reduce using rule 15 (statement -> return_statement .)
    DO              reduce using rule 15 (statement -> return_statement .)
    WHILE           reduce using rule 15 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    NUMBER          reduce using rule 15 (statement -> return_statement .)
    INT             reduce using rule 15 (statement -> return_statement .)
    FLOAT           reduce using rule 15 (statement -> return_statement .)
    CHAR            reduce using rule 15 (statement -> return_statement .)
    PRINT           reduce using rule 15 (statement -> return_statement .)
    CLOSE_BRAKETS   reduce using rule 15 (statement -> return_statement .)


state 33

    (30) expression -> term .
    (16) assignment -> term . ASSING expression
    (17) assignment -> term . ASSING term
    (18) assignment -> term . ASSING factor
    (19) assignment -> term . ASSING factor_char
    (20) assignment -> term . array_index ASSING factor
    (21) assignment -> term . array_index ASSING term
    (22) assignment -> term . array_index ASSING factor_char
    (66) array_index -> . OPEN_INTER factor CLOSE_INTER

    SEMI_COLON      reduce using rule 30 (expression -> term .)
    SUM             reduce using rule 30 (expression -> term .)
    SUB             reduce using rule 30 (expression -> term .)
    MUL             reduce using rule 30 (expression -> term .)
    DIV             reduce using rule 30 (expression -> term .)
    DECREMENT       reduce using rule 30 (expression -> term .)
    INCREMENT       reduce using rule 30 (expression -> term .)
    ASSING          shift and go to state 46
    OPEN_INTER      shift and go to state 48

    array_index                    shift and go to state 47

state 34

    (31) expression -> factor .

    SEMI_COLON      reduce using rule 31 (expression -> factor .)
    SUM             reduce using rule 31 (expression -> factor .)
    SUB             reduce using rule 31 (expression -> factor .)
    MUL             reduce using rule 31 (expression -> factor .)
    DIV             reduce using rule 31 (expression -> factor .)
    DECREMENT       reduce using rule 31 (expression -> factor .)
    INCREMENT       reduce using rule 31 (expression -> factor .)
    COMMA           reduce using rule 31 (expression -> factor .)
    CLOSE_PAREN     reduce using rule 31 (expression -> factor .)
    OR              reduce using rule 31 (expression -> factor .)
    NOT             reduce using rule 31 (expression -> factor .)
    EQUALS          reduce using rule 31 (expression -> factor .)
    GREATER         reduce using rule 31 (expression -> factor .)
    LESSER          reduce using rule 31 (expression -> factor .)
    GREATER_OR_EQUALS reduce using rule 31 (expression -> factor .)
    LESSER_OR_EQUALS reduce using rule 31 (expression -> factor .)


state 35

    (49) declaration -> type . term
    (50) declaration -> type . assignment
    (68) array_declaration -> type . term OPEN_INTER NUMBER CLOSE_INTER
    (69) array_declaration -> type . term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (32) term -> . IDENTIFIER
    (16) assignment -> . term ASSING expression
    (17) assignment -> . term ASSING term
    (18) assignment -> . term ASSING factor
    (19) assignment -> . term ASSING factor_char
    (20) assignment -> . term array_index ASSING factor
    (21) assignment -> . term array_index ASSING term
    (22) assignment -> . term array_index ASSING factor_char

    IDENTIFIER      shift and go to state 20

    term                           shift and go to state 61
    assignment                     shift and go to state 19

state 36

    (38) factor -> NUMBER .

    SEMI_COLON      reduce using rule 38 (factor -> NUMBER .)
    SUM             reduce using rule 38 (factor -> NUMBER .)
    SUB             reduce using rule 38 (factor -> NUMBER .)
    MUL             reduce using rule 38 (factor -> NUMBER .)
    DIV             reduce using rule 38 (factor -> NUMBER .)
    DECREMENT       reduce using rule 38 (factor -> NUMBER .)
    INCREMENT       reduce using rule 38 (factor -> NUMBER .)
    COMMA           reduce using rule 38 (factor -> NUMBER .)
    CLOSE_PAREN     reduce using rule 38 (factor -> NUMBER .)
    CLOSE_INTER     reduce using rule 38 (factor -> NUMBER .)
    OR              reduce using rule 38 (factor -> NUMBER .)
    NOT             reduce using rule 38 (factor -> NUMBER .)
    EQUALS          reduce using rule 38 (factor -> NUMBER .)
    GREATER         reduce using rule 38 (factor -> NUMBER .)
    LESSER          reduce using rule 38 (factor -> NUMBER .)
    GREATER_OR_EQUALS reduce using rule 38 (factor -> NUMBER .)
    LESSER_OR_EQUALS reduce using rule 38 (factor -> NUMBER .)


state 37

    (36) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope
    (37) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope ELSE scope

    OPEN_PAREN      shift and go to state 62


state 38

    (33) for_statement -> FOR . OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 63


state 39

    (59) do_while_statement -> DO . scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 64

state 40

    (60) while_statement -> WHILE . OPEN_PAREN condition CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 65


state 41

    (63) call_function -> IDENTIFIER . OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (64) call_function -> IDENTIFIER . OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (32) term -> IDENTIFIER .

    OPEN_PAREN      shift and go to state 66
    ASSING          reduce using rule 32 (term -> IDENTIFIER .)
    OPEN_INTER      reduce using rule 32 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 32 (term -> IDENTIFIER .)
    SUM             reduce using rule 32 (term -> IDENTIFIER .)
    SUB             reduce using rule 32 (term -> IDENTIFIER .)
    MUL             reduce using rule 32 (term -> IDENTIFIER .)
    DIV             reduce using rule 32 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 32 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 32 (term -> IDENTIFIER .)


state 42

    (65) call_function -> print_statement .

    IF              reduce using rule 65 (call_function -> print_statement .)
    FOR             reduce using rule 65 (call_function -> print_statement .)
    DO              reduce using rule 65 (call_function -> print_statement .)
    WHILE           reduce using rule 65 (call_function -> print_statement .)
    IDENTIFIER      reduce using rule 65 (call_function -> print_statement .)
    RETURN          reduce using rule 65 (call_function -> print_statement .)
    NUMBER          reduce using rule 65 (call_function -> print_statement .)
    INT             reduce using rule 65 (call_function -> print_statement .)
    FLOAT           reduce using rule 65 (call_function -> print_statement .)
    CHAR            reduce using rule 65 (call_function -> print_statement .)
    PRINT           reduce using rule 65 (call_function -> print_statement .)
    CLOSE_BRAKETS   reduce using rule 65 (call_function -> print_statement .)


state 43

    (74) return_statement -> RETURN . expression SEMI_COLON
    (75) return_statement -> RETURN . SEMI_COLON
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    SEMI_COLON      shift and go to state 68
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 67
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 44

    (61) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (62) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 70


state 45

    (51) declarations -> declaration COMMA declarations .

    CLOSE_PAREN     reduce using rule 51 (declarations -> declaration COMMA declarations .)


state 46

    (16) assignment -> term ASSING . expression
    (17) assignment -> term ASSING . term
    (18) assignment -> term ASSING . factor
    (19) assignment -> term ASSING . factor_char
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER
    (23) factor_char -> . CHARACTER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36
    CHARACTER       shift and go to state 75

    term                           shift and go to state 71
    expression                     shift and go to state 72
    factor                         shift and go to state 73
    factor_char                    shift and go to state 74

state 47

    (20) assignment -> term array_index . ASSING factor
    (21) assignment -> term array_index . ASSING term
    (22) assignment -> term array_index . ASSING factor_char

    ASSING          shift and go to state 76


state 48

    (66) array_index -> OPEN_INTER . factor CLOSE_INTER
    (38) factor -> . NUMBER

    NUMBER          shift and go to state 36

    factor                         shift and go to state 77

state 49

    (2) scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .

    $end            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    WHILE           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    ELSE            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IF              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FOR             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    DO              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IDENTIFIER      reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    RETURN          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    NUMBER          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    INT             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FLOAT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CHAR            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    PRINT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CLOSE_BRAKETS   reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)


state 50

    (4) statements -> statement statements .

    CLOSE_BRAKETS   reduce using rule 4 (statements -> statement statements .)


state 51

    (6) statement -> expression SEMI_COLON .

    IF              reduce using rule 6 (statement -> expression SEMI_COLON .)
    FOR             reduce using rule 6 (statement -> expression SEMI_COLON .)
    DO              reduce using rule 6 (statement -> expression SEMI_COLON .)
    WHILE           reduce using rule 6 (statement -> expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression SEMI_COLON .)
    RETURN          reduce using rule 6 (statement -> expression SEMI_COLON .)
    NUMBER          reduce using rule 6 (statement -> expression SEMI_COLON .)
    INT             reduce using rule 6 (statement -> expression SEMI_COLON .)
    FLOAT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CHAR            reduce using rule 6 (statement -> expression SEMI_COLON .)
    PRINT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 6 (statement -> expression SEMI_COLON .)


state 52

    (24) expression -> expression SUM . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 78
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 53

    (25) expression -> expression SUB . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 79
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 54

    (26) expression -> expression MUL . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 80
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 55

    (27) expression -> expression DIV . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 81
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 56

    (28) expression -> expression DECREMENT .

    SEMI_COLON      reduce using rule 28 (expression -> expression DECREMENT .)
    SUM             reduce using rule 28 (expression -> expression DECREMENT .)
    SUB             reduce using rule 28 (expression -> expression DECREMENT .)
    MUL             reduce using rule 28 (expression -> expression DECREMENT .)
    DIV             reduce using rule 28 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 28 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 28 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 28 (expression -> expression DECREMENT .)
    CLOSE_PAREN     reduce using rule 28 (expression -> expression DECREMENT .)
    OR              reduce using rule 28 (expression -> expression DECREMENT .)
    NOT             reduce using rule 28 (expression -> expression DECREMENT .)
    EQUALS          reduce using rule 28 (expression -> expression DECREMENT .)
    GREATER         reduce using rule 28 (expression -> expression DECREMENT .)
    LESSER          reduce using rule 28 (expression -> expression DECREMENT .)
    GREATER_OR_EQUALS reduce using rule 28 (expression -> expression DECREMENT .)
    LESSER_OR_EQUALS reduce using rule 28 (expression -> expression DECREMENT .)


state 57

    (29) expression -> expression INCREMENT .

    SEMI_COLON      reduce using rule 29 (expression -> expression INCREMENT .)
    SUM             reduce using rule 29 (expression -> expression INCREMENT .)
    SUB             reduce using rule 29 (expression -> expression INCREMENT .)
    MUL             reduce using rule 29 (expression -> expression INCREMENT .)
    DIV             reduce using rule 29 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 29 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 29 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 29 (expression -> expression INCREMENT .)
    CLOSE_PAREN     reduce using rule 29 (expression -> expression INCREMENT .)
    OR              reduce using rule 29 (expression -> expression INCREMENT .)
    NOT             reduce using rule 29 (expression -> expression INCREMENT .)
    EQUALS          reduce using rule 29 (expression -> expression INCREMENT .)
    GREATER         reduce using rule 29 (expression -> expression INCREMENT .)
    LESSER          reduce using rule 29 (expression -> expression INCREMENT .)
    GREATER_OR_EQUALS reduce using rule 29 (expression -> expression INCREMENT .)
    LESSER_OR_EQUALS reduce using rule 29 (expression -> expression INCREMENT .)


state 58

    (7) statement -> assignment SEMI_COLON .

    IF              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FOR             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    DO              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    WHILE           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment SEMI_COLON .)
    RETURN          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    NUMBER          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    INT             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FLOAT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CHAR            reduce using rule 7 (statement -> assignment SEMI_COLON .)
    PRINT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 7 (statement -> assignment SEMI_COLON .)


state 59

    (8) statement -> declaration SEMI_COLON .

    IF              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FOR             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    DO              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    WHILE           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 8 (statement -> declaration SEMI_COLON .)
    RETURN          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    NUMBER          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    INT             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FLOAT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CHAR            reduce using rule 8 (statement -> declaration SEMI_COLON .)
    PRINT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 8 (statement -> declaration SEMI_COLON .)


state 60

    (9) statement -> array_declaration SEMI_COLON .

    IF              reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    FOR             reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    DO              reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    WHILE           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    RETURN          reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    NUMBER          reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    INT             reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    FLOAT           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    CHAR            reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    PRINT           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 9 (statement -> array_declaration SEMI_COLON .)


state 61

    (49) declaration -> type term .
    (68) array_declaration -> type term . OPEN_INTER NUMBER CLOSE_INTER
    (69) array_declaration -> type term . OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (16) assignment -> term . ASSING expression
    (17) assignment -> term . ASSING term
    (18) assignment -> term . ASSING factor
    (19) assignment -> term . ASSING factor_char
    (20) assignment -> term . array_index ASSING factor
    (21) assignment -> term . array_index ASSING term
    (22) assignment -> term . array_index ASSING factor_char
    (66) array_index -> . OPEN_INTER factor CLOSE_INTER

    SEMI_COLON      reduce using rule 49 (declaration -> type term .)
    OPEN_INTER      shift and go to state 82
    ASSING          shift and go to state 46

    array_index                    shift and go to state 47

state 62

    (36) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope
    (37) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope ELSE scope
    (42) condition -> . expression OR expression
    (43) condition -> . expression NOT expression
    (44) condition -> . expression EQUALS expression
    (45) condition -> . expression GREATER expression
    (46) condition -> . expression LESSER expression
    (47) condition -> . expression GREATER_OR_EQUALS expression
    (48) condition -> . expression LESSER_OR_EQUALS expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    condition                      shift and go to state 83
    expression                     shift and go to state 84
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 63

    (33) for_statement -> FOR OPEN_PAREN . for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (34) for_initilizer -> . assignment
    (35) for_initilizer -> . declaration
    (16) assignment -> . term ASSING expression
    (17) assignment -> . term ASSING term
    (18) assignment -> . term ASSING factor
    (19) assignment -> . term ASSING factor_char
    (20) assignment -> . term array_index ASSING factor
    (21) assignment -> . term array_index ASSING term
    (22) assignment -> . term array_index ASSING factor_char
    (49) declaration -> . type term
    (50) declaration -> . type assignment
    (32) term -> . IDENTIFIER
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    IDENTIFIER      shift and go to state 20
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    for_initilizer                 shift and go to state 85
    assignment                     shift and go to state 86
    declaration                    shift and go to state 87
    term                           shift and go to state 88
    type                           shift and go to state 14

state 64

    (59) do_while_statement -> DO scope . WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    WHILE           shift and go to state 89


state 65

    (60) while_statement -> WHILE OPEN_PAREN . condition CLOSE_PAREN scope
    (42) condition -> . expression OR expression
    (43) condition -> . expression NOT expression
    (44) condition -> . expression EQUALS expression
    (45) condition -> . expression GREATER expression
    (46) condition -> . expression LESSER expression
    (47) condition -> . expression GREATER_OR_EQUALS expression
    (48) condition -> . expression LESSER_OR_EQUALS expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    condition                      shift and go to state 90
    expression                     shift and go to state 84
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 66

    (63) call_function -> IDENTIFIER OPEN_PAREN . passing_param CLOSE_PAREN SEMI_COLON
    (64) call_function -> IDENTIFIER OPEN_PAREN . CLOSE_PAREN SEMI_COLON
    (53) passing_param -> . term COMMA passing_param
    (54) passing_param -> . term
    (55) passing_param -> . factor COMMA passing_param
    (56) passing_param -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    CLOSE_PAREN     shift and go to state 92
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    passing_param                  shift and go to state 91
    term                           shift and go to state 93
    factor                         shift and go to state 94

state 67

    (74) return_statement -> RETURN expression . SEMI_COLON
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 95
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 68

    (75) return_statement -> RETURN SEMI_COLON .

    IF              reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    FOR             reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    DO              reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    IDENTIFIER      reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    NUMBER          reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    INT             reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    FLOAT           reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    CHAR            reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 75 (return_statement -> RETURN SEMI_COLON .)


state 69

    (30) expression -> term .

    SEMI_COLON      reduce using rule 30 (expression -> term .)
    SUM             reduce using rule 30 (expression -> term .)
    SUB             reduce using rule 30 (expression -> term .)
    MUL             reduce using rule 30 (expression -> term .)
    DIV             reduce using rule 30 (expression -> term .)
    DECREMENT       reduce using rule 30 (expression -> term .)
    INCREMENT       reduce using rule 30 (expression -> term .)
    COMMA           reduce using rule 30 (expression -> term .)
    CLOSE_PAREN     reduce using rule 30 (expression -> term .)
    OR              reduce using rule 30 (expression -> term .)
    NOT             reduce using rule 30 (expression -> term .)
    EQUALS          reduce using rule 30 (expression -> term .)
    GREATER         reduce using rule 30 (expression -> term .)
    LESSER          reduce using rule 30 (expression -> term .)
    GREATER_OR_EQUALS reduce using rule 30 (expression -> term .)
    LESSER_OR_EQUALS reduce using rule 30 (expression -> term .)


state 70

    (61) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (62) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    STRING_LITERAL  shift and go to state 96


state 71

    (17) assignment -> term ASSING term .
    (30) expression -> term .

  ! reduce/reduce conflict for COMMA resolved using rule 17 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 17 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 17 (assignment -> term ASSING term .)
    COMMA           reduce using rule 17 (assignment -> term ASSING term .)
    CLOSE_PAREN     reduce using rule 17 (assignment -> term ASSING term .)
    SEMI_COLON      reduce using rule 17 (assignment -> term ASSING term .)
    SUM             reduce using rule 30 (expression -> term .)
    SUB             reduce using rule 30 (expression -> term .)
    MUL             reduce using rule 30 (expression -> term .)
    DIV             reduce using rule 30 (expression -> term .)
    DECREMENT       reduce using rule 30 (expression -> term .)
    INCREMENT       reduce using rule 30 (expression -> term .)

  ! COMMA           [ reduce using rule 30 (expression -> term .) ]
  ! CLOSE_PAREN     [ reduce using rule 30 (expression -> term .) ]
  ! SEMI_COLON      [ reduce using rule 30 (expression -> term .) ]


state 72

    (16) assignment -> term ASSING expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    COMMA           reduce using rule 16 (assignment -> term ASSING expression .)
    CLOSE_PAREN     reduce using rule 16 (assignment -> term ASSING expression .)
    SEMI_COLON      reduce using rule 16 (assignment -> term ASSING expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 73

    (18) assignment -> term ASSING factor .
    (31) expression -> factor .

  ! reduce/reduce conflict for COMMA resolved using rule 18 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 18 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 18 (assignment -> term ASSING factor .)
    COMMA           reduce using rule 18 (assignment -> term ASSING factor .)
    CLOSE_PAREN     reduce using rule 18 (assignment -> term ASSING factor .)
    SEMI_COLON      reduce using rule 18 (assignment -> term ASSING factor .)
    SUM             reduce using rule 31 (expression -> factor .)
    SUB             reduce using rule 31 (expression -> factor .)
    MUL             reduce using rule 31 (expression -> factor .)
    DIV             reduce using rule 31 (expression -> factor .)
    DECREMENT       reduce using rule 31 (expression -> factor .)
    INCREMENT       reduce using rule 31 (expression -> factor .)

  ! COMMA           [ reduce using rule 31 (expression -> factor .) ]
  ! CLOSE_PAREN     [ reduce using rule 31 (expression -> factor .) ]
  ! SEMI_COLON      [ reduce using rule 31 (expression -> factor .) ]


state 74

    (19) assignment -> term ASSING factor_char .

    COMMA           reduce using rule 19 (assignment -> term ASSING factor_char .)
    CLOSE_PAREN     reduce using rule 19 (assignment -> term ASSING factor_char .)
    SEMI_COLON      reduce using rule 19 (assignment -> term ASSING factor_char .)


state 75

    (23) factor_char -> CHARACTER .

    COMMA           reduce using rule 23 (factor_char -> CHARACTER .)
    CLOSE_PAREN     reduce using rule 23 (factor_char -> CHARACTER .)
    SEMI_COLON      reduce using rule 23 (factor_char -> CHARACTER .)


state 76

    (20) assignment -> term array_index ASSING . factor
    (21) assignment -> term array_index ASSING . term
    (22) assignment -> term array_index ASSING . factor_char
    (38) factor -> . NUMBER
    (32) term -> . IDENTIFIER
    (23) factor_char -> . CHARACTER

    NUMBER          shift and go to state 36
    IDENTIFIER      shift and go to state 20
    CHARACTER       shift and go to state 75

    term                           shift and go to state 97
    factor                         shift and go to state 98
    factor_char                    shift and go to state 99

state 77

    (66) array_index -> OPEN_INTER factor . CLOSE_INTER

    CLOSE_INTER     shift and go to state 100


state 78

    (24) expression -> expression SUM expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 24 (expression -> expression SUM expression .)
    COMMA           reduce using rule 24 (expression -> expression SUM expression .)
    CLOSE_PAREN     reduce using rule 24 (expression -> expression SUM expression .)
    OR              reduce using rule 24 (expression -> expression SUM expression .)
    NOT             reduce using rule 24 (expression -> expression SUM expression .)
    EQUALS          reduce using rule 24 (expression -> expression SUM expression .)
    GREATER         reduce using rule 24 (expression -> expression SUM expression .)
    LESSER          reduce using rule 24 (expression -> expression SUM expression .)
    GREATER_OR_EQUALS reduce using rule 24 (expression -> expression SUM expression .)
    LESSER_OR_EQUALS reduce using rule 24 (expression -> expression SUM expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57

  ! SUM             [ reduce using rule 24 (expression -> expression SUM expression .) ]
  ! SUB             [ reduce using rule 24 (expression -> expression SUM expression .) ]
  ! MUL             [ reduce using rule 24 (expression -> expression SUM expression .) ]
  ! DIV             [ reduce using rule 24 (expression -> expression SUM expression .) ]
  ! DECREMENT       [ reduce using rule 24 (expression -> expression SUM expression .) ]
  ! INCREMENT       [ reduce using rule 24 (expression -> expression SUM expression .) ]


state 79

    (25) expression -> expression SUB expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 25 (expression -> expression SUB expression .)
    COMMA           reduce using rule 25 (expression -> expression SUB expression .)
    CLOSE_PAREN     reduce using rule 25 (expression -> expression SUB expression .)
    OR              reduce using rule 25 (expression -> expression SUB expression .)
    NOT             reduce using rule 25 (expression -> expression SUB expression .)
    EQUALS          reduce using rule 25 (expression -> expression SUB expression .)
    GREATER         reduce using rule 25 (expression -> expression SUB expression .)
    LESSER          reduce using rule 25 (expression -> expression SUB expression .)
    GREATER_OR_EQUALS reduce using rule 25 (expression -> expression SUB expression .)
    LESSER_OR_EQUALS reduce using rule 25 (expression -> expression SUB expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57

  ! SUM             [ reduce using rule 25 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 25 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 25 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 25 (expression -> expression SUB expression .) ]
  ! DECREMENT       [ reduce using rule 25 (expression -> expression SUB expression .) ]
  ! INCREMENT       [ reduce using rule 25 (expression -> expression SUB expression .) ]


state 80

    (26) expression -> expression MUL expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 26 (expression -> expression MUL expression .)
    COMMA           reduce using rule 26 (expression -> expression MUL expression .)
    CLOSE_PAREN     reduce using rule 26 (expression -> expression MUL expression .)
    OR              reduce using rule 26 (expression -> expression MUL expression .)
    NOT             reduce using rule 26 (expression -> expression MUL expression .)
    EQUALS          reduce using rule 26 (expression -> expression MUL expression .)
    GREATER         reduce using rule 26 (expression -> expression MUL expression .)
    LESSER          reduce using rule 26 (expression -> expression MUL expression .)
    GREATER_OR_EQUALS reduce using rule 26 (expression -> expression MUL expression .)
    LESSER_OR_EQUALS reduce using rule 26 (expression -> expression MUL expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57

  ! SUM             [ reduce using rule 26 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 26 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 26 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 26 (expression -> expression MUL expression .) ]
  ! DECREMENT       [ reduce using rule 26 (expression -> expression MUL expression .) ]
  ! INCREMENT       [ reduce using rule 26 (expression -> expression MUL expression .) ]


state 81

    (27) expression -> expression DIV expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 27 (expression -> expression DIV expression .)
    COMMA           reduce using rule 27 (expression -> expression DIV expression .)
    CLOSE_PAREN     reduce using rule 27 (expression -> expression DIV expression .)
    OR              reduce using rule 27 (expression -> expression DIV expression .)
    NOT             reduce using rule 27 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 27 (expression -> expression DIV expression .)
    GREATER         reduce using rule 27 (expression -> expression DIV expression .)
    LESSER          reduce using rule 27 (expression -> expression DIV expression .)
    GREATER_OR_EQUALS reduce using rule 27 (expression -> expression DIV expression .)
    LESSER_OR_EQUALS reduce using rule 27 (expression -> expression DIV expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57

  ! SUM             [ reduce using rule 27 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 27 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 27 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression DIV expression .) ]
  ! DECREMENT       [ reduce using rule 27 (expression -> expression DIV expression .) ]
  ! INCREMENT       [ reduce using rule 27 (expression -> expression DIV expression .) ]


state 82

    (68) array_declaration -> type term OPEN_INTER . NUMBER CLOSE_INTER
    (69) array_declaration -> type term OPEN_INTER . NUMBER CLOSE_INTER assignment_array
    (66) array_index -> OPEN_INTER . factor CLOSE_INTER
    (38) factor -> . NUMBER

    NUMBER          shift and go to state 101

    factor                         shift and go to state 77

state 83

    (36) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope
    (37) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope ELSE scope

    CLOSE_PAREN     shift and go to state 102


state 84

    (42) condition -> expression . OR expression
    (43) condition -> expression . NOT expression
    (44) condition -> expression . EQUALS expression
    (45) condition -> expression . GREATER expression
    (46) condition -> expression . LESSER expression
    (47) condition -> expression . GREATER_OR_EQUALS expression
    (48) condition -> expression . LESSER_OR_EQUALS expression
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    OR              shift and go to state 103
    NOT             shift and go to state 104
    EQUALS          shift and go to state 105
    GREATER         shift and go to state 106
    LESSER          shift and go to state 107
    GREATER_OR_EQUALS shift and go to state 108
    LESSER_OR_EQUALS shift and go to state 109
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 85

    (33) for_statement -> FOR OPEN_PAREN for_initilizer . SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 110


state 86

    (34) for_initilizer -> assignment .

    SEMI_COLON      reduce using rule 34 (for_initilizer -> assignment .)


state 87

    (35) for_initilizer -> declaration .

    SEMI_COLON      reduce using rule 35 (for_initilizer -> declaration .)


state 88

    (16) assignment -> term . ASSING expression
    (17) assignment -> term . ASSING term
    (18) assignment -> term . ASSING factor
    (19) assignment -> term . ASSING factor_char
    (20) assignment -> term . array_index ASSING factor
    (21) assignment -> term . array_index ASSING term
    (22) assignment -> term . array_index ASSING factor_char
    (66) array_index -> . OPEN_INTER factor CLOSE_INTER

    ASSING          shift and go to state 46
    OPEN_INTER      shift and go to state 48

    array_index                    shift and go to state 47

state 89

    (59) do_while_statement -> DO scope WHILE . OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 111


state 90

    (60) while_statement -> WHILE OPEN_PAREN condition . CLOSE_PAREN scope

    CLOSE_PAREN     shift and go to state 112


state 91

    (63) call_function -> IDENTIFIER OPEN_PAREN passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 113


state 92

    (64) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 114


state 93

    (53) passing_param -> term . COMMA passing_param
    (54) passing_param -> term .

    COMMA           shift and go to state 115
    CLOSE_PAREN     reduce using rule 54 (passing_param -> term .)


state 94

    (55) passing_param -> factor . COMMA passing_param
    (56) passing_param -> factor .

    COMMA           shift and go to state 116
    CLOSE_PAREN     reduce using rule 56 (passing_param -> factor .)


state 95

    (74) return_statement -> RETURN expression SEMI_COLON .

    IF              reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    FOR             reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    DO              reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    WHILE           reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    RETURN          reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    NUMBER          reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    INT             reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    FLOAT           reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    CHAR            reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    PRINT           reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 74 (return_statement -> RETURN expression SEMI_COLON .)


state 96

    (61) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMI_COLON
    (62) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 117
    COMMA           shift and go to state 118


state 97

    (21) assignment -> term array_index ASSING term .

    COMMA           reduce using rule 21 (assignment -> term array_index ASSING term .)
    CLOSE_PAREN     reduce using rule 21 (assignment -> term array_index ASSING term .)
    SEMI_COLON      reduce using rule 21 (assignment -> term array_index ASSING term .)


state 98

    (20) assignment -> term array_index ASSING factor .

    COMMA           reduce using rule 20 (assignment -> term array_index ASSING factor .)
    CLOSE_PAREN     reduce using rule 20 (assignment -> term array_index ASSING factor .)
    SEMI_COLON      reduce using rule 20 (assignment -> term array_index ASSING factor .)


state 99

    (22) assignment -> term array_index ASSING factor_char .

    COMMA           reduce using rule 22 (assignment -> term array_index ASSING factor_char .)
    CLOSE_PAREN     reduce using rule 22 (assignment -> term array_index ASSING factor_char .)
    SEMI_COLON      reduce using rule 22 (assignment -> term array_index ASSING factor_char .)


state 100

    (66) array_index -> OPEN_INTER factor CLOSE_INTER .

    ASSING          reduce using rule 66 (array_index -> OPEN_INTER factor CLOSE_INTER .)


state 101

    (68) array_declaration -> type term OPEN_INTER NUMBER . CLOSE_INTER
    (69) array_declaration -> type term OPEN_INTER NUMBER . CLOSE_INTER assignment_array
    (38) factor -> NUMBER .

  ! shift/reduce conflict for CLOSE_INTER resolved as shift
    CLOSE_INTER     shift and go to state 119

  ! CLOSE_INTER     [ reduce using rule 38 (factor -> NUMBER .) ]


state 102

    (36) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope
    (37) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope ELSE scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 120

state 103

    (42) condition -> expression OR . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 121
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 104

    (43) condition -> expression NOT . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 122
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 105

    (44) condition -> expression EQUALS . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 123
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 106

    (45) condition -> expression GREATER . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 124
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 107

    (46) condition -> expression LESSER . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 125
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 108

    (47) condition -> expression GREATER_OR_EQUALS . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 126
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 109

    (48) condition -> expression LESSER_OR_EQUALS . expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 127
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 110

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON . condition SEMI_COLON expression CLOSE_PAREN scope
    (42) condition -> . expression OR expression
    (43) condition -> . expression NOT expression
    (44) condition -> . expression EQUALS expression
    (45) condition -> . expression GREATER expression
    (46) condition -> . expression LESSER expression
    (47) condition -> . expression GREATER_OR_EQUALS expression
    (48) condition -> . expression LESSER_OR_EQUALS expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    condition                      shift and go to state 128
    expression                     shift and go to state 84
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 111

    (59) do_while_statement -> DO scope WHILE OPEN_PAREN . condition CLOSE_PAREN SEMI_COLON
    (42) condition -> . expression OR expression
    (43) condition -> . expression NOT expression
    (44) condition -> . expression EQUALS expression
    (45) condition -> . expression GREATER expression
    (46) condition -> . expression LESSER expression
    (47) condition -> . expression GREATER_OR_EQUALS expression
    (48) condition -> . expression LESSER_OR_EQUALS expression
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    condition                      shift and go to state 129
    expression                     shift and go to state 84
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 112

    (60) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 130

state 113

    (63) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 131


state 114

    (64) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 64 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)


state 115

    (53) passing_param -> term COMMA . passing_param
    (53) passing_param -> . term COMMA passing_param
    (54) passing_param -> . term
    (55) passing_param -> . factor COMMA passing_param
    (56) passing_param -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    term                           shift and go to state 93
    passing_param                  shift and go to state 132
    factor                         shift and go to state 94

state 116

    (55) passing_param -> factor COMMA . passing_param
    (53) passing_param -> . term COMMA passing_param
    (54) passing_param -> . term
    (55) passing_param -> . factor COMMA passing_param
    (56) passing_param -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    factor                         shift and go to state 94
    passing_param                  shift and go to state 133
    term                           shift and go to state 93

state 117

    (61) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 134


state 118

    (62) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA . passing_param CLOSE_PAREN SEMI_COLON
    (53) passing_param -> . term COMMA passing_param
    (54) passing_param -> . term
    (55) passing_param -> . factor COMMA passing_param
    (56) passing_param -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    passing_param                  shift and go to state 135
    term                           shift and go to state 93
    factor                         shift and go to state 94

state 119

    (68) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER .
    (69) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER . assignment_array
    (67) assignment_array -> . ASSING OPEN_INTER sequence CLOSE_INTER

    SEMI_COLON      reduce using rule 68 (array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER .)
    ASSING          shift and go to state 137

    assignment_array               shift and go to state 136

state 120

    (36) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .
    (37) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope . ELSE scope

    IF              reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 36 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    ELSE            shift and go to state 138


state 121

    (42) condition -> expression OR expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 42 (condition -> expression OR expression .)
    SEMI_COLON      reduce using rule 42 (condition -> expression OR expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 122

    (43) condition -> expression NOT expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 43 (condition -> expression NOT expression .)
    SEMI_COLON      reduce using rule 43 (condition -> expression NOT expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 123

    (44) condition -> expression EQUALS expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 44 (condition -> expression EQUALS expression .)
    SEMI_COLON      reduce using rule 44 (condition -> expression EQUALS expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 124

    (45) condition -> expression GREATER expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 45 (condition -> expression GREATER expression .)
    SEMI_COLON      reduce using rule 45 (condition -> expression GREATER expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 125

    (46) condition -> expression LESSER expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 46 (condition -> expression LESSER expression .)
    SEMI_COLON      reduce using rule 46 (condition -> expression LESSER expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 126

    (47) condition -> expression GREATER_OR_EQUALS expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 47 (condition -> expression GREATER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 47 (condition -> expression GREATER_OR_EQUALS expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 127

    (48) condition -> expression LESSER_OR_EQUALS expression .
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 48 (condition -> expression LESSER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 48 (condition -> expression LESSER_OR_EQUALS expression .)
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 128

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition . SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 139


state 129

    (59) do_while_statement -> DO scope WHILE OPEN_PAREN condition . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 140


state 130

    (60) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .

    IF              reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 60 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)


state 131

    (63) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 63 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)


state 132

    (53) passing_param -> term COMMA passing_param .

    CLOSE_PAREN     reduce using rule 53 (passing_param -> term COMMA passing_param .)


state 133

    (55) passing_param -> factor COMMA passing_param .

    CLOSE_PAREN     reduce using rule 55 (passing_param -> factor COMMA passing_param .)


state 134

    (61) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 61 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)


state 135

    (62) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 141


state 136

    (69) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array .

    SEMI_COLON      reduce using rule 69 (array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array .)


state 137

    (67) assignment_array -> ASSING . OPEN_INTER sequence CLOSE_INTER

    OPEN_INTER      shift and go to state 142


state 138

    (37) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 143

state 139

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON . expression CLOSE_PAREN scope
    (24) expression -> . expression SUM expression
    (25) expression -> . expression SUB expression
    (26) expression -> . expression MUL expression
    (27) expression -> . expression DIV expression
    (28) expression -> . expression DECREMENT
    (29) expression -> . expression INCREMENT
    (30) expression -> . term
    (31) expression -> . factor
    (32) term -> . IDENTIFIER
    (38) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 36

    expression                     shift and go to state 144
    term                           shift and go to state 69
    factor                         shift and go to state 34

state 140

    (59) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 145


state 141

    (62) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 146


state 142

    (67) assignment_array -> ASSING OPEN_INTER . sequence CLOSE_INTER
    (70) sequence -> . NUMBER COMMA sequence
    (71) sequence -> . NUMBER
    (72) sequence -> . CHARACTER COMMA sequence
    (73) sequence -> . CHARACTER

    NUMBER          shift and go to state 148
    CHARACTER       shift and go to state 149

    sequence                       shift and go to state 147

state 143

    (37) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .

    IF              reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FOR             reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    DO              reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    WHILE           reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    IDENTIFIER      reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    RETURN          reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    NUMBER          reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    INT             reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FLOAT           reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CHAR            reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    PRINT           reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CLOSE_BRAKETS   reduce using rule 37 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)


state 144

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression . CLOSE_PAREN scope
    (24) expression -> expression . SUM expression
    (25) expression -> expression . SUB expression
    (26) expression -> expression . MUL expression
    (27) expression -> expression . DIV expression
    (28) expression -> expression . DECREMENT
    (29) expression -> expression . INCREMENT

    CLOSE_PAREN     shift and go to state 150
    SUM             shift and go to state 52
    SUB             shift and go to state 53
    MUL             shift and go to state 54
    DIV             shift and go to state 55
    DECREMENT       shift and go to state 56
    INCREMENT       shift and go to state 57


state 145

    (59) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 59 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)


state 146

    (62) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .

    IF              reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 62 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)


state 147

    (67) assignment_array -> ASSING OPEN_INTER sequence . CLOSE_INTER

    CLOSE_INTER     shift and go to state 151


state 148

    (70) sequence -> NUMBER . COMMA sequence
    (71) sequence -> NUMBER .

    COMMA           shift and go to state 152
    CLOSE_INTER     reduce using rule 71 (sequence -> NUMBER .)


state 149

    (72) sequence -> CHARACTER . COMMA sequence
    (73) sequence -> CHARACTER .

    COMMA           shift and go to state 153
    CLOSE_INTER     reduce using rule 73 (sequence -> CHARACTER .)


state 150

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 154

state 151

    (67) assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER .

    SEMI_COLON      reduce using rule 67 (assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER .)


state 152

    (70) sequence -> NUMBER COMMA . sequence
    (70) sequence -> . NUMBER COMMA sequence
    (71) sequence -> . NUMBER
    (72) sequence -> . CHARACTER COMMA sequence
    (73) sequence -> . CHARACTER

    NUMBER          shift and go to state 148
    CHARACTER       shift and go to state 149

    sequence                       shift and go to state 155

state 153

    (72) sequence -> CHARACTER COMMA . sequence
    (70) sequence -> . NUMBER COMMA sequence
    (71) sequence -> . NUMBER
    (72) sequence -> . CHARACTER COMMA sequence
    (73) sequence -> . CHARACTER

    NUMBER          shift and go to state 148
    CHARACTER       shift and go to state 149

    sequence                       shift and go to state 156

state 154

    (33) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .

    IF              reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FOR             reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    DO              reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    WHILE           reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    RETURN          reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    NUMBER          reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    INT             reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FLOAT           reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CHAR            reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    PRINT           reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 33 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)


state 155

    (70) sequence -> NUMBER COMMA sequence .

    CLOSE_INTER     reduce using rule 70 (sequence -> NUMBER COMMA sequence .)


state 156

    (72) sequence -> CHARACTER COMMA sequence .

    CLOSE_INTER     reduce using rule 72 (sequence -> CHARACTER COMMA sequence .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 78 resolved as shift
WARNING: shift/reduce conflict for SUB in state 78 resolved as shift
WARNING: shift/reduce conflict for MUL in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for SUM in state 79 resolved as shift
WARNING: shift/reduce conflict for SUB in state 79 resolved as shift
WARNING: shift/reduce conflict for MUL in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 79 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 79 resolved as shift
WARNING: shift/reduce conflict for SUM in state 80 resolved as shift
WARNING: shift/reduce conflict for SUB in state 80 resolved as shift
WARNING: shift/reduce conflict for MUL in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 80 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 80 resolved as shift
WARNING: shift/reduce conflict for SUM in state 81 resolved as shift
WARNING: shift/reduce conflict for SUB in state 81 resolved as shift
WARNING: shift/reduce conflict for MUL in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 81 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 81 resolved as shift
WARNING: shift/reduce conflict for CLOSE_INTER in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 71 resolved using rule (assignment -> term ASSING term)
WARNING: rejected rule (expression -> term) in state 71
WARNING: reduce/reduce conflict in state 73 resolved using rule (assignment -> term ASSING factor)
WARNING: rejected rule (expression -> factor) in state 73
