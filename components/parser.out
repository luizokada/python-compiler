Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    DOUBLE

Grammar

Rule 0     S' -> main
Rule 1     main -> type MAIN param scope
Rule 2     scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS
Rule 3     new_scope -> <empty>
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     statement -> expression SEMI_COLON
Rule 7     statement -> assignment SEMI_COLON
Rule 8     statement -> declaration SEMI_COLON
Rule 9     statement -> array_declaration SEMI_COLON
Rule 10    statement -> if_statement
Rule 11    statement -> for_statement
Rule 12    statement -> do_while_statement
Rule 13    statement -> while_statement
Rule 14    statement -> call_function
Rule 15    statement -> return_statement
Rule 16    factor_char -> CHARACTER
Rule 17    expression -> term
Rule 18    expression -> factor
Rule 19    term -> IDENTIFIER
Rule 20    type -> INT
Rule 21    type -> FLOAT
Rule 22    type -> CHAR
Rule 23    factor -> NUMBER
Rule 24    factor -> SUB NUMBER
Rule 25    sequence -> NUMBER COMMA sequence
Rule 26    sequence -> NUMBER
Rule 27    sequence -> CHARACTER COMMA sequence
Rule 28    sequence -> CHARACTER
Rule 29    return_statement -> RETURN expression SEMI_COLON
Rule 30    return_statement -> RETURN SEMI_COLON
Rule 31    assignment -> term ASSING expression
Rule 32    assignment -> term ASSING term
Rule 33    assignment -> term ASSING factor
Rule 34    assignment -> term ASSING factor_char
Rule 35    assignment -> term array_index ASSING factor
Rule 36    assignment -> term array_index ASSING term
Rule 37    assignment -> term array_index ASSING factor_char
Rule 38    expression -> expression SUM expression
Rule 39    expression -> expression SUB expression
Rule 40    expression -> expression MUL expression
Rule 41    expression -> expression DIV expression
Rule 42    expression -> expression DECREMENT
Rule 43    expression -> expression INCREMENT
Rule 44    expression -> OPEN_PAREN expression CLOSE_PAREN
Rule 45    condition -> expression OR expression
Rule 46    condition -> expression NOT expression
Rule 47    condition -> expression EQUALS expression
Rule 48    condition -> expression DIFERENT expression
Rule 49    condition -> expression GREATER expression
Rule 50    condition -> expression LESSER expression
Rule 51    condition -> expression GREATER_OR_EQUALS expression
Rule 52    condition -> expression LESSER_OR_EQUALS expression
Rule 53    condition -> expression DIFERENT factor_char
Rule 54    condition -> expression EQUALS factor_char
Rule 55    declaration -> type term
Rule 56    array_index -> OPEN_INTER factor CLOSE_INTER
Rule 57    assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER
Rule 58    array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER
Rule 59    array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
Rule 60    declarations -> declaration COMMA declarations
Rule 61    declarations -> declaration
Rule 62    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope
Rule 63    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
Rule 64    param -> OPEN_PAREN declarations CLOSE_PAREN
Rule 65    param -> OPEN_PAREN CLOSE_PAREN
Rule 66    passing_param -> term COMMA passing_param
Rule 67    passing_param -> term
Rule 68    passing_param -> factor COMMA passing_param
Rule 69    passing_param -> factor
Rule 70    print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
Rule 71    print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON
Rule 72    call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
Rule 73    call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
Rule 74    call_function -> print_statement
Rule 75    for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
Rule 76    for_initilizer -> assignment
Rule 77    do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
Rule 78    while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope

Terminals, with rules where they appear

AND                  : 
ASSING               : 31 32 33 34 35 36 37 57
BREAK                : 
CHAR                 : 22
CHARACTER            : 16 27 28
CLOSE_BRAKETS        : 2
CLOSE_INTER          : 56 57 58 59
CLOSE_PAREN          : 44 62 63 64 65 70 71 72 73 75 77 78
COMMA                : 25 27 60 66 68 71
DECREMENT            : 42
DIFERENT             : 48 53
DIV                  : 41
DO                   : 77
DOUBLE               : 
ELSE                 : 63
EQUALS               : 47 54
FLOAT                : 21
FOR                  : 75
GREATER              : 49
GREATER_OR_EQUALS    : 51
IDENTIFIER           : 19 72 73
IF                   : 62 63
INCREMENT            : 43
INT                  : 20
LESSER               : 50
LESSER_OR_EQUALS     : 52
MAIN                 : 1
MUL                  : 40
NOT                  : 46
NUMBER               : 23 24 25 26 58 59
OPEN_BRAKETS         : 2
OPEN_INTER           : 56 57 58 59
OPEN_PAREN           : 44 62 63 64 65 70 71 72 73 75 77 78
OR                   : 45
PRINT                : 70 71
RETURN               : 29 30
SEMI_COLON           : 6 7 8 9 29 30 70 71 72 73 75 75 77
STRING_LITERAL       : 70 71
SUB                  : 24 39
SUM                  : 38
WHILE                : 77 78
error                : 

Nonterminals, with rules where they appear

array_declaration    : 9
array_index          : 35 36 37
assignment           : 7 76
assignment_array     : 59
call_function        : 14
condition            : 62 63 75 77 78
declaration          : 8 60 61
declarations         : 60 64
do_while_statement   : 12
expression           : 6 29 31 38 38 39 39 40 40 41 41 42 43 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 54 75
factor               : 18 33 35 56 68 69
factor_char          : 34 37 53 54
for_initilizer       : 75
for_statement        : 11
if_statement         : 10
main                 : 0
new_scope            : 2
param                : 1
passing_param        : 66 68 71 72
print_statement      : 74
return_statement     : 15
scope                : 1 62 63 63 75 77 78
sequence             : 25 27 57
statement            : 4 5
statements           : 2 4
term                 : 17 31 32 32 33 34 35 36 36 37 55 58 59 66 67
type                 : 1 55 58 59
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . type MAIN param scope
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    main                           shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> main .



state 2

    (1) main -> type . MAIN param scope

    MAIN            shift and go to state 6


state 3

    (20) type -> INT .

    MAIN            reduce using rule 20 (type -> INT .)
    IDENTIFIER      reduce using rule 20 (type -> INT .)


state 4

    (21) type -> FLOAT .

    MAIN            reduce using rule 21 (type -> FLOAT .)
    IDENTIFIER      reduce using rule 21 (type -> FLOAT .)


state 5

    (22) type -> CHAR .

    MAIN            reduce using rule 22 (type -> CHAR .)
    IDENTIFIER      reduce using rule 22 (type -> CHAR .)


state 6

    (1) main -> type MAIN . param scope
    (64) param -> . OPEN_PAREN declarations CLOSE_PAREN
    (65) param -> . OPEN_PAREN CLOSE_PAREN

    OPEN_PAREN      shift and go to state 8

    param                          shift and go to state 7

state 7

    (1) main -> type MAIN param . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 9

state 8

    (64) param -> OPEN_PAREN . declarations CLOSE_PAREN
    (65) param -> OPEN_PAREN . CLOSE_PAREN
    (60) declarations -> . declaration COMMA declarations
    (61) declarations -> . declaration
    (55) declaration -> . type term
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . CHAR

    CLOSE_PAREN     shift and go to state 12
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declarations                   shift and go to state 11
    declaration                    shift and go to state 13
    type                           shift and go to state 14

state 9

    (1) main -> type MAIN param scope .

    $end            reduce using rule 1 (main -> type MAIN param scope .)


state 10

    (2) scope -> OPEN_BRAKETS . new_scope statements CLOSE_BRAKETS
    (3) new_scope -> .

    OPEN_PAREN      reduce using rule 3 (new_scope -> .)
    IF              reduce using rule 3 (new_scope -> .)
    FOR             reduce using rule 3 (new_scope -> .)
    DO              reduce using rule 3 (new_scope -> .)
    WHILE           reduce using rule 3 (new_scope -> .)
    IDENTIFIER      reduce using rule 3 (new_scope -> .)
    RETURN          reduce using rule 3 (new_scope -> .)
    NUMBER          reduce using rule 3 (new_scope -> .)
    SUB             reduce using rule 3 (new_scope -> .)
    INT             reduce using rule 3 (new_scope -> .)
    FLOAT           reduce using rule 3 (new_scope -> .)
    CHAR            reduce using rule 3 (new_scope -> .)
    PRINT           reduce using rule 3 (new_scope -> .)

    new_scope                      shift and go to state 15

state 11

    (64) param -> OPEN_PAREN declarations . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 16


state 12

    (65) param -> OPEN_PAREN CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 65 (param -> OPEN_PAREN CLOSE_PAREN .)


state 13

    (60) declarations -> declaration . COMMA declarations
    (61) declarations -> declaration .

    COMMA           shift and go to state 17
    CLOSE_PAREN     reduce using rule 61 (declarations -> declaration .)


state 14

    (55) declaration -> type . term
    (19) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 18

state 15

    (2) scope -> OPEN_BRAKETS new_scope . statements CLOSE_BRAKETS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . array_declaration SEMI_COLON
    (10) statement -> . if_statement
    (11) statement -> . for_statement
    (12) statement -> . do_while_statement
    (13) statement -> . while_statement
    (14) statement -> . call_function
    (15) statement -> . return_statement
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (31) assignment -> . term ASSING expression
    (32) assignment -> . term ASSING term
    (33) assignment -> . term ASSING factor
    (34) assignment -> . term ASSING factor_char
    (35) assignment -> . term array_index ASSING factor
    (36) assignment -> . term array_index ASSING term
    (37) assignment -> . term array_index ASSING factor_char
    (55) declaration -> . type term
    (58) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER
    (59) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (62) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (63) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (75) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (77) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (78) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (72) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (73) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (74) call_function -> . print_statement
    (29) return_statement -> . RETURN expression SEMI_COLON
    (30) return_statement -> . RETURN SEMI_COLON
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . CHAR
    (70) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (71) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 35
    IF              shift and go to state 38
    FOR             shift and go to state 39
    DO              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 44
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 45

    statements                     shift and go to state 20
    statement                      shift and go to state 21
    expression                     shift and go to state 22
    assignment                     shift and go to state 23
    declaration                    shift and go to state 24
    array_declaration              shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    do_while_statement             shift and go to state 28
    while_statement                shift and go to state 29
    call_function                  shift and go to state 30
    return_statement               shift and go to state 31
    term                           shift and go to state 32
    factor                         shift and go to state 33
    type                           shift and go to state 36
    print_statement                shift and go to state 43

state 16

    (64) param -> OPEN_PAREN declarations CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 64 (param -> OPEN_PAREN declarations CLOSE_PAREN .)


state 17

    (60) declarations -> declaration COMMA . declarations
    (60) declarations -> . declaration COMMA declarations
    (61) declarations -> . declaration
    (55) declaration -> . type term
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declaration                    shift and go to state 13
    declarations                   shift and go to state 46
    type                           shift and go to state 14

state 18

    (55) declaration -> type term .

    COMMA           reduce using rule 55 (declaration -> type term .)
    CLOSE_PAREN     reduce using rule 55 (declaration -> type term .)


state 19

    (19) term -> IDENTIFIER .

    COMMA           reduce using rule 19 (term -> IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 19 (term -> IDENTIFIER .)
    SUM             reduce using rule 19 (term -> IDENTIFIER .)
    SUB             reduce using rule 19 (term -> IDENTIFIER .)
    MUL             reduce using rule 19 (term -> IDENTIFIER .)
    DIV             reduce using rule 19 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 19 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 19 (term -> IDENTIFIER .)
    OPEN_INTER      reduce using rule 19 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 19 (term -> IDENTIFIER .)
    OR              reduce using rule 19 (term -> IDENTIFIER .)
    NOT             reduce using rule 19 (term -> IDENTIFIER .)
    EQUALS          reduce using rule 19 (term -> IDENTIFIER .)
    DIFERENT        reduce using rule 19 (term -> IDENTIFIER .)
    GREATER         reduce using rule 19 (term -> IDENTIFIER .)
    LESSER          reduce using rule 19 (term -> IDENTIFIER .)
    GREATER_OR_EQUALS reduce using rule 19 (term -> IDENTIFIER .)
    LESSER_OR_EQUALS reduce using rule 19 (term -> IDENTIFIER .)
    ASSING          reduce using rule 19 (term -> IDENTIFIER .)


state 20

    (2) scope -> OPEN_BRAKETS new_scope statements . CLOSE_BRAKETS

    CLOSE_BRAKETS   shift and go to state 47


state 21

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . array_declaration SEMI_COLON
    (10) statement -> . if_statement
    (11) statement -> . for_statement
    (12) statement -> . do_while_statement
    (13) statement -> . while_statement
    (14) statement -> . call_function
    (15) statement -> . return_statement
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (31) assignment -> . term ASSING expression
    (32) assignment -> . term ASSING term
    (33) assignment -> . term ASSING factor
    (34) assignment -> . term ASSING factor_char
    (35) assignment -> . term array_index ASSING factor
    (36) assignment -> . term array_index ASSING term
    (37) assignment -> . term array_index ASSING factor_char
    (55) declaration -> . type term
    (58) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER
    (59) array_declaration -> . type term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (62) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (63) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (75) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (77) do_while_statement -> . DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (78) while_statement -> . WHILE OPEN_PAREN condition CLOSE_PAREN scope
    (72) call_function -> . IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (73) call_function -> . IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (74) call_function -> . print_statement
    (29) return_statement -> . RETURN expression SEMI_COLON
    (30) return_statement -> . RETURN SEMI_COLON
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER
    (20) type -> . INT
    (21) type -> . FLOAT
    (22) type -> . CHAR
    (70) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (71) print_statement -> . PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_BRAKETS   reduce using rule 5 (statements -> statement .)
    OPEN_PAREN      shift and go to state 35
    IF              shift and go to state 38
    FOR             shift and go to state 39
    DO              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 44
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    PRINT           shift and go to state 45

    statement                      shift and go to state 21
    statements                     shift and go to state 48
    expression                     shift and go to state 22
    assignment                     shift and go to state 23
    declaration                    shift and go to state 24
    array_declaration              shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    do_while_statement             shift and go to state 28
    while_statement                shift and go to state 29
    call_function                  shift and go to state 30
    return_statement               shift and go to state 31
    term                           shift and go to state 32
    factor                         shift and go to state 33
    type                           shift and go to state 36
    print_statement                shift and go to state 43

state 22

    (6) statement -> expression . SEMI_COLON
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 49
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 23

    (7) statement -> assignment . SEMI_COLON

    SEMI_COLON      shift and go to state 56


state 24

    (8) statement -> declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 57


state 25

    (9) statement -> array_declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 58


state 26

    (10) statement -> if_statement .

    OPEN_PAREN      reduce using rule 10 (statement -> if_statement .)
    IF              reduce using rule 10 (statement -> if_statement .)
    FOR             reduce using rule 10 (statement -> if_statement .)
    DO              reduce using rule 10 (statement -> if_statement .)
    WHILE           reduce using rule 10 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> if_statement .)
    RETURN          reduce using rule 10 (statement -> if_statement .)
    NUMBER          reduce using rule 10 (statement -> if_statement .)
    SUB             reduce using rule 10 (statement -> if_statement .)
    INT             reduce using rule 10 (statement -> if_statement .)
    FLOAT           reduce using rule 10 (statement -> if_statement .)
    CHAR            reduce using rule 10 (statement -> if_statement .)
    PRINT           reduce using rule 10 (statement -> if_statement .)
    CLOSE_BRAKETS   reduce using rule 10 (statement -> if_statement .)


state 27

    (11) statement -> for_statement .

    OPEN_PAREN      reduce using rule 11 (statement -> for_statement .)
    IF              reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    DO              reduce using rule 11 (statement -> for_statement .)
    WHILE           reduce using rule 11 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> for_statement .)
    RETURN          reduce using rule 11 (statement -> for_statement .)
    NUMBER          reduce using rule 11 (statement -> for_statement .)
    SUB             reduce using rule 11 (statement -> for_statement .)
    INT             reduce using rule 11 (statement -> for_statement .)
    FLOAT           reduce using rule 11 (statement -> for_statement .)
    CHAR            reduce using rule 11 (statement -> for_statement .)
    PRINT           reduce using rule 11 (statement -> for_statement .)
    CLOSE_BRAKETS   reduce using rule 11 (statement -> for_statement .)


state 28

    (12) statement -> do_while_statement .

    OPEN_PAREN      reduce using rule 12 (statement -> do_while_statement .)
    IF              reduce using rule 12 (statement -> do_while_statement .)
    FOR             reduce using rule 12 (statement -> do_while_statement .)
    DO              reduce using rule 12 (statement -> do_while_statement .)
    WHILE           reduce using rule 12 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> do_while_statement .)
    RETURN          reduce using rule 12 (statement -> do_while_statement .)
    NUMBER          reduce using rule 12 (statement -> do_while_statement .)
    SUB             reduce using rule 12 (statement -> do_while_statement .)
    INT             reduce using rule 12 (statement -> do_while_statement .)
    FLOAT           reduce using rule 12 (statement -> do_while_statement .)
    CHAR            reduce using rule 12 (statement -> do_while_statement .)
    PRINT           reduce using rule 12 (statement -> do_while_statement .)
    CLOSE_BRAKETS   reduce using rule 12 (statement -> do_while_statement .)


state 29

    (13) statement -> while_statement .

    OPEN_PAREN      reduce using rule 13 (statement -> while_statement .)
    IF              reduce using rule 13 (statement -> while_statement .)
    FOR             reduce using rule 13 (statement -> while_statement .)
    DO              reduce using rule 13 (statement -> while_statement .)
    WHILE           reduce using rule 13 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> while_statement .)
    RETURN          reduce using rule 13 (statement -> while_statement .)
    NUMBER          reduce using rule 13 (statement -> while_statement .)
    SUB             reduce using rule 13 (statement -> while_statement .)
    INT             reduce using rule 13 (statement -> while_statement .)
    FLOAT           reduce using rule 13 (statement -> while_statement .)
    CHAR            reduce using rule 13 (statement -> while_statement .)
    PRINT           reduce using rule 13 (statement -> while_statement .)
    CLOSE_BRAKETS   reduce using rule 13 (statement -> while_statement .)


state 30

    (14) statement -> call_function .

    OPEN_PAREN      reduce using rule 14 (statement -> call_function .)
    IF              reduce using rule 14 (statement -> call_function .)
    FOR             reduce using rule 14 (statement -> call_function .)
    DO              reduce using rule 14 (statement -> call_function .)
    WHILE           reduce using rule 14 (statement -> call_function .)
    IDENTIFIER      reduce using rule 14 (statement -> call_function .)
    RETURN          reduce using rule 14 (statement -> call_function .)
    NUMBER          reduce using rule 14 (statement -> call_function .)
    SUB             reduce using rule 14 (statement -> call_function .)
    INT             reduce using rule 14 (statement -> call_function .)
    FLOAT           reduce using rule 14 (statement -> call_function .)
    CHAR            reduce using rule 14 (statement -> call_function .)
    PRINT           reduce using rule 14 (statement -> call_function .)
    CLOSE_BRAKETS   reduce using rule 14 (statement -> call_function .)


state 31

    (15) statement -> return_statement .

    OPEN_PAREN      reduce using rule 15 (statement -> return_statement .)
    IF              reduce using rule 15 (statement -> return_statement .)
    FOR             reduce using rule 15 (statement -> return_statement .)
    DO              reduce using rule 15 (statement -> return_statement .)
    WHILE           reduce using rule 15 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    NUMBER          reduce using rule 15 (statement -> return_statement .)
    SUB             reduce using rule 15 (statement -> return_statement .)
    INT             reduce using rule 15 (statement -> return_statement .)
    FLOAT           reduce using rule 15 (statement -> return_statement .)
    CHAR            reduce using rule 15 (statement -> return_statement .)
    PRINT           reduce using rule 15 (statement -> return_statement .)
    CLOSE_BRAKETS   reduce using rule 15 (statement -> return_statement .)


state 32

    (17) expression -> term .
    (31) assignment -> term . ASSING expression
    (32) assignment -> term . ASSING term
    (33) assignment -> term . ASSING factor
    (34) assignment -> term . ASSING factor_char
    (35) assignment -> term . array_index ASSING factor
    (36) assignment -> term . array_index ASSING term
    (37) assignment -> term . array_index ASSING factor_char
    (56) array_index -> . OPEN_INTER factor CLOSE_INTER

    SEMI_COLON      reduce using rule 17 (expression -> term .)
    SUM             reduce using rule 17 (expression -> term .)
    SUB             reduce using rule 17 (expression -> term .)
    MUL             reduce using rule 17 (expression -> term .)
    DIV             reduce using rule 17 (expression -> term .)
    DECREMENT       reduce using rule 17 (expression -> term .)
    INCREMENT       reduce using rule 17 (expression -> term .)
    ASSING          shift and go to state 59
    OPEN_INTER      shift and go to state 61

    array_index                    shift and go to state 60

state 33

    (18) expression -> factor .

    SEMI_COLON      reduce using rule 18 (expression -> factor .)
    SUM             reduce using rule 18 (expression -> factor .)
    SUB             reduce using rule 18 (expression -> factor .)
    MUL             reduce using rule 18 (expression -> factor .)
    DIV             reduce using rule 18 (expression -> factor .)
    DECREMENT       reduce using rule 18 (expression -> factor .)
    INCREMENT       reduce using rule 18 (expression -> factor .)
    CLOSE_PAREN     reduce using rule 18 (expression -> factor .)
    OR              reduce using rule 18 (expression -> factor .)
    NOT             reduce using rule 18 (expression -> factor .)
    EQUALS          reduce using rule 18 (expression -> factor .)
    DIFERENT        reduce using rule 18 (expression -> factor .)
    GREATER         reduce using rule 18 (expression -> factor .)
    LESSER          reduce using rule 18 (expression -> factor .)
    GREATER_OR_EQUALS reduce using rule 18 (expression -> factor .)
    LESSER_OR_EQUALS reduce using rule 18 (expression -> factor .)


state 34

    (24) factor -> SUB . NUMBER

    NUMBER          shift and go to state 62


state 35

    (44) expression -> OPEN_PAREN . expression CLOSE_PAREN
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 36

    (55) declaration -> type . term
    (58) array_declaration -> type . term OPEN_INTER NUMBER CLOSE_INTER
    (59) array_declaration -> type . term OPEN_INTER NUMBER CLOSE_INTER assignment_array
    (19) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    term                           shift and go to state 65

state 37

    (23) factor -> NUMBER .

    SEMI_COLON      reduce using rule 23 (factor -> NUMBER .)
    SUM             reduce using rule 23 (factor -> NUMBER .)
    SUB             reduce using rule 23 (factor -> NUMBER .)
    MUL             reduce using rule 23 (factor -> NUMBER .)
    DIV             reduce using rule 23 (factor -> NUMBER .)
    DECREMENT       reduce using rule 23 (factor -> NUMBER .)
    INCREMENT       reduce using rule 23 (factor -> NUMBER .)
    CLOSE_PAREN     reduce using rule 23 (factor -> NUMBER .)
    OR              reduce using rule 23 (factor -> NUMBER .)
    NOT             reduce using rule 23 (factor -> NUMBER .)
    EQUALS          reduce using rule 23 (factor -> NUMBER .)
    DIFERENT        reduce using rule 23 (factor -> NUMBER .)
    GREATER         reduce using rule 23 (factor -> NUMBER .)
    LESSER          reduce using rule 23 (factor -> NUMBER .)
    GREATER_OR_EQUALS reduce using rule 23 (factor -> NUMBER .)
    LESSER_OR_EQUALS reduce using rule 23 (factor -> NUMBER .)
    CLOSE_INTER     reduce using rule 23 (factor -> NUMBER .)
    COMMA           reduce using rule 23 (factor -> NUMBER .)


state 38

    (62) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope
    (63) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope ELSE scope

    OPEN_PAREN      shift and go to state 66


state 39

    (75) for_statement -> FOR . OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 67


state 40

    (77) do_while_statement -> DO . scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 68

state 41

    (78) while_statement -> WHILE . OPEN_PAREN condition CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 69


state 42

    (72) call_function -> IDENTIFIER . OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON
    (73) call_function -> IDENTIFIER . OPEN_PAREN CLOSE_PAREN SEMI_COLON
    (19) term -> IDENTIFIER .

    OPEN_PAREN      shift and go to state 70
    ASSING          reduce using rule 19 (term -> IDENTIFIER .)
    OPEN_INTER      reduce using rule 19 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 19 (term -> IDENTIFIER .)
    SUM             reduce using rule 19 (term -> IDENTIFIER .)
    SUB             reduce using rule 19 (term -> IDENTIFIER .)
    MUL             reduce using rule 19 (term -> IDENTIFIER .)
    DIV             reduce using rule 19 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 19 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 19 (term -> IDENTIFIER .)


state 43

    (74) call_function -> print_statement .

    OPEN_PAREN      reduce using rule 74 (call_function -> print_statement .)
    IF              reduce using rule 74 (call_function -> print_statement .)
    FOR             reduce using rule 74 (call_function -> print_statement .)
    DO              reduce using rule 74 (call_function -> print_statement .)
    WHILE           reduce using rule 74 (call_function -> print_statement .)
    IDENTIFIER      reduce using rule 74 (call_function -> print_statement .)
    RETURN          reduce using rule 74 (call_function -> print_statement .)
    NUMBER          reduce using rule 74 (call_function -> print_statement .)
    SUB             reduce using rule 74 (call_function -> print_statement .)
    INT             reduce using rule 74 (call_function -> print_statement .)
    FLOAT           reduce using rule 74 (call_function -> print_statement .)
    CHAR            reduce using rule 74 (call_function -> print_statement .)
    PRINT           reduce using rule 74 (call_function -> print_statement .)
    CLOSE_BRAKETS   reduce using rule 74 (call_function -> print_statement .)


state 44

    (29) return_statement -> RETURN . expression SEMI_COLON
    (30) return_statement -> RETURN . SEMI_COLON
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    SEMI_COLON      shift and go to state 72
    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 71
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 45

    (70) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (71) print_statement -> PRINT . OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 73


state 46

    (60) declarations -> declaration COMMA declarations .

    CLOSE_PAREN     reduce using rule 60 (declarations -> declaration COMMA declarations .)


state 47

    (2) scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .

    $end            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    WHILE           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    ELSE            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    OPEN_PAREN      reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IF              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FOR             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    DO              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IDENTIFIER      reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    RETURN          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    NUMBER          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    SUB             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    INT             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FLOAT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CHAR            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    PRINT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CLOSE_BRAKETS   reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)


state 48

    (4) statements -> statement statements .

    CLOSE_BRAKETS   reduce using rule 4 (statements -> statement statements .)


state 49

    (6) statement -> expression SEMI_COLON .

    OPEN_PAREN      reduce using rule 6 (statement -> expression SEMI_COLON .)
    IF              reduce using rule 6 (statement -> expression SEMI_COLON .)
    FOR             reduce using rule 6 (statement -> expression SEMI_COLON .)
    DO              reduce using rule 6 (statement -> expression SEMI_COLON .)
    WHILE           reduce using rule 6 (statement -> expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression SEMI_COLON .)
    RETURN          reduce using rule 6 (statement -> expression SEMI_COLON .)
    NUMBER          reduce using rule 6 (statement -> expression SEMI_COLON .)
    SUB             reduce using rule 6 (statement -> expression SEMI_COLON .)
    INT             reduce using rule 6 (statement -> expression SEMI_COLON .)
    FLOAT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CHAR            reduce using rule 6 (statement -> expression SEMI_COLON .)
    PRINT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 6 (statement -> expression SEMI_COLON .)


state 50

    (38) expression -> expression SUM . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 74
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 51

    (39) expression -> expression SUB . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 75
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 52

    (40) expression -> expression MUL . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 76
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 53

    (41) expression -> expression DIV . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 77
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 54

    (42) expression -> expression DECREMENT .

    SEMI_COLON      reduce using rule 42 (expression -> expression DECREMENT .)
    SUM             reduce using rule 42 (expression -> expression DECREMENT .)
    SUB             reduce using rule 42 (expression -> expression DECREMENT .)
    MUL             reduce using rule 42 (expression -> expression DECREMENT .)
    DIV             reduce using rule 42 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 42 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 42 (expression -> expression DECREMENT .)
    CLOSE_PAREN     reduce using rule 42 (expression -> expression DECREMENT .)
    OR              reduce using rule 42 (expression -> expression DECREMENT .)
    NOT             reduce using rule 42 (expression -> expression DECREMENT .)
    EQUALS          reduce using rule 42 (expression -> expression DECREMENT .)
    DIFERENT        reduce using rule 42 (expression -> expression DECREMENT .)
    GREATER         reduce using rule 42 (expression -> expression DECREMENT .)
    LESSER          reduce using rule 42 (expression -> expression DECREMENT .)
    GREATER_OR_EQUALS reduce using rule 42 (expression -> expression DECREMENT .)
    LESSER_OR_EQUALS reduce using rule 42 (expression -> expression DECREMENT .)


state 55

    (43) expression -> expression INCREMENT .

    SEMI_COLON      reduce using rule 43 (expression -> expression INCREMENT .)
    SUM             reduce using rule 43 (expression -> expression INCREMENT .)
    SUB             reduce using rule 43 (expression -> expression INCREMENT .)
    MUL             reduce using rule 43 (expression -> expression INCREMENT .)
    DIV             reduce using rule 43 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 43 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 43 (expression -> expression INCREMENT .)
    CLOSE_PAREN     reduce using rule 43 (expression -> expression INCREMENT .)
    OR              reduce using rule 43 (expression -> expression INCREMENT .)
    NOT             reduce using rule 43 (expression -> expression INCREMENT .)
    EQUALS          reduce using rule 43 (expression -> expression INCREMENT .)
    DIFERENT        reduce using rule 43 (expression -> expression INCREMENT .)
    GREATER         reduce using rule 43 (expression -> expression INCREMENT .)
    LESSER          reduce using rule 43 (expression -> expression INCREMENT .)
    GREATER_OR_EQUALS reduce using rule 43 (expression -> expression INCREMENT .)
    LESSER_OR_EQUALS reduce using rule 43 (expression -> expression INCREMENT .)


state 56

    (7) statement -> assignment SEMI_COLON .

    OPEN_PAREN      reduce using rule 7 (statement -> assignment SEMI_COLON .)
    IF              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FOR             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    DO              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    WHILE           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment SEMI_COLON .)
    RETURN          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    NUMBER          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    SUB             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    INT             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FLOAT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CHAR            reduce using rule 7 (statement -> assignment SEMI_COLON .)
    PRINT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 7 (statement -> assignment SEMI_COLON .)


state 57

    (8) statement -> declaration SEMI_COLON .

    OPEN_PAREN      reduce using rule 8 (statement -> declaration SEMI_COLON .)
    IF              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FOR             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    DO              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    WHILE           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 8 (statement -> declaration SEMI_COLON .)
    RETURN          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    NUMBER          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    SUB             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    INT             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FLOAT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CHAR            reduce using rule 8 (statement -> declaration SEMI_COLON .)
    PRINT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 8 (statement -> declaration SEMI_COLON .)


state 58

    (9) statement -> array_declaration SEMI_COLON .

    OPEN_PAREN      reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    IF              reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    FOR             reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    DO              reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    WHILE           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    RETURN          reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    NUMBER          reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    SUB             reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    INT             reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    FLOAT           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    CHAR            reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    PRINT           reduce using rule 9 (statement -> array_declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 9 (statement -> array_declaration SEMI_COLON .)


state 59

    (31) assignment -> term ASSING . expression
    (32) assignment -> term ASSING . term
    (33) assignment -> term ASSING . factor
    (34) assignment -> term ASSING . factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER
    (16) factor_char -> . CHARACTER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34
    CHARACTER       shift and go to state 82

    term                           shift and go to state 78
    expression                     shift and go to state 79
    factor                         shift and go to state 80
    factor_char                    shift and go to state 81

state 60

    (35) assignment -> term array_index . ASSING factor
    (36) assignment -> term array_index . ASSING term
    (37) assignment -> term array_index . ASSING factor_char

    ASSING          shift and go to state 83


state 61

    (56) array_index -> OPEN_INTER . factor CLOSE_INTER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    factor                         shift and go to state 84

state 62

    (24) factor -> SUB NUMBER .

    SEMI_COLON      reduce using rule 24 (factor -> SUB NUMBER .)
    SUM             reduce using rule 24 (factor -> SUB NUMBER .)
    SUB             reduce using rule 24 (factor -> SUB NUMBER .)
    MUL             reduce using rule 24 (factor -> SUB NUMBER .)
    DIV             reduce using rule 24 (factor -> SUB NUMBER .)
    DECREMENT       reduce using rule 24 (factor -> SUB NUMBER .)
    INCREMENT       reduce using rule 24 (factor -> SUB NUMBER .)
    CLOSE_PAREN     reduce using rule 24 (factor -> SUB NUMBER .)
    OR              reduce using rule 24 (factor -> SUB NUMBER .)
    NOT             reduce using rule 24 (factor -> SUB NUMBER .)
    EQUALS          reduce using rule 24 (factor -> SUB NUMBER .)
    DIFERENT        reduce using rule 24 (factor -> SUB NUMBER .)
    GREATER         reduce using rule 24 (factor -> SUB NUMBER .)
    LESSER          reduce using rule 24 (factor -> SUB NUMBER .)
    GREATER_OR_EQUALS reduce using rule 24 (factor -> SUB NUMBER .)
    LESSER_OR_EQUALS reduce using rule 24 (factor -> SUB NUMBER .)
    CLOSE_INTER     reduce using rule 24 (factor -> SUB NUMBER .)
    COMMA           reduce using rule 24 (factor -> SUB NUMBER .)


state 63

    (44) expression -> OPEN_PAREN expression . CLOSE_PAREN
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     shift and go to state 85
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 64

    (17) expression -> term .

    CLOSE_PAREN     reduce using rule 17 (expression -> term .)
    SUM             reduce using rule 17 (expression -> term .)
    SUB             reduce using rule 17 (expression -> term .)
    MUL             reduce using rule 17 (expression -> term .)
    DIV             reduce using rule 17 (expression -> term .)
    DECREMENT       reduce using rule 17 (expression -> term .)
    INCREMENT       reduce using rule 17 (expression -> term .)
    SEMI_COLON      reduce using rule 17 (expression -> term .)
    OR              reduce using rule 17 (expression -> term .)
    NOT             reduce using rule 17 (expression -> term .)
    EQUALS          reduce using rule 17 (expression -> term .)
    DIFERENT        reduce using rule 17 (expression -> term .)
    GREATER         reduce using rule 17 (expression -> term .)
    LESSER          reduce using rule 17 (expression -> term .)
    GREATER_OR_EQUALS reduce using rule 17 (expression -> term .)
    LESSER_OR_EQUALS reduce using rule 17 (expression -> term .)


state 65

    (55) declaration -> type term .
    (58) array_declaration -> type term . OPEN_INTER NUMBER CLOSE_INTER
    (59) array_declaration -> type term . OPEN_INTER NUMBER CLOSE_INTER assignment_array

    SEMI_COLON      reduce using rule 55 (declaration -> type term .)
    OPEN_INTER      shift and go to state 86


state 66

    (62) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope
    (63) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope ELSE scope
    (45) condition -> . expression OR expression
    (46) condition -> . expression NOT expression
    (47) condition -> . expression EQUALS expression
    (48) condition -> . expression DIFERENT expression
    (49) condition -> . expression GREATER expression
    (50) condition -> . expression LESSER expression
    (51) condition -> . expression GREATER_OR_EQUALS expression
    (52) condition -> . expression LESSER_OR_EQUALS expression
    (53) condition -> . expression DIFERENT factor_char
    (54) condition -> . expression EQUALS factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    condition                      shift and go to state 87
    expression                     shift and go to state 88
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 67

    (75) for_statement -> FOR OPEN_PAREN . for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (76) for_initilizer -> . assignment
    (31) assignment -> . term ASSING expression
    (32) assignment -> . term ASSING term
    (33) assignment -> . term ASSING factor
    (34) assignment -> . term ASSING factor_char
    (35) assignment -> . term array_index ASSING factor
    (36) assignment -> . term array_index ASSING term
    (37) assignment -> . term array_index ASSING factor_char
    (19) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 19

    for_initilizer                 shift and go to state 89
    assignment                     shift and go to state 90
    term                           shift and go to state 91

state 68

    (77) do_while_statement -> DO scope . WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    WHILE           shift and go to state 92


state 69

    (78) while_statement -> WHILE OPEN_PAREN . condition CLOSE_PAREN scope
    (45) condition -> . expression OR expression
    (46) condition -> . expression NOT expression
    (47) condition -> . expression EQUALS expression
    (48) condition -> . expression DIFERENT expression
    (49) condition -> . expression GREATER expression
    (50) condition -> . expression LESSER expression
    (51) condition -> . expression GREATER_OR_EQUALS expression
    (52) condition -> . expression LESSER_OR_EQUALS expression
    (53) condition -> . expression DIFERENT factor_char
    (54) condition -> . expression EQUALS factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    condition                      shift and go to state 93
    expression                     shift and go to state 88
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 70

    (72) call_function -> IDENTIFIER OPEN_PAREN . passing_param CLOSE_PAREN SEMI_COLON
    (73) call_function -> IDENTIFIER OPEN_PAREN . CLOSE_PAREN SEMI_COLON
    (66) passing_param -> . term COMMA passing_param
    (67) passing_param -> . term
    (68) passing_param -> . factor COMMA passing_param
    (69) passing_param -> . factor
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    CLOSE_PAREN     shift and go to state 95
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    passing_param                  shift and go to state 94
    term                           shift and go to state 96
    factor                         shift and go to state 97

state 71

    (29) return_statement -> RETURN expression . SEMI_COLON
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 98
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 72

    (30) return_statement -> RETURN SEMI_COLON .

    OPEN_PAREN      reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    IF              reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    FOR             reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    DO              reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    IDENTIFIER      reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    NUMBER          reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    SUB             reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    INT             reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    FLOAT           reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    CHAR            reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 30 (return_statement -> RETURN SEMI_COLON .)


state 73

    (70) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMI_COLON
    (71) print_statement -> PRINT OPEN_PAREN . STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON

    STRING_LITERAL  shift and go to state 99


state 74

    (38) expression -> expression SUM expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 38 (expression -> expression SUM expression .)
    CLOSE_PAREN     reduce using rule 38 (expression -> expression SUM expression .)
    OR              reduce using rule 38 (expression -> expression SUM expression .)
    NOT             reduce using rule 38 (expression -> expression SUM expression .)
    EQUALS          reduce using rule 38 (expression -> expression SUM expression .)
    DIFERENT        reduce using rule 38 (expression -> expression SUM expression .)
    GREATER         reduce using rule 38 (expression -> expression SUM expression .)
    LESSER          reduce using rule 38 (expression -> expression SUM expression .)
    GREATER_OR_EQUALS reduce using rule 38 (expression -> expression SUM expression .)
    LESSER_OR_EQUALS reduce using rule 38 (expression -> expression SUM expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55

  ! SUM             [ reduce using rule 38 (expression -> expression SUM expression .) ]
  ! SUB             [ reduce using rule 38 (expression -> expression SUM expression .) ]
  ! MUL             [ reduce using rule 38 (expression -> expression SUM expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression SUM expression .) ]
  ! DECREMENT       [ reduce using rule 38 (expression -> expression SUM expression .) ]
  ! INCREMENT       [ reduce using rule 38 (expression -> expression SUM expression .) ]


state 75

    (39) expression -> expression SUB expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 39 (expression -> expression SUB expression .)
    CLOSE_PAREN     reduce using rule 39 (expression -> expression SUB expression .)
    OR              reduce using rule 39 (expression -> expression SUB expression .)
    NOT             reduce using rule 39 (expression -> expression SUB expression .)
    EQUALS          reduce using rule 39 (expression -> expression SUB expression .)
    DIFERENT        reduce using rule 39 (expression -> expression SUB expression .)
    GREATER         reduce using rule 39 (expression -> expression SUB expression .)
    LESSER          reduce using rule 39 (expression -> expression SUB expression .)
    GREATER_OR_EQUALS reduce using rule 39 (expression -> expression SUB expression .)
    LESSER_OR_EQUALS reduce using rule 39 (expression -> expression SUB expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55

  ! SUM             [ reduce using rule 39 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 39 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 39 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression SUB expression .) ]
  ! DECREMENT       [ reduce using rule 39 (expression -> expression SUB expression .) ]
  ! INCREMENT       [ reduce using rule 39 (expression -> expression SUB expression .) ]


state 76

    (40) expression -> expression MUL expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 40 (expression -> expression MUL expression .)
    CLOSE_PAREN     reduce using rule 40 (expression -> expression MUL expression .)
    OR              reduce using rule 40 (expression -> expression MUL expression .)
    NOT             reduce using rule 40 (expression -> expression MUL expression .)
    EQUALS          reduce using rule 40 (expression -> expression MUL expression .)
    DIFERENT        reduce using rule 40 (expression -> expression MUL expression .)
    GREATER         reduce using rule 40 (expression -> expression MUL expression .)
    LESSER          reduce using rule 40 (expression -> expression MUL expression .)
    GREATER_OR_EQUALS reduce using rule 40 (expression -> expression MUL expression .)
    LESSER_OR_EQUALS reduce using rule 40 (expression -> expression MUL expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55

  ! SUM             [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! DECREMENT       [ reduce using rule 40 (expression -> expression MUL expression .) ]
  ! INCREMENT       [ reduce using rule 40 (expression -> expression MUL expression .) ]


state 77

    (41) expression -> expression DIV expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 41 (expression -> expression DIV expression .)
    CLOSE_PAREN     reduce using rule 41 (expression -> expression DIV expression .)
    OR              reduce using rule 41 (expression -> expression DIV expression .)
    NOT             reduce using rule 41 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 41 (expression -> expression DIV expression .)
    DIFERENT        reduce using rule 41 (expression -> expression DIV expression .)
    GREATER         reduce using rule 41 (expression -> expression DIV expression .)
    LESSER          reduce using rule 41 (expression -> expression DIV expression .)
    GREATER_OR_EQUALS reduce using rule 41 (expression -> expression DIV expression .)
    LESSER_OR_EQUALS reduce using rule 41 (expression -> expression DIV expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55

  ! SUM             [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! DECREMENT       [ reduce using rule 41 (expression -> expression DIV expression .) ]
  ! INCREMENT       [ reduce using rule 41 (expression -> expression DIV expression .) ]


state 78

    (32) assignment -> term ASSING term .
    (17) expression -> term .

  ! reduce/reduce conflict for SEMI_COLON resolved using rule 17 (expression -> term .)
    SUM             reduce using rule 17 (expression -> term .)
    SUB             reduce using rule 17 (expression -> term .)
    MUL             reduce using rule 17 (expression -> term .)
    DIV             reduce using rule 17 (expression -> term .)
    DECREMENT       reduce using rule 17 (expression -> term .)
    INCREMENT       reduce using rule 17 (expression -> term .)
    SEMI_COLON      reduce using rule 17 (expression -> term .)

  ! SEMI_COLON      [ reduce using rule 32 (assignment -> term ASSING term .) ]


state 79

    (31) assignment -> term ASSING expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    SEMI_COLON      reduce using rule 31 (assignment -> term ASSING expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 80

    (33) assignment -> term ASSING factor .
    (18) expression -> factor .

  ! reduce/reduce conflict for SEMI_COLON resolved using rule 18 (expression -> factor .)
    SUM             reduce using rule 18 (expression -> factor .)
    SUB             reduce using rule 18 (expression -> factor .)
    MUL             reduce using rule 18 (expression -> factor .)
    DIV             reduce using rule 18 (expression -> factor .)
    DECREMENT       reduce using rule 18 (expression -> factor .)
    INCREMENT       reduce using rule 18 (expression -> factor .)
    SEMI_COLON      reduce using rule 18 (expression -> factor .)

  ! SEMI_COLON      [ reduce using rule 33 (assignment -> term ASSING factor .) ]


state 81

    (34) assignment -> term ASSING factor_char .

    SEMI_COLON      reduce using rule 34 (assignment -> term ASSING factor_char .)


state 82

    (16) factor_char -> CHARACTER .

    SEMI_COLON      reduce using rule 16 (factor_char -> CHARACTER .)
    CLOSE_PAREN     reduce using rule 16 (factor_char -> CHARACTER .)


state 83

    (35) assignment -> term array_index ASSING . factor
    (36) assignment -> term array_index ASSING . term
    (37) assignment -> term array_index ASSING . factor_char
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER
    (19) term -> . IDENTIFIER
    (16) factor_char -> . CHARACTER

    NUMBER          shift and go to state 37
    SUB             shift and go to state 34
    IDENTIFIER      shift and go to state 19
    CHARACTER       shift and go to state 82

    term                           shift and go to state 100
    factor                         shift and go to state 101
    factor_char                    shift and go to state 102

state 84

    (56) array_index -> OPEN_INTER factor . CLOSE_INTER

    CLOSE_INTER     shift and go to state 103


state 85

    (44) expression -> OPEN_PAREN expression CLOSE_PAREN .

    SEMI_COLON      reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    SUM             reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    SUB             reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    MUL             reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    DIV             reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    DECREMENT       reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    INCREMENT       reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    OR              reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    NOT             reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    EQUALS          reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    DIFERENT        reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    GREATER         reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    LESSER          reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    GREATER_OR_EQUALS reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)
    LESSER_OR_EQUALS reduce using rule 44 (expression -> OPEN_PAREN expression CLOSE_PAREN .)


state 86

    (58) array_declaration -> type term OPEN_INTER . NUMBER CLOSE_INTER
    (59) array_declaration -> type term OPEN_INTER . NUMBER CLOSE_INTER assignment_array

    NUMBER          shift and go to state 104


state 87

    (62) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope
    (63) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope ELSE scope

    CLOSE_PAREN     shift and go to state 105


state 88

    (45) condition -> expression . OR expression
    (46) condition -> expression . NOT expression
    (47) condition -> expression . EQUALS expression
    (48) condition -> expression . DIFERENT expression
    (49) condition -> expression . GREATER expression
    (50) condition -> expression . LESSER expression
    (51) condition -> expression . GREATER_OR_EQUALS expression
    (52) condition -> expression . LESSER_OR_EQUALS expression
    (53) condition -> expression . DIFERENT factor_char
    (54) condition -> expression . EQUALS factor_char
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    OR              shift and go to state 106
    NOT             shift and go to state 107
    EQUALS          shift and go to state 108
    DIFERENT        shift and go to state 109
    GREATER         shift and go to state 110
    LESSER          shift and go to state 111
    GREATER_OR_EQUALS shift and go to state 112
    LESSER_OR_EQUALS shift and go to state 113
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 89

    (75) for_statement -> FOR OPEN_PAREN for_initilizer . SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 114


state 90

    (76) for_initilizer -> assignment .

    SEMI_COLON      reduce using rule 76 (for_initilizer -> assignment .)


state 91

    (31) assignment -> term . ASSING expression
    (32) assignment -> term . ASSING term
    (33) assignment -> term . ASSING factor
    (34) assignment -> term . ASSING factor_char
    (35) assignment -> term . array_index ASSING factor
    (36) assignment -> term . array_index ASSING term
    (37) assignment -> term . array_index ASSING factor_char
    (56) array_index -> . OPEN_INTER factor CLOSE_INTER

    ASSING          shift and go to state 59
    OPEN_INTER      shift and go to state 61

    array_index                    shift and go to state 60

state 92

    (77) do_while_statement -> DO scope WHILE . OPEN_PAREN condition CLOSE_PAREN SEMI_COLON

    OPEN_PAREN      shift and go to state 115


state 93

    (78) while_statement -> WHILE OPEN_PAREN condition . CLOSE_PAREN scope

    CLOSE_PAREN     shift and go to state 116


state 94

    (72) call_function -> IDENTIFIER OPEN_PAREN passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 117


state 95

    (73) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 118


state 96

    (66) passing_param -> term . COMMA passing_param
    (67) passing_param -> term .

    COMMA           shift and go to state 119
    CLOSE_PAREN     reduce using rule 67 (passing_param -> term .)


state 97

    (68) passing_param -> factor . COMMA passing_param
    (69) passing_param -> factor .

    COMMA           shift and go to state 120
    CLOSE_PAREN     reduce using rule 69 (passing_param -> factor .)


state 98

    (29) return_statement -> RETURN expression SEMI_COLON .

    OPEN_PAREN      reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    IF              reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    FOR             reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    DO              reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    WHILE           reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    RETURN          reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    NUMBER          reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    SUB             reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    INT             reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    FLOAT           reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    CHAR            reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    PRINT           reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 29 (return_statement -> RETURN expression SEMI_COLON .)


state 99

    (70) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMI_COLON
    (71) print_statement -> PRINT OPEN_PAREN STRING_LITERAL . COMMA passing_param CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 121
    COMMA           shift and go to state 122


state 100

    (36) assignment -> term array_index ASSING term .

    SEMI_COLON      reduce using rule 36 (assignment -> term array_index ASSING term .)


state 101

    (35) assignment -> term array_index ASSING factor .

    SEMI_COLON      reduce using rule 35 (assignment -> term array_index ASSING factor .)


state 102

    (37) assignment -> term array_index ASSING factor_char .

    SEMI_COLON      reduce using rule 37 (assignment -> term array_index ASSING factor_char .)


state 103

    (56) array_index -> OPEN_INTER factor CLOSE_INTER .

    ASSING          reduce using rule 56 (array_index -> OPEN_INTER factor CLOSE_INTER .)


state 104

    (58) array_declaration -> type term OPEN_INTER NUMBER . CLOSE_INTER
    (59) array_declaration -> type term OPEN_INTER NUMBER . CLOSE_INTER assignment_array

    CLOSE_INTER     shift and go to state 123


state 105

    (62) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope
    (63) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope ELSE scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 124

state 106

    (45) condition -> expression OR . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 125
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 107

    (46) condition -> expression NOT . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 126
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 108

    (47) condition -> expression EQUALS . expression
    (54) condition -> expression EQUALS . factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (16) factor_char -> . CHARACTER
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    CHARACTER       shift and go to state 82
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 127
    factor_char                    shift and go to state 128
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 109

    (48) condition -> expression DIFERENT . expression
    (53) condition -> expression DIFERENT . factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (16) factor_char -> . CHARACTER
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    CHARACTER       shift and go to state 82
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 129
    factor_char                    shift and go to state 130
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 110

    (49) condition -> expression GREATER . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 131
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 111

    (50) condition -> expression LESSER . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 132
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 112

    (51) condition -> expression GREATER_OR_EQUALS . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 133
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 113

    (52) condition -> expression LESSER_OR_EQUALS . expression
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 134
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 114

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON . condition SEMI_COLON expression CLOSE_PAREN scope
    (45) condition -> . expression OR expression
    (46) condition -> . expression NOT expression
    (47) condition -> . expression EQUALS expression
    (48) condition -> . expression DIFERENT expression
    (49) condition -> . expression GREATER expression
    (50) condition -> . expression LESSER expression
    (51) condition -> . expression GREATER_OR_EQUALS expression
    (52) condition -> . expression LESSER_OR_EQUALS expression
    (53) condition -> . expression DIFERENT factor_char
    (54) condition -> . expression EQUALS factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    condition                      shift and go to state 135
    expression                     shift and go to state 88
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 115

    (77) do_while_statement -> DO scope WHILE OPEN_PAREN . condition CLOSE_PAREN SEMI_COLON
    (45) condition -> . expression OR expression
    (46) condition -> . expression NOT expression
    (47) condition -> . expression EQUALS expression
    (48) condition -> . expression DIFERENT expression
    (49) condition -> . expression GREATER expression
    (50) condition -> . expression LESSER expression
    (51) condition -> . expression GREATER_OR_EQUALS expression
    (52) condition -> . expression LESSER_OR_EQUALS expression
    (53) condition -> . expression DIFERENT factor_char
    (54) condition -> . expression EQUALS factor_char
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    condition                      shift and go to state 136
    expression                     shift and go to state 88
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 116

    (78) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 137

state 117

    (72) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 138


state 118

    (73) call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .

    OPEN_PAREN      reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    IF              reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    SUB             reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 73 (call_function -> IDENTIFIER OPEN_PAREN CLOSE_PAREN SEMI_COLON .)


state 119

    (66) passing_param -> term COMMA . passing_param
    (66) passing_param -> . term COMMA passing_param
    (67) passing_param -> . term
    (68) passing_param -> . factor COMMA passing_param
    (69) passing_param -> . factor
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    term                           shift and go to state 96
    passing_param                  shift and go to state 139
    factor                         shift and go to state 97

state 120

    (68) passing_param -> factor COMMA . passing_param
    (66) passing_param -> . term COMMA passing_param
    (67) passing_param -> . term
    (68) passing_param -> . factor COMMA passing_param
    (69) passing_param -> . factor
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    factor                         shift and go to state 97
    passing_param                  shift and go to state 140
    term                           shift and go to state 96

state 121

    (70) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 141


state 122

    (71) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA . passing_param CLOSE_PAREN SEMI_COLON
    (66) passing_param -> . term COMMA passing_param
    (67) passing_param -> . term
    (68) passing_param -> . factor COMMA passing_param
    (69) passing_param -> . factor
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    passing_param                  shift and go to state 142
    term                           shift and go to state 96
    factor                         shift and go to state 97

state 123

    (58) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER .
    (59) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER . assignment_array
    (57) assignment_array -> . ASSING OPEN_INTER sequence CLOSE_INTER

    SEMI_COLON      reduce using rule 58 (array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER .)
    ASSING          shift and go to state 144

    assignment_array               shift and go to state 143

state 124

    (62) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .
    (63) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope . ELSE scope

    OPEN_PAREN      reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    IF              reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    SUB             reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 62 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    ELSE            shift and go to state 145


state 125

    (45) condition -> expression OR expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 45 (condition -> expression OR expression .)
    SEMI_COLON      reduce using rule 45 (condition -> expression OR expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 126

    (46) condition -> expression NOT expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 46 (condition -> expression NOT expression .)
    SEMI_COLON      reduce using rule 46 (condition -> expression NOT expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 127

    (47) condition -> expression EQUALS expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 47 (condition -> expression EQUALS expression .)
    SEMI_COLON      reduce using rule 47 (condition -> expression EQUALS expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 128

    (54) condition -> expression EQUALS factor_char .

    CLOSE_PAREN     reduce using rule 54 (condition -> expression EQUALS factor_char .)
    SEMI_COLON      reduce using rule 54 (condition -> expression EQUALS factor_char .)


state 129

    (48) condition -> expression DIFERENT expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 48 (condition -> expression DIFERENT expression .)
    SEMI_COLON      reduce using rule 48 (condition -> expression DIFERENT expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 130

    (53) condition -> expression DIFERENT factor_char .

    CLOSE_PAREN     reduce using rule 53 (condition -> expression DIFERENT factor_char .)
    SEMI_COLON      reduce using rule 53 (condition -> expression DIFERENT factor_char .)


state 131

    (49) condition -> expression GREATER expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 49 (condition -> expression GREATER expression .)
    SEMI_COLON      reduce using rule 49 (condition -> expression GREATER expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 132

    (50) condition -> expression LESSER expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 50 (condition -> expression LESSER expression .)
    SEMI_COLON      reduce using rule 50 (condition -> expression LESSER expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 133

    (51) condition -> expression GREATER_OR_EQUALS expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 51 (condition -> expression GREATER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 51 (condition -> expression GREATER_OR_EQUALS expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 134

    (52) condition -> expression LESSER_OR_EQUALS expression .
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 52 (condition -> expression LESSER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 52 (condition -> expression LESSER_OR_EQUALS expression .)
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 135

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition . SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 146


state 136

    (77) do_while_statement -> DO scope WHILE OPEN_PAREN condition . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 147


state 137

    (78) while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .

    OPEN_PAREN      reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    IF              reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    DO              reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    WHILE           reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    RETURN          reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    SUB             reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    PRINT           reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 78 (while_statement -> WHILE OPEN_PAREN condition CLOSE_PAREN scope .)


state 138

    (72) call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .

    OPEN_PAREN      reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    IF              reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    SUB             reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 72 (call_function -> IDENTIFIER OPEN_PAREN passing_param CLOSE_PAREN SEMI_COLON .)


state 139

    (66) passing_param -> term COMMA passing_param .

    CLOSE_PAREN     reduce using rule 66 (passing_param -> term COMMA passing_param .)


state 140

    (68) passing_param -> factor COMMA passing_param .

    CLOSE_PAREN     reduce using rule 68 (passing_param -> factor COMMA passing_param .)


state 141

    (70) print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .

    OPEN_PAREN      reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    IF              reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    SUB             reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 70 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMI_COLON .)


state 142

    (71) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param . CLOSE_PAREN SEMI_COLON

    CLOSE_PAREN     shift and go to state 148


state 143

    (59) array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array .

    SEMI_COLON      reduce using rule 59 (array_declaration -> type term OPEN_INTER NUMBER CLOSE_INTER assignment_array .)


state 144

    (57) assignment_array -> ASSING . OPEN_INTER sequence CLOSE_INTER

    OPEN_INTER      shift and go to state 149


state 145

    (63) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 150

state 146

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON . expression CLOSE_PAREN scope
    (17) expression -> . term
    (18) expression -> . factor
    (38) expression -> . expression SUM expression
    (39) expression -> . expression SUB expression
    (40) expression -> . expression MUL expression
    (41) expression -> . expression DIV expression
    (42) expression -> . expression DECREMENT
    (43) expression -> . expression INCREMENT
    (44) expression -> . OPEN_PAREN expression CLOSE_PAREN
    (19) term -> . IDENTIFIER
    (23) factor -> . NUMBER
    (24) factor -> . SUB NUMBER

    OPEN_PAREN      shift and go to state 35
    IDENTIFIER      shift and go to state 19
    NUMBER          shift and go to state 37
    SUB             shift and go to state 34

    expression                     shift and go to state 151
    term                           shift and go to state 64
    factor                         shift and go to state 33

state 147

    (77) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 152


state 148

    (71) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 153


state 149

    (57) assignment_array -> ASSING OPEN_INTER . sequence CLOSE_INTER
    (25) sequence -> . NUMBER COMMA sequence
    (26) sequence -> . NUMBER
    (27) sequence -> . CHARACTER COMMA sequence
    (28) sequence -> . CHARACTER

    NUMBER          shift and go to state 155
    CHARACTER       shift and go to state 156

    sequence                       shift and go to state 154

state 150

    (63) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .

    OPEN_PAREN      reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    IF              reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FOR             reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    DO              reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    WHILE           reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    IDENTIFIER      reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    RETURN          reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    NUMBER          reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    SUB             reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    INT             reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FLOAT           reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CHAR            reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    PRINT           reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CLOSE_BRAKETS   reduce using rule 63 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)


state 151

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression . CLOSE_PAREN scope
    (38) expression -> expression . SUM expression
    (39) expression -> expression . SUB expression
    (40) expression -> expression . MUL expression
    (41) expression -> expression . DIV expression
    (42) expression -> expression . DECREMENT
    (43) expression -> expression . INCREMENT

    CLOSE_PAREN     shift and go to state 157
    SUM             shift and go to state 50
    SUB             shift and go to state 51
    MUL             shift and go to state 52
    DIV             shift and go to state 53
    DECREMENT       shift and go to state 54
    INCREMENT       shift and go to state 55


state 152

    (77) do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .

    OPEN_PAREN      reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    IF              reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    SUB             reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 77 (do_while_statement -> DO scope WHILE OPEN_PAREN condition CLOSE_PAREN SEMI_COLON .)


state 153

    (71) print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .

    OPEN_PAREN      reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    IF              reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FOR             reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    DO              reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    WHILE           reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    RETURN          reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    NUMBER          reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    SUB             reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    INT             reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    FLOAT           reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CHAR            reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    PRINT           reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 71 (print_statement -> PRINT OPEN_PAREN STRING_LITERAL COMMA passing_param CLOSE_PAREN SEMI_COLON .)


state 154

    (57) assignment_array -> ASSING OPEN_INTER sequence . CLOSE_INTER

    CLOSE_INTER     shift and go to state 158


state 155

    (25) sequence -> NUMBER . COMMA sequence
    (26) sequence -> NUMBER .

    COMMA           shift and go to state 159
    CLOSE_INTER     reduce using rule 26 (sequence -> NUMBER .)


state 156

    (27) sequence -> CHARACTER . COMMA sequence
    (28) sequence -> CHARACTER .

    COMMA           shift and go to state 160
    CLOSE_INTER     reduce using rule 28 (sequence -> CHARACTER .)


state 157

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 161

state 158

    (57) assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER .

    SEMI_COLON      reduce using rule 57 (assignment_array -> ASSING OPEN_INTER sequence CLOSE_INTER .)


state 159

    (25) sequence -> NUMBER COMMA . sequence
    (25) sequence -> . NUMBER COMMA sequence
    (26) sequence -> . NUMBER
    (27) sequence -> . CHARACTER COMMA sequence
    (28) sequence -> . CHARACTER

    NUMBER          shift and go to state 155
    CHARACTER       shift and go to state 156

    sequence                       shift and go to state 162

state 160

    (27) sequence -> CHARACTER COMMA . sequence
    (25) sequence -> . NUMBER COMMA sequence
    (26) sequence -> . NUMBER
    (27) sequence -> . CHARACTER COMMA sequence
    (28) sequence -> . CHARACTER

    NUMBER          shift and go to state 155
    CHARACTER       shift and go to state 156

    sequence                       shift and go to state 163

state 161

    (75) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .

    OPEN_PAREN      reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    IF              reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FOR             reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    DO              reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    WHILE           reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    RETURN          reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    NUMBER          reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    SUB             reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    INT             reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FLOAT           reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CHAR            reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    PRINT           reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 75 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)


state 162

    (25) sequence -> NUMBER COMMA sequence .

    CLOSE_INTER     reduce using rule 25 (sequence -> NUMBER COMMA sequence .)


state 163

    (27) sequence -> CHARACTER COMMA sequence .

    CLOSE_INTER     reduce using rule 27 (sequence -> CHARACTER COMMA sequence .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 74 resolved as shift
WARNING: shift/reduce conflict for SUB in state 74 resolved as shift
WARNING: shift/reduce conflict for MUL in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV in state 74 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for SUM in state 75 resolved as shift
WARNING: shift/reduce conflict for SUB in state 75 resolved as shift
WARNING: shift/reduce conflict for MUL in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 75 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 75 resolved as shift
WARNING: shift/reduce conflict for SUM in state 76 resolved as shift
WARNING: shift/reduce conflict for SUB in state 76 resolved as shift
WARNING: shift/reduce conflict for MUL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 76 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 76 resolved as shift
WARNING: shift/reduce conflict for SUM in state 77 resolved as shift
WARNING: shift/reduce conflict for SUB in state 77 resolved as shift
WARNING: shift/reduce conflict for MUL in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 77 resolved as shift
WARNING: reduce/reduce conflict in state 78 resolved using rule (expression -> term)
WARNING: rejected rule (assignment -> term ASSING term) in state 78
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> factor)
WARNING: rejected rule (assignment -> term ASSING factor) in state 80
WARNING: Rule (assignment -> term ASSING term) is never reduced
WARNING: Rule (assignment -> term ASSING factor) is never reduced
