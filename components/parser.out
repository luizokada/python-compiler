Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    DO
    DOUBLE
    PRINT
    RETURN
    WHILE

Grammar

Rule 0     S' -> main
Rule 1     main -> type MAIN param scope
Rule 2     scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS
Rule 3     new_scope -> <empty>
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     statement -> expression SEMI_COLON
Rule 7     statement -> assignment SEMI_COLON
Rule 8     statement -> declaration SEMI_COLON
Rule 9     statement -> if_statement
Rule 10    statement -> for_statement
Rule 11    assignment -> term ASSING expression
Rule 12    assignment -> term ASSING term
Rule 13    assignment -> term ASSING factor
Rule 14    expression -> expression SUM expression
Rule 15    expression -> expression SUB expression
Rule 16    expression -> expression MUL expression
Rule 17    expression -> expression DIV expression
Rule 18    expression -> expression DECREMENT
Rule 19    expression -> expression INCREMENT
Rule 20    expression -> term
Rule 21    expression -> factor
Rule 22    term -> IDENTIFIER
Rule 23    for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
Rule 24    for_initilizer -> assignment
Rule 25    for_initilizer -> declaration
Rule 26    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope
Rule 27    if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
Rule 28    factor -> NUMBER
Rule 29    type -> INT
Rule 30    type -> FLOAT
Rule 31    type -> CHAR
Rule 32    condition -> expression OR expression
Rule 33    condition -> expression NOT expression
Rule 34    condition -> expression EQUALS expression
Rule 35    condition -> expression GREATER expression
Rule 36    condition -> expression LESSER expression
Rule 37    condition -> expression GREATER_OR_EQUALS expression
Rule 38    condition -> expression LESSER_OR_EQUALS expression
Rule 39    declaration -> type term
Rule 40    declaration -> type assignment
Rule 41    declarations -> declaration COMMA declarations
Rule 42    declarations -> declaration
Rule 43    param -> OPEN_PAREN declarations CLOSE_PAREN
Rule 44    param -> OPEN_PAREN CLOSE_PAREN

Terminals, with rules where they appear

AND                  : 
ASSING               : 11 12 13
BREAK                : 
CHAR                 : 31
CLOSE_BRAKETS        : 2
CLOSE_PAREN          : 23 26 27 43 44
COMMA                : 41
DECREMENT            : 18
DIV                  : 17
DO                   : 
DOUBLE               : 
ELSE                 : 27
EQUALS               : 34
FLOAT                : 30
FOR                  : 23
GREATER              : 35
GREATER_OR_EQUALS    : 37
IDENTIFIER           : 22
IF                   : 26 27
INCREMENT            : 19
INT                  : 29
LESSER               : 36
LESSER_OR_EQUALS     : 38
MAIN                 : 1
MUL                  : 16
NOT                  : 33
NUMBER               : 28
OPEN_BRAKETS         : 2
OPEN_PAREN           : 23 26 27 43 44
OR                   : 32
PRINT                : 
RETURN               : 
SEMI_COLON           : 6 7 8 23 23
SUB                  : 15
SUM                  : 14
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 7 24 40
condition            : 23 26 27
declaration          : 8 25 41 42
declarations         : 41 43
expression           : 6 11 14 14 15 15 16 16 17 17 18 19 23 32 32 33 33 34 34 35 35 36 36 37 37 38 38
factor               : 13 21
for_initilizer       : 23
for_statement        : 10
if_statement         : 9
main                 : 0
new_scope            : 2
param                : 1
scope                : 1 23 26 27 27
statement            : 4 5
statements           : 2 4
term                 : 11 12 12 13 20 39
type                 : 1 39 40

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . type MAIN param scope
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    main                           shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> main .



state 2

    (1) main -> type . MAIN param scope

    MAIN            shift and go to state 6


state 3

    (29) type -> INT .

    MAIN            reduce using rule 29 (type -> INT .)
    IDENTIFIER      reduce using rule 29 (type -> INT .)


state 4

    (30) type -> FLOAT .

    MAIN            reduce using rule 30 (type -> FLOAT .)
    IDENTIFIER      reduce using rule 30 (type -> FLOAT .)


state 5

    (31) type -> CHAR .

    MAIN            reduce using rule 31 (type -> CHAR .)
    IDENTIFIER      reduce using rule 31 (type -> CHAR .)


state 6

    (1) main -> type MAIN . param scope
    (43) param -> . OPEN_PAREN declarations CLOSE_PAREN
    (44) param -> . OPEN_PAREN CLOSE_PAREN

    OPEN_PAREN      shift and go to state 8

    param                          shift and go to state 7

state 7

    (1) main -> type MAIN param . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 9

state 8

    (43) param -> OPEN_PAREN . declarations CLOSE_PAREN
    (44) param -> OPEN_PAREN . CLOSE_PAREN
    (41) declarations -> . declaration COMMA declarations
    (42) declarations -> . declaration
    (39) declaration -> . type term
    (40) declaration -> . type assignment
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    CLOSE_PAREN     shift and go to state 12
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declarations                   shift and go to state 11
    declaration                    shift and go to state 13
    type                           shift and go to state 14

state 9

    (1) main -> type MAIN param scope .

    $end            reduce using rule 1 (main -> type MAIN param scope .)


state 10

    (2) scope -> OPEN_BRAKETS . new_scope statements CLOSE_BRAKETS
    (3) new_scope -> .

    IF              reduce using rule 3 (new_scope -> .)
    FOR             reduce using rule 3 (new_scope -> .)
    IDENTIFIER      reduce using rule 3 (new_scope -> .)
    NUMBER          reduce using rule 3 (new_scope -> .)
    INT             reduce using rule 3 (new_scope -> .)
    FLOAT           reduce using rule 3 (new_scope -> .)
    CHAR            reduce using rule 3 (new_scope -> .)

    new_scope                      shift and go to state 15

state 11

    (43) param -> OPEN_PAREN declarations . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 16


state 12

    (44) param -> OPEN_PAREN CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 44 (param -> OPEN_PAREN CLOSE_PAREN .)


state 13

    (41) declarations -> declaration . COMMA declarations
    (42) declarations -> declaration .

    COMMA           shift and go to state 17
    CLOSE_PAREN     reduce using rule 42 (declarations -> declaration .)


state 14

    (39) declaration -> type . term
    (40) declaration -> type . assignment
    (22) term -> . IDENTIFIER
    (11) assignment -> . term ASSING expression
    (12) assignment -> . term ASSING term
    (13) assignment -> . term ASSING factor

    IDENTIFIER      shift and go to state 20

    term                           shift and go to state 18
    assignment                     shift and go to state 19

state 15

    (2) scope -> OPEN_BRAKETS new_scope . statements CLOSE_BRAKETS
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . if_statement
    (10) statement -> . for_statement
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (11) assignment -> . term ASSING expression
    (12) assignment -> . term ASSING term
    (13) assignment -> . term ASSING factor
    (39) declaration -> . type term
    (40) declaration -> . type assignment
    (26) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (27) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (23) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    IF              shift and go to state 30
    FOR             shift and go to state 31
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    statements                     shift and go to state 21
    statement                      shift and go to state 22
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    term                           shift and go to state 28
    factor                         shift and go to state 29
    type                           shift and go to state 14

state 16

    (43) param -> OPEN_PAREN declarations CLOSE_PAREN .

    OPEN_BRAKETS    reduce using rule 43 (param -> OPEN_PAREN declarations CLOSE_PAREN .)


state 17

    (41) declarations -> declaration COMMA . declarations
    (41) declarations -> . declaration COMMA declarations
    (42) declarations -> . declaration
    (39) declaration -> . type term
    (40) declaration -> . type assignment
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    declaration                    shift and go to state 13
    declarations                   shift and go to state 33
    type                           shift and go to state 14

state 18

    (39) declaration -> type term .
    (11) assignment -> term . ASSING expression
    (12) assignment -> term . ASSING term
    (13) assignment -> term . ASSING factor

    COMMA           reduce using rule 39 (declaration -> type term .)
    CLOSE_PAREN     reduce using rule 39 (declaration -> type term .)
    SEMI_COLON      reduce using rule 39 (declaration -> type term .)
    ASSING          shift and go to state 34


state 19

    (40) declaration -> type assignment .

    COMMA           reduce using rule 40 (declaration -> type assignment .)
    CLOSE_PAREN     reduce using rule 40 (declaration -> type assignment .)
    SEMI_COLON      reduce using rule 40 (declaration -> type assignment .)


state 20

    (22) term -> IDENTIFIER .

    ASSING          reduce using rule 22 (term -> IDENTIFIER .)
    COMMA           reduce using rule 22 (term -> IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 22 (term -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 22 (term -> IDENTIFIER .)
    SUM             reduce using rule 22 (term -> IDENTIFIER .)
    SUB             reduce using rule 22 (term -> IDENTIFIER .)
    MUL             reduce using rule 22 (term -> IDENTIFIER .)
    DIV             reduce using rule 22 (term -> IDENTIFIER .)
    DECREMENT       reduce using rule 22 (term -> IDENTIFIER .)
    INCREMENT       reduce using rule 22 (term -> IDENTIFIER .)
    OR              reduce using rule 22 (term -> IDENTIFIER .)
    NOT             reduce using rule 22 (term -> IDENTIFIER .)
    EQUALS          reduce using rule 22 (term -> IDENTIFIER .)
    GREATER         reduce using rule 22 (term -> IDENTIFIER .)
    LESSER          reduce using rule 22 (term -> IDENTIFIER .)
    GREATER_OR_EQUALS reduce using rule 22 (term -> IDENTIFIER .)
    LESSER_OR_EQUALS reduce using rule 22 (term -> IDENTIFIER .)


state 21

    (2) scope -> OPEN_BRAKETS new_scope statements . CLOSE_BRAKETS

    CLOSE_BRAKETS   shift and go to state 35


state 22

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . expression SEMI_COLON
    (7) statement -> . assignment SEMI_COLON
    (8) statement -> . declaration SEMI_COLON
    (9) statement -> . if_statement
    (10) statement -> . for_statement
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (11) assignment -> . term ASSING expression
    (12) assignment -> . term ASSING term
    (13) assignment -> . term ASSING factor
    (39) declaration -> . type term
    (40) declaration -> . type assignment
    (26) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope
    (27) if_statement -> . IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope
    (23) for_statement -> . FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    CLOSE_BRAKETS   reduce using rule 5 (statements -> statement .)
    IF              shift and go to state 30
    FOR             shift and go to state 31
    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    statement                      shift and go to state 22
    statements                     shift and go to state 36
    expression                     shift and go to state 23
    assignment                     shift and go to state 24
    declaration                    shift and go to state 25
    if_statement                   shift and go to state 26
    for_statement                  shift and go to state 27
    term                           shift and go to state 28
    factor                         shift and go to state 29
    type                           shift and go to state 14

state 23

    (6) statement -> expression . SEMI_COLON
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    SEMI_COLON      shift and go to state 37
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 24

    (7) statement -> assignment . SEMI_COLON

    SEMI_COLON      shift and go to state 44


state 25

    (8) statement -> declaration . SEMI_COLON

    SEMI_COLON      shift and go to state 45


state 26

    (9) statement -> if_statement .

    IF              reduce using rule 9 (statement -> if_statement .)
    FOR             reduce using rule 9 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> if_statement .)
    NUMBER          reduce using rule 9 (statement -> if_statement .)
    INT             reduce using rule 9 (statement -> if_statement .)
    FLOAT           reduce using rule 9 (statement -> if_statement .)
    CHAR            reduce using rule 9 (statement -> if_statement .)
    CLOSE_BRAKETS   reduce using rule 9 (statement -> if_statement .)


state 27

    (10) statement -> for_statement .

    IF              reduce using rule 10 (statement -> for_statement .)
    FOR             reduce using rule 10 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> for_statement .)
    NUMBER          reduce using rule 10 (statement -> for_statement .)
    INT             reduce using rule 10 (statement -> for_statement .)
    FLOAT           reduce using rule 10 (statement -> for_statement .)
    CHAR            reduce using rule 10 (statement -> for_statement .)
    CLOSE_BRAKETS   reduce using rule 10 (statement -> for_statement .)


state 28

    (20) expression -> term .
    (11) assignment -> term . ASSING expression
    (12) assignment -> term . ASSING term
    (13) assignment -> term . ASSING factor

    SEMI_COLON      reduce using rule 20 (expression -> term .)
    SUM             reduce using rule 20 (expression -> term .)
    SUB             reduce using rule 20 (expression -> term .)
    MUL             reduce using rule 20 (expression -> term .)
    DIV             reduce using rule 20 (expression -> term .)
    DECREMENT       reduce using rule 20 (expression -> term .)
    INCREMENT       reduce using rule 20 (expression -> term .)
    ASSING          shift and go to state 34


state 29

    (21) expression -> factor .

    SEMI_COLON      reduce using rule 21 (expression -> factor .)
    SUM             reduce using rule 21 (expression -> factor .)
    SUB             reduce using rule 21 (expression -> factor .)
    MUL             reduce using rule 21 (expression -> factor .)
    DIV             reduce using rule 21 (expression -> factor .)
    DECREMENT       reduce using rule 21 (expression -> factor .)
    INCREMENT       reduce using rule 21 (expression -> factor .)
    COMMA           reduce using rule 21 (expression -> factor .)
    CLOSE_PAREN     reduce using rule 21 (expression -> factor .)
    OR              reduce using rule 21 (expression -> factor .)
    NOT             reduce using rule 21 (expression -> factor .)
    EQUALS          reduce using rule 21 (expression -> factor .)
    GREATER         reduce using rule 21 (expression -> factor .)
    LESSER          reduce using rule 21 (expression -> factor .)
    GREATER_OR_EQUALS reduce using rule 21 (expression -> factor .)
    LESSER_OR_EQUALS reduce using rule 21 (expression -> factor .)


state 30

    (26) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope
    (27) if_statement -> IF . OPEN_PAREN condition CLOSE_PAREN scope ELSE scope

    OPEN_PAREN      shift and go to state 46


state 31

    (23) for_statement -> FOR . OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    OPEN_PAREN      shift and go to state 47


state 32

    (28) factor -> NUMBER .

    SEMI_COLON      reduce using rule 28 (factor -> NUMBER .)
    SUM             reduce using rule 28 (factor -> NUMBER .)
    SUB             reduce using rule 28 (factor -> NUMBER .)
    MUL             reduce using rule 28 (factor -> NUMBER .)
    DIV             reduce using rule 28 (factor -> NUMBER .)
    DECREMENT       reduce using rule 28 (factor -> NUMBER .)
    INCREMENT       reduce using rule 28 (factor -> NUMBER .)
    COMMA           reduce using rule 28 (factor -> NUMBER .)
    CLOSE_PAREN     reduce using rule 28 (factor -> NUMBER .)
    OR              reduce using rule 28 (factor -> NUMBER .)
    NOT             reduce using rule 28 (factor -> NUMBER .)
    EQUALS          reduce using rule 28 (factor -> NUMBER .)
    GREATER         reduce using rule 28 (factor -> NUMBER .)
    LESSER          reduce using rule 28 (factor -> NUMBER .)
    GREATER_OR_EQUALS reduce using rule 28 (factor -> NUMBER .)
    LESSER_OR_EQUALS reduce using rule 28 (factor -> NUMBER .)


state 33

    (41) declarations -> declaration COMMA declarations .

    CLOSE_PAREN     reduce using rule 41 (declarations -> declaration COMMA declarations .)


state 34

    (11) assignment -> term ASSING . expression
    (12) assignment -> term ASSING . term
    (13) assignment -> term ASSING . factor
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    term                           shift and go to state 48
    expression                     shift and go to state 49
    factor                         shift and go to state 50

state 35

    (2) scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .

    $end            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    ELSE            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IF              reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FOR             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    IDENTIFIER      reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    NUMBER          reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    INT             reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    FLOAT           reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CHAR            reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)
    CLOSE_BRAKETS   reduce using rule 2 (scope -> OPEN_BRAKETS new_scope statements CLOSE_BRAKETS .)


state 36

    (4) statements -> statement statements .

    CLOSE_BRAKETS   reduce using rule 4 (statements -> statement statements .)


state 37

    (6) statement -> expression SEMI_COLON .

    IF              reduce using rule 6 (statement -> expression SEMI_COLON .)
    FOR             reduce using rule 6 (statement -> expression SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (statement -> expression SEMI_COLON .)
    NUMBER          reduce using rule 6 (statement -> expression SEMI_COLON .)
    INT             reduce using rule 6 (statement -> expression SEMI_COLON .)
    FLOAT           reduce using rule 6 (statement -> expression SEMI_COLON .)
    CHAR            reduce using rule 6 (statement -> expression SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 6 (statement -> expression SEMI_COLON .)


state 38

    (14) expression -> expression SUM . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 51
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 39

    (15) expression -> expression SUB . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 53
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 40

    (16) expression -> expression MUL . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 54
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 41

    (17) expression -> expression DIV . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 55
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 42

    (18) expression -> expression DECREMENT .

    SEMI_COLON      reduce using rule 18 (expression -> expression DECREMENT .)
    SUM             reduce using rule 18 (expression -> expression DECREMENT .)
    SUB             reduce using rule 18 (expression -> expression DECREMENT .)
    MUL             reduce using rule 18 (expression -> expression DECREMENT .)
    DIV             reduce using rule 18 (expression -> expression DECREMENT .)
    DECREMENT       reduce using rule 18 (expression -> expression DECREMENT .)
    INCREMENT       reduce using rule 18 (expression -> expression DECREMENT .)
    COMMA           reduce using rule 18 (expression -> expression DECREMENT .)
    CLOSE_PAREN     reduce using rule 18 (expression -> expression DECREMENT .)
    OR              reduce using rule 18 (expression -> expression DECREMENT .)
    NOT             reduce using rule 18 (expression -> expression DECREMENT .)
    EQUALS          reduce using rule 18 (expression -> expression DECREMENT .)
    GREATER         reduce using rule 18 (expression -> expression DECREMENT .)
    LESSER          reduce using rule 18 (expression -> expression DECREMENT .)
    GREATER_OR_EQUALS reduce using rule 18 (expression -> expression DECREMENT .)
    LESSER_OR_EQUALS reduce using rule 18 (expression -> expression DECREMENT .)


state 43

    (19) expression -> expression INCREMENT .

    SEMI_COLON      reduce using rule 19 (expression -> expression INCREMENT .)
    SUM             reduce using rule 19 (expression -> expression INCREMENT .)
    SUB             reduce using rule 19 (expression -> expression INCREMENT .)
    MUL             reduce using rule 19 (expression -> expression INCREMENT .)
    DIV             reduce using rule 19 (expression -> expression INCREMENT .)
    DECREMENT       reduce using rule 19 (expression -> expression INCREMENT .)
    INCREMENT       reduce using rule 19 (expression -> expression INCREMENT .)
    COMMA           reduce using rule 19 (expression -> expression INCREMENT .)
    CLOSE_PAREN     reduce using rule 19 (expression -> expression INCREMENT .)
    OR              reduce using rule 19 (expression -> expression INCREMENT .)
    NOT             reduce using rule 19 (expression -> expression INCREMENT .)
    EQUALS          reduce using rule 19 (expression -> expression INCREMENT .)
    GREATER         reduce using rule 19 (expression -> expression INCREMENT .)
    LESSER          reduce using rule 19 (expression -> expression INCREMENT .)
    GREATER_OR_EQUALS reduce using rule 19 (expression -> expression INCREMENT .)
    LESSER_OR_EQUALS reduce using rule 19 (expression -> expression INCREMENT .)


state 44

    (7) statement -> assignment SEMI_COLON .

    IF              reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FOR             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment SEMI_COLON .)
    NUMBER          reduce using rule 7 (statement -> assignment SEMI_COLON .)
    INT             reduce using rule 7 (statement -> assignment SEMI_COLON .)
    FLOAT           reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CHAR            reduce using rule 7 (statement -> assignment SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 7 (statement -> assignment SEMI_COLON .)


state 45

    (8) statement -> declaration SEMI_COLON .

    IF              reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FOR             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    IDENTIFIER      reduce using rule 8 (statement -> declaration SEMI_COLON .)
    NUMBER          reduce using rule 8 (statement -> declaration SEMI_COLON .)
    INT             reduce using rule 8 (statement -> declaration SEMI_COLON .)
    FLOAT           reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CHAR            reduce using rule 8 (statement -> declaration SEMI_COLON .)
    CLOSE_BRAKETS   reduce using rule 8 (statement -> declaration SEMI_COLON .)


state 46

    (26) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope
    (27) if_statement -> IF OPEN_PAREN . condition CLOSE_PAREN scope ELSE scope
    (32) condition -> . expression OR expression
    (33) condition -> . expression NOT expression
    (34) condition -> . expression EQUALS expression
    (35) condition -> . expression GREATER expression
    (36) condition -> . expression LESSER expression
    (37) condition -> . expression GREATER_OR_EQUALS expression
    (38) condition -> . expression LESSER_OR_EQUALS expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    condition                      shift and go to state 56
    expression                     shift and go to state 57
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 47

    (23) for_statement -> FOR OPEN_PAREN . for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope
    (24) for_initilizer -> . assignment
    (25) for_initilizer -> . declaration
    (11) assignment -> . term ASSING expression
    (12) assignment -> . term ASSING term
    (13) assignment -> . term ASSING factor
    (39) declaration -> . type term
    (40) declaration -> . type assignment
    (22) term -> . IDENTIFIER
    (29) type -> . INT
    (30) type -> . FLOAT
    (31) type -> . CHAR

    IDENTIFIER      shift and go to state 20
    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5

    for_initilizer                 shift and go to state 58
    assignment                     shift and go to state 59
    declaration                    shift and go to state 60
    term                           shift and go to state 61
    type                           shift and go to state 14

state 48

    (12) assignment -> term ASSING term .
    (20) expression -> term .

  ! reduce/reduce conflict for COMMA resolved using rule 12 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 12 (assignment -> term ASSING term .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 12 (assignment -> term ASSING term .)
    COMMA           reduce using rule 12 (assignment -> term ASSING term .)
    CLOSE_PAREN     reduce using rule 12 (assignment -> term ASSING term .)
    SEMI_COLON      reduce using rule 12 (assignment -> term ASSING term .)
    SUM             reduce using rule 20 (expression -> term .)
    SUB             reduce using rule 20 (expression -> term .)
    MUL             reduce using rule 20 (expression -> term .)
    DIV             reduce using rule 20 (expression -> term .)
    DECREMENT       reduce using rule 20 (expression -> term .)
    INCREMENT       reduce using rule 20 (expression -> term .)

  ! COMMA           [ reduce using rule 20 (expression -> term .) ]
  ! CLOSE_PAREN     [ reduce using rule 20 (expression -> term .) ]
  ! SEMI_COLON      [ reduce using rule 20 (expression -> term .) ]


state 49

    (11) assignment -> term ASSING expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    COMMA           reduce using rule 11 (assignment -> term ASSING expression .)
    CLOSE_PAREN     reduce using rule 11 (assignment -> term ASSING expression .)
    SEMI_COLON      reduce using rule 11 (assignment -> term ASSING expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 50

    (13) assignment -> term ASSING factor .
    (21) expression -> factor .

  ! reduce/reduce conflict for COMMA resolved using rule 13 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 13 (assignment -> term ASSING factor .)
  ! reduce/reduce conflict for SEMI_COLON resolved using rule 13 (assignment -> term ASSING factor .)
    COMMA           reduce using rule 13 (assignment -> term ASSING factor .)
    CLOSE_PAREN     reduce using rule 13 (assignment -> term ASSING factor .)
    SEMI_COLON      reduce using rule 13 (assignment -> term ASSING factor .)
    SUM             reduce using rule 21 (expression -> factor .)
    SUB             reduce using rule 21 (expression -> factor .)
    MUL             reduce using rule 21 (expression -> factor .)
    DIV             reduce using rule 21 (expression -> factor .)
    DECREMENT       reduce using rule 21 (expression -> factor .)
    INCREMENT       reduce using rule 21 (expression -> factor .)

  ! COMMA           [ reduce using rule 21 (expression -> factor .) ]
  ! CLOSE_PAREN     [ reduce using rule 21 (expression -> factor .) ]
  ! SEMI_COLON      [ reduce using rule 21 (expression -> factor .) ]


state 51

    (14) expression -> expression SUM expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 14 (expression -> expression SUM expression .)
    COMMA           reduce using rule 14 (expression -> expression SUM expression .)
    CLOSE_PAREN     reduce using rule 14 (expression -> expression SUM expression .)
    OR              reduce using rule 14 (expression -> expression SUM expression .)
    NOT             reduce using rule 14 (expression -> expression SUM expression .)
    EQUALS          reduce using rule 14 (expression -> expression SUM expression .)
    GREATER         reduce using rule 14 (expression -> expression SUM expression .)
    LESSER          reduce using rule 14 (expression -> expression SUM expression .)
    GREATER_OR_EQUALS reduce using rule 14 (expression -> expression SUM expression .)
    LESSER_OR_EQUALS reduce using rule 14 (expression -> expression SUM expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43

  ! SUM             [ reduce using rule 14 (expression -> expression SUM expression .) ]
  ! SUB             [ reduce using rule 14 (expression -> expression SUM expression .) ]
  ! MUL             [ reduce using rule 14 (expression -> expression SUM expression .) ]
  ! DIV             [ reduce using rule 14 (expression -> expression SUM expression .) ]
  ! DECREMENT       [ reduce using rule 14 (expression -> expression SUM expression .) ]
  ! INCREMENT       [ reduce using rule 14 (expression -> expression SUM expression .) ]


state 52

    (20) expression -> term .

    SUM             reduce using rule 20 (expression -> term .)
    SUB             reduce using rule 20 (expression -> term .)
    MUL             reduce using rule 20 (expression -> term .)
    DIV             reduce using rule 20 (expression -> term .)
    DECREMENT       reduce using rule 20 (expression -> term .)
    INCREMENT       reduce using rule 20 (expression -> term .)
    SEMI_COLON      reduce using rule 20 (expression -> term .)
    COMMA           reduce using rule 20 (expression -> term .)
    CLOSE_PAREN     reduce using rule 20 (expression -> term .)
    OR              reduce using rule 20 (expression -> term .)
    NOT             reduce using rule 20 (expression -> term .)
    EQUALS          reduce using rule 20 (expression -> term .)
    GREATER         reduce using rule 20 (expression -> term .)
    LESSER          reduce using rule 20 (expression -> term .)
    GREATER_OR_EQUALS reduce using rule 20 (expression -> term .)
    LESSER_OR_EQUALS reduce using rule 20 (expression -> term .)


state 53

    (15) expression -> expression SUB expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 15 (expression -> expression SUB expression .)
    COMMA           reduce using rule 15 (expression -> expression SUB expression .)
    CLOSE_PAREN     reduce using rule 15 (expression -> expression SUB expression .)
    OR              reduce using rule 15 (expression -> expression SUB expression .)
    NOT             reduce using rule 15 (expression -> expression SUB expression .)
    EQUALS          reduce using rule 15 (expression -> expression SUB expression .)
    GREATER         reduce using rule 15 (expression -> expression SUB expression .)
    LESSER          reduce using rule 15 (expression -> expression SUB expression .)
    GREATER_OR_EQUALS reduce using rule 15 (expression -> expression SUB expression .)
    LESSER_OR_EQUALS reduce using rule 15 (expression -> expression SUB expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43

  ! SUM             [ reduce using rule 15 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 15 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 15 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 15 (expression -> expression SUB expression .) ]
  ! DECREMENT       [ reduce using rule 15 (expression -> expression SUB expression .) ]
  ! INCREMENT       [ reduce using rule 15 (expression -> expression SUB expression .) ]


state 54

    (16) expression -> expression MUL expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 16 (expression -> expression MUL expression .)
    COMMA           reduce using rule 16 (expression -> expression MUL expression .)
    CLOSE_PAREN     reduce using rule 16 (expression -> expression MUL expression .)
    OR              reduce using rule 16 (expression -> expression MUL expression .)
    NOT             reduce using rule 16 (expression -> expression MUL expression .)
    EQUALS          reduce using rule 16 (expression -> expression MUL expression .)
    GREATER         reduce using rule 16 (expression -> expression MUL expression .)
    LESSER          reduce using rule 16 (expression -> expression MUL expression .)
    GREATER_OR_EQUALS reduce using rule 16 (expression -> expression MUL expression .)
    LESSER_OR_EQUALS reduce using rule 16 (expression -> expression MUL expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43

  ! SUM             [ reduce using rule 16 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 16 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 16 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 16 (expression -> expression MUL expression .) ]
  ! DECREMENT       [ reduce using rule 16 (expression -> expression MUL expression .) ]
  ! INCREMENT       [ reduce using rule 16 (expression -> expression MUL expression .) ]


state 55

    (17) expression -> expression DIV expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
    SEMI_COLON      reduce using rule 17 (expression -> expression DIV expression .)
    COMMA           reduce using rule 17 (expression -> expression DIV expression .)
    CLOSE_PAREN     reduce using rule 17 (expression -> expression DIV expression .)
    OR              reduce using rule 17 (expression -> expression DIV expression .)
    NOT             reduce using rule 17 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 17 (expression -> expression DIV expression .)
    GREATER         reduce using rule 17 (expression -> expression DIV expression .)
    LESSER          reduce using rule 17 (expression -> expression DIV expression .)
    GREATER_OR_EQUALS reduce using rule 17 (expression -> expression DIV expression .)
    LESSER_OR_EQUALS reduce using rule 17 (expression -> expression DIV expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43

  ! SUM             [ reduce using rule 17 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 17 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 17 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 17 (expression -> expression DIV expression .) ]
  ! DECREMENT       [ reduce using rule 17 (expression -> expression DIV expression .) ]
  ! INCREMENT       [ reduce using rule 17 (expression -> expression DIV expression .) ]


state 56

    (26) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope
    (27) if_statement -> IF OPEN_PAREN condition . CLOSE_PAREN scope ELSE scope

    CLOSE_PAREN     shift and go to state 62


state 57

    (32) condition -> expression . OR expression
    (33) condition -> expression . NOT expression
    (34) condition -> expression . EQUALS expression
    (35) condition -> expression . GREATER expression
    (36) condition -> expression . LESSER expression
    (37) condition -> expression . GREATER_OR_EQUALS expression
    (38) condition -> expression . LESSER_OR_EQUALS expression
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    OR              shift and go to state 63
    NOT             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESSER          shift and go to state 67
    GREATER_OR_EQUALS shift and go to state 68
    LESSER_OR_EQUALS shift and go to state 69
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 58

    (23) for_statement -> FOR OPEN_PAREN for_initilizer . SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 70


state 59

    (24) for_initilizer -> assignment .

    SEMI_COLON      reduce using rule 24 (for_initilizer -> assignment .)


state 60

    (25) for_initilizer -> declaration .

    SEMI_COLON      reduce using rule 25 (for_initilizer -> declaration .)


state 61

    (11) assignment -> term . ASSING expression
    (12) assignment -> term . ASSING term
    (13) assignment -> term . ASSING factor

    ASSING          shift and go to state 34


state 62

    (26) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope
    (27) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN . scope ELSE scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 71

state 63

    (32) condition -> expression OR . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 72
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 64

    (33) condition -> expression NOT . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 73
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 65

    (34) condition -> expression EQUALS . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 74
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 66

    (35) condition -> expression GREATER . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 75
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 67

    (36) condition -> expression LESSER . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 76
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 68

    (37) condition -> expression GREATER_OR_EQUALS . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 77
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 69

    (38) condition -> expression LESSER_OR_EQUALS . expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 78
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 70

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON . condition SEMI_COLON expression CLOSE_PAREN scope
    (32) condition -> . expression OR expression
    (33) condition -> . expression NOT expression
    (34) condition -> . expression EQUALS expression
    (35) condition -> . expression GREATER expression
    (36) condition -> . expression LESSER expression
    (37) condition -> . expression GREATER_OR_EQUALS expression
    (38) condition -> . expression LESSER_OR_EQUALS expression
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    condition                      shift and go to state 79
    expression                     shift and go to state 57
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 71

    (26) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .
    (27) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope . ELSE scope

    IF              reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FOR             reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    NUMBER          reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    INT             reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    FLOAT           reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CHAR            reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 26 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope .)
    ELSE            shift and go to state 80


state 72

    (32) condition -> expression OR expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 32 (condition -> expression OR expression .)
    SEMI_COLON      reduce using rule 32 (condition -> expression OR expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 73

    (33) condition -> expression NOT expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 33 (condition -> expression NOT expression .)
    SEMI_COLON      reduce using rule 33 (condition -> expression NOT expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 74

    (34) condition -> expression EQUALS expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 34 (condition -> expression EQUALS expression .)
    SEMI_COLON      reduce using rule 34 (condition -> expression EQUALS expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 75

    (35) condition -> expression GREATER expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 35 (condition -> expression GREATER expression .)
    SEMI_COLON      reduce using rule 35 (condition -> expression GREATER expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 76

    (36) condition -> expression LESSER expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 36 (condition -> expression LESSER expression .)
    SEMI_COLON      reduce using rule 36 (condition -> expression LESSER expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 77

    (37) condition -> expression GREATER_OR_EQUALS expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 37 (condition -> expression GREATER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 37 (condition -> expression GREATER_OR_EQUALS expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 78

    (38) condition -> expression LESSER_OR_EQUALS expression .
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     reduce using rule 38 (condition -> expression LESSER_OR_EQUALS expression .)
    SEMI_COLON      reduce using rule 38 (condition -> expression LESSER_OR_EQUALS expression .)
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 79

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition . SEMI_COLON expression CLOSE_PAREN scope

    SEMI_COLON      shift and go to state 81


state 80

    (27) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 82

state 81

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON . expression CLOSE_PAREN scope
    (14) expression -> . expression SUM expression
    (15) expression -> . expression SUB expression
    (16) expression -> . expression MUL expression
    (17) expression -> . expression DIV expression
    (18) expression -> . expression DECREMENT
    (19) expression -> . expression INCREMENT
    (20) expression -> . term
    (21) expression -> . factor
    (22) term -> . IDENTIFIER
    (28) factor -> . NUMBER

    IDENTIFIER      shift and go to state 20
    NUMBER          shift and go to state 32

    expression                     shift and go to state 83
    term                           shift and go to state 52
    factor                         shift and go to state 29

state 82

    (27) if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .

    IF              reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FOR             reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    IDENTIFIER      reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    NUMBER          reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    INT             reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    FLOAT           reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CHAR            reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)
    CLOSE_BRAKETS   reduce using rule 27 (if_statement -> IF OPEN_PAREN condition CLOSE_PAREN scope ELSE scope .)


state 83

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression . CLOSE_PAREN scope
    (14) expression -> expression . SUM expression
    (15) expression -> expression . SUB expression
    (16) expression -> expression . MUL expression
    (17) expression -> expression . DIV expression
    (18) expression -> expression . DECREMENT
    (19) expression -> expression . INCREMENT

    CLOSE_PAREN     shift and go to state 84
    SUM             shift and go to state 38
    SUB             shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41
    DECREMENT       shift and go to state 42
    INCREMENT       shift and go to state 43


state 84

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN . scope
    (2) scope -> . OPEN_BRAKETS new_scope statements CLOSE_BRAKETS

    OPEN_BRAKETS    shift and go to state 10

    scope                          shift and go to state 85

state 85

    (23) for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .

    IF              reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FOR             reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    IDENTIFIER      reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    NUMBER          reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    INT             reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    FLOAT           reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CHAR            reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)
    CLOSE_BRAKETS   reduce using rule 23 (for_statement -> FOR OPEN_PAREN for_initilizer SEMI_COLON condition SEMI_COLON expression CLOSE_PAREN scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 51 resolved as shift
WARNING: shift/reduce conflict for SUB in state 51 resolved as shift
WARNING: shift/reduce conflict for MUL in state 51 resolved as shift
WARNING: shift/reduce conflict for DIV in state 51 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 51 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 51 resolved as shift
WARNING: shift/reduce conflict for SUM in state 53 resolved as shift
WARNING: shift/reduce conflict for SUB in state 53 resolved as shift
WARNING: shift/reduce conflict for MUL in state 53 resolved as shift
WARNING: shift/reduce conflict for DIV in state 53 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 53 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 53 resolved as shift
WARNING: shift/reduce conflict for SUM in state 54 resolved as shift
WARNING: shift/reduce conflict for SUB in state 54 resolved as shift
WARNING: shift/reduce conflict for MUL in state 54 resolved as shift
WARNING: shift/reduce conflict for DIV in state 54 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 54 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 54 resolved as shift
WARNING: shift/reduce conflict for SUM in state 55 resolved as shift
WARNING: shift/reduce conflict for SUB in state 55 resolved as shift
WARNING: shift/reduce conflict for MUL in state 55 resolved as shift
WARNING: shift/reduce conflict for DIV in state 55 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 55 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 55 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (assignment -> term ASSING term)
WARNING: rejected rule (expression -> term) in state 48
WARNING: reduce/reduce conflict in state 50 resolved using rule (assignment -> term ASSING factor)
WARNING: rejected rule (expression -> factor) in state 50
